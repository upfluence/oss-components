---
name: CI
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_VERSION: '20'
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-20.04
    if: (!contains(github.ref, 'refs/heads/master') || contains(github.ref, 'refs/tags/v'))
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm install
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      - name: Lint
        run: pnpm lint:js
      - name: Test
        run: pnpm test:ember
  build:
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.ref, 'refs/tags/v')
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm install
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      - name: Ember Build
        run: pnpm ember build --silent
      - name: Webpack assets workaround fix
        run: |
          cp -R public/assets/fonts app/styles/core
      - name: Storybook Build
        run: pnpm build-storybook --quiet
      - name: Deploy website
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./storybook-static/
          cname: storybook.upfluence.co
  deploy_preview:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'actions/fe-deploy-preview')
    steps:
      - uses: upfluence/gh-downloader@master
        with:
          repo: upfluence/frontend-deployer
          github-token: ${{ secrets.PAT_TOKEN }}
          asset: gh-action-linux-amd64
          output: gh-action
          mode: 0777
      - run: ./gh-action dependency-preview-deployment --target upfluence-web
        shell: bash
        env:
          OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
          OKTA_CLIENT_SECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
      - name: Clean up deployment label
        uses: andymckay/labeler@master
        with:
          remove-labels: 'actions/fe-deploy-preview'
  release:
    name: Release Package
    runs-on: ubuntu-20.04
    needs: test
    if: contains(github.ref, 'refs/tags/v')
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm install
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      - name: Publish
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/.npmrc
          npm publish --access public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
