{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/integration/components/modifiers/enable-input-autofocus-test.js","dummy/tests/integration/components/modifiers/enable-tooltip-test.js","dummy/tests/integration/components/modifiers/on-bottom-reached-test.js","dummy/tests/integration/components/modifiers/scroll-shadow-test.js","dummy/tests/integration/components/o-s-s/access-panel-test.js","dummy/tests/integration/components/o-s-s/alert-test.js","dummy/tests/integration/components/o-s-s/anchor-test.js","dummy/tests/integration/components/o-s-s/array-input-test.js","dummy/tests/integration/components/o-s-s/attribute/base-test.js","dummy/tests/integration/components/o-s-s/attribute/country-test.js","dummy/tests/integration/components/o-s-s/attribute/phone-number-test.js","dummy/tests/integration/components/o-s-s/attribute/rating-test.js","dummy/tests/integration/components/o-s-s/attribute/removable-text-test.js","dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.js","dummy/tests/integration/components/o-s-s/attribute/tag-array-test.js","dummy/tests/integration/components/o-s-s/attribute/text-test.js","dummy/tests/integration/components/o-s-s/attributes-panel-test.js","dummy/tests/integration/components/o-s-s/avatar-group-test.js","dummy/tests/integration/components/o-s-s/avatar-test.js","dummy/tests/integration/components/o-s-s/badge-test.js","dummy/tests/integration/components/o-s-s/banner-test.js","dummy/tests/integration/components/o-s-s/button-dropdown-test.js","dummy/tests/integration/components/o-s-s/button-test.js","dummy/tests/integration/components/o-s-s/carousel-test.js","dummy/tests/integration/components/o-s-s/checkbox-test.js","dummy/tests/integration/components/o-s-s/chip-test.js","dummy/tests/integration/components/o-s-s/code-block-test.js","dummy/tests/integration/components/o-s-s/content-panel-test.js","dummy/tests/integration/components/o-s-s/copy-test.js","dummy/tests/integration/components/o-s-s/country-selector-test.js","dummy/tests/integration/components/o-s-s/currency-input-test.js","dummy/tests/integration/components/o-s-s/dialog-test.js","dummy/tests/integration/components/o-s-s/email-input-test.js","dummy/tests/integration/components/o-s-s/empty-state-test.js","dummy/tests/integration/components/o-s-s/form-test.js","dummy/tests/integration/components/o-s-s/icon-test.js","dummy/tests/integration/components/o-s-s/illustration-test.js","dummy/tests/integration/components/o-s-s/infinite-select-test.js","dummy/tests/integration/components/o-s-s/information-section-test.js","dummy/tests/integration/components/o-s-s/input-container-test.js","dummy/tests/integration/components/o-s-s/input-group-test.js","dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test.js","dummy/tests/integration/components/o-s-s/layout/sidebar-test.js","dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.js","dummy/tests/integration/components/o-s-s/link-test.js","dummy/tests/integration/components/o-s-s/modal-dialog-test.js","dummy/tests/integration/components/o-s-s/modal-test.js","dummy/tests/integration/components/o-s-s/mode-switch-test.js","dummy/tests/integration/components/o-s-s/nav-tab-test.js","dummy/tests/integration/components/o-s-s/number-input-test.js","dummy/tests/integration/components/o-s-s/panel-row-test.js","dummy/tests/integration/components/o-s-s/panel-test.js","dummy/tests/integration/components/o-s-s/password-input-test.js","dummy/tests/integration/components/o-s-s/phone-number-input-test.js","dummy/tests/integration/components/o-s-s/popover-test.js","dummy/tests/integration/components/o-s-s/power-select-test.js","dummy/tests/integration/components/o-s-s/progress-bar-test.js","dummy/tests/integration/components/o-s-s/pulsating-dot-test.js","dummy/tests/integration/components/o-s-s/radio-button-test.js","dummy/tests/integration/components/o-s-s/scrollable-panel-test.js","dummy/tests/integration/components/o-s-s/search-field-test.js","dummy/tests/integration/components/o-s-s/select-test.js","dummy/tests/integration/components/o-s-s/side-panel-test.js","dummy/tests/integration/components/o-s-s/side-panel/header-test.js","dummy/tests/integration/components/o-s-s/skeleton-test.js","dummy/tests/integration/components/o-s-s/slider-test.js","dummy/tests/integration/components/o-s-s/social-post-badge-test.js","dummy/tests/integration/components/o-s-s/split-modal-test.js","dummy/tests/integration/components/o-s-s/star-rating-test.js","dummy/tests/integration/components/o-s-s/tag-test.js","dummy/tests/integration/components/o-s-s/text-area-test.js","dummy/tests/integration/components/o-s-s/togglable-section-test.js","dummy/tests/integration/components/o-s-s/toggle-buttons-test.js","dummy/tests/integration/components/o-s-s/toggle-switch-test.js","dummy/tests/integration/components/o-s-s/upload-area-test.js","dummy/tests/integration/components/o-s-s/upload-item-test.js","dummy/tests/integration/components/o-s-s/url-input-test.js","dummy/tests/integration/helpers/form-field-feedback-test.js","dummy/tests/integration/helpers/redirect-to-test.js","dummy/tests/integration/helpers/stop-propagation-test.js","dummy/tests/integration/helpers/transition-to-test.js","dummy/tests/integration/modifiers/attach-element-test.js","dummy/tests/integration/modifiers/register-form-field-test.js","dummy/tests/test-helper.js","dummy/tests/unit/services/base-uploader-test.js","dummy/tests/unit/services/form-manager-test.js","dummy/tests/unit/services/toast-test.js","dummy/tests/unit/utils/upf-local-storage-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dummy/tests/integration/components/modifiers/enable-input-autofocus-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | modifiers/enable-input-autofocus', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {});\n    (0, _qunit.module)('When adding the modifier to a parent element,', function () {\n      (0, _qunit.test)('it focuses the child input ', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n              <div class=\"test-container\" {{enable-input-autofocus }}>\n                   <input class=\"input\" type=\"text\" />\n              </div>\n            \n        */\n        {\n          \"id\": \"vtcc+nFJ\",\n          \"block\": \"[[[1,\\\"\\\\n      \\\"],[11,0],[24,0,\\\"test-container\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n           \\\"],[10,\\\"input\\\"],[14,0,\\\"input\\\"],[14,4,\\\"text\\\"],[12],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"enable-input-autofocus\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/enable-input-autofocus-test.ts\",\n          \"isStrictMode\": false\n        }));\n        const inputElement = document.querySelector('.input');\n        await assert.equal(document.activeElement, inputElement);\n      });\n      (0, _qunit.test)('it focuses the first enabled input ', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n              <div class=\"test-container\" {{enable-input-autofocus }}>\n                   <input class=\"input\" type=\"text\" disabled/>\n                   <input class=\"input\" type=\"text\" disabled/>\n                   <input class=\"input\" type=\"text\" disabled/>\n                   <input class=\"input\" type=\"text\" />\n              </div>\n            \n        */\n        {\n          \"id\": \"XsYqiqLR\",\n          \"block\": \"[[[1,\\\"\\\\n      \\\"],[11,0],[24,0,\\\"test-container\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n           \\\"],[10,\\\"input\\\"],[14,0,\\\"input\\\"],[14,\\\"disabled\\\",\\\"\\\"],[14,4,\\\"text\\\"],[12],[13],[1,\\\"\\\\n           \\\"],[10,\\\"input\\\"],[14,0,\\\"input\\\"],[14,\\\"disabled\\\",\\\"\\\"],[14,4,\\\"text\\\"],[12],[13],[1,\\\"\\\\n           \\\"],[10,\\\"input\\\"],[14,0,\\\"input\\\"],[14,\\\"disabled\\\",\\\"\\\"],[14,4,\\\"text\\\"],[12],[13],[1,\\\"\\\\n           \\\"],[10,\\\"input\\\"],[14,0,\\\"input\\\"],[14,4,\\\"text\\\"],[12],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"enable-input-autofocus\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/enable-input-autofocus-test.ts\",\n          \"isStrictMode\": false\n        }));\n        const inputElements = document.querySelectorAll('.input');\n        await assert.equal(document.activeElement, inputElements[3]);\n      });\n    });\n    (0, _qunit.test)('When adding the modifier to an input it focuses the selected input ', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"test-container\">\n                 <input class=\"input\" type=\"text\" {{enable-input-autofocus }}/>\n            </div>\n          \n      */\n      {\n        \"id\": \"XRL9B6j2\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"test-container\\\"],[12],[1,\\\"\\\\n           \\\"],[11,\\\"input\\\"],[24,0,\\\"input\\\"],[24,4,\\\"text\\\"],[4,[38,0],null,null],[12],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"enable-input-autofocus\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/enable-input-autofocus-test.ts\",\n        \"isStrictMode\": false\n      }));\n      const inputElement = document.querySelector('.input');\n      await assert.equal(document.activeElement, inputElement);\n    });\n    (0, _qunit.test)('When adding the modifier to a disabled element, it does nothing', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"test-container\" >\n                 <input class=\"input\" type=\"text\" disabled {{enable-input-autofocus }}/>\n            </div>\n          \n      */\n      {\n        \"id\": \"/kP5VjHi\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"test-container\\\"],[12],[1,\\\"\\\\n           \\\"],[11,\\\"input\\\"],[24,0,\\\"input\\\"],[24,\\\"disabled\\\",\\\"\\\"],[24,4,\\\"text\\\"],[4,[38,0],null,null],[12],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"enable-input-autofocus\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/enable-input-autofocus-test.ts\",\n        \"isStrictMode\": false\n      }));\n      const selectedInput = document.querySelector('.input');\n      await assert.notEqual(document.activeElement, selectedInput);\n    });\n  });\n});","define(\"dummy/tests/integration/components/modifiers/enable-tooltip-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  const PLACEMENTS = [undefined, 'top', 'bottom', 'left', 'right'];\n  (0, _qunit.module)('Integration | Component | modifiers/enable-tooltip', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.title = 'Title';\n    });\n    async function renderTooltip() {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"test-container\" style=\"height: 20px; width: 40px\"\n                 {{enable-tooltip title=this.title subtitle=this.subtitle placement=this.placement icon=this.icon trigger=this.trigger html=this.html}}>\n            </div>\n          \n      */\n      {\n        \"id\": \"xI8ZYDmx\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[11,0],[24,0,\\\"test-container\\\"],[24,5,\\\"height: 20px; width: 40px\\\"],[4,[38,0],null,[[\\\"title\\\",\\\"subtitle\\\",\\\"placement\\\",\\\"icon\\\",\\\"trigger\\\",\\\"html\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"placement\\\"]],[30,0,[\\\"icon\\\"]],[30,0,[\\\"trigger\\\"]],[30,0,[\\\"html\\\"]]]]],[12],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"enable-tooltip\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/enable-tooltip-test.ts\",\n        \"isStrictMode\": false\n      }));\n    }\n    (0, _qunit.test)(\"it doesn't render when the title is empty\", async function (assert) {\n      this.title = '';\n      await renderTooltip();\n      await assert.tooltip('.test-container').doesNotExist();\n    });\n    (0, _qunit.test)('it renders the correct title', async function (assert) {\n      await renderTooltip();\n      await assert.tooltip('.test-container').hasTitle(this.title);\n    });\n    (0, _qunit.module)('icon attribute', () => {\n      (0, _qunit.test)('it renders the correct icon', async function (assert) {\n        this.icon = 'far fa-wine-glass-alt';\n        await renderTooltip();\n        await assert.tooltip('.test-container').hasIcon(this.icon);\n      });\n      (0, _qunit.test)(\"it doesn't render the icon\", async function (assert) {\n        await renderTooltip();\n        await assert.tooltip('.test-container').doesNotHaveIcon();\n      });\n    });\n    (0, _qunit.module)('subtitle attribute', () => {\n      (0, _qunit.test)('it renders the correct subtitle', async function (assert) {\n        this.subtitle = 'subtitle';\n        await renderTooltip();\n        await assert.tooltip('.test-container').hasSubtitle(this.subtitle);\n      });\n      (0, _qunit.test)(\"it doesn't render the subtitle\", async function (assert) {\n        await renderTooltip();\n        await assert.tooltip('.test-container').doesNotHaveSubtitle();\n      });\n    });\n    (0, _qunit.module)('placement attribute', () => {\n      PLACEMENTS.forEach(placement => {\n        (0, _qunit.test)(`it renders the correct placement ${placement}`, async function (assert) {\n          this.placement = placement;\n          await renderTooltip();\n          await assert.tooltip('.test-container').hasPlacement(placement || 'bottom');\n        });\n      });\n    });\n    (0, _qunit.module)('trigger attribute', () => {\n      (0, _qunit.test)('it renders when hovering and focusing the element with undefined trigger', async function (assert) {\n        await renderTooltip();\n        await assert.tooltip('.test-container').exists();\n        await assert.tooltip('.test-container').exists('focusin');\n      });\n      (0, _qunit.test)('it renders when hovering the element', async function (assert) {\n        this.trigger = 'hover';\n        await renderTooltip();\n        await assert.tooltip('.test-container').exists();\n      });\n      (0, _qunit.test)('it renders when focusing the element', async function (assert) {\n        this.trigger = 'focus';\n        await renderTooltip();\n        await assert.tooltip('.test-container').exists('focusin');\n      });\n    });\n    (0, _qunit.module)('html attribute', () => {\n      (0, _qunit.test)(\"it doesn't render the html safe by default\", async function (assert) {\n        await renderTooltip();\n        await assert.tooltip('.test-container').isNotHtmlSafe();\n      });\n      (0, _qunit.test)('it renders the html safe when the value is true', async function (assert) {\n        this.html = true;\n        await renderTooltip();\n        await assert.tooltip('.test-container').isHtmlSafe();\n      });\n      (0, _qunit.test)(\"it doesn't render the html safe when the value is false\", async function (assert) {\n        this.html = false;\n        await renderTooltip();\n        await assert.tooltip('.test-container').isNotHtmlSafe();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/modifiers/on-bottom-reached-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | modifiers/on-bottom-reached', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it triggers the callback when the bottom of the div is reached', async function (assert) {\n      this.bottomReached = () => {\n        assert.ok(true, 'Entered the bottom reached callback');\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"scrollable\" style=\"background: red; height: 100px; overflow: scroll\"\n                 {{on-bottom-reached this.bottomReached}}>\n              <div style=\"height: 250px\">hello</div>\n            </div>\n          \n      */\n      {\n        \"id\": \"4QGZlHIh\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[11,0],[24,0,\\\"scrollable\\\"],[24,5,\\\"background: red; height: 100px; overflow: scroll\\\"],[4,[38,0],[[30,0,[\\\"bottomReached\\\"]]],null],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"height: 250px\\\"],[12],[1,\\\"hello\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"on-bottom-reached\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/on-bottom-reached-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.scrollTo)('.scrollable', 0, document.querySelector('.scrollable').scrollHeight - document.querySelector('.scrollable').clientHeight);\n    });\n  });\n});","define(\"dummy/tests/integration/components/modifiers/scroll-shadow-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | modifiers/scroll-shadow', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const itemNumbers = new Array(6).fill(null).map((_, i) => i);\n    class ResizeObserverMock {\n      observe() {}\n      unobserve() {}\n      disconnect() {}\n    }\n    (0, _qunit.module)('when container has scrollbar', function (hooks) {\n      hooks.beforeEach(function () {\n        this.itemNumbers = itemNumbers;\n      });\n      (0, _qunit.test)('it should have scroll shadow class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <div style=\"position: relative\">\n                  <div class=\"items-container\" style=\"max-height: 80px;overflow: auto;\" {{scroll-shadow}}>\n                    {{#each this.itemNumbers as |itemNumber|}}\n                      <div>Item {{itemNumber}}</div>\n                    {{/each}}\n                  </div>\n                </div>\n              \n        */\n        {\n          \"id\": \"1mPW+p15\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n          \\\"],[11,0],[24,0,\\\"items-container\\\"],[24,5,\\\"max-height: 80px;overflow: auto;\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"              \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/scroll-shadow-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.waitFor)('.scroll-shadow', {\n          timeout: 2000\n        });\n        assert.dom('.items-container').hasClass('scroll-shadow');\n      });\n      (0, _qunit.module)('when using color', function () {\n        (0, _qunit.test)('with default color', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <div style=\"position: relative\">\n                      <div class=\"items-container\" style=\"max-height: 80px;overflow: auto;\" {{scroll-shadow}}>\n                        {{#each this.itemNumbers as |itemNumber|}}\n                          <div>Item {{itemNumber}}</div>\n                        {{/each}}\n                      </div>\n                    </div>\n                  \n          */\n          {\n            \"id\": \"z6aOY32n\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n            \\\"],[11,0],[24,0,\\\"items-container\\\"],[24,5,\\\"max-height: 80px;overflow: auto;\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"                \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/scroll-shadow-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.waitFor)('.scroll-shadow--default', {\n            timeout: 2000\n          });\n          assert.dom('.items-container').hasClass('scroll-shadow--default');\n        });\n        (0, _qunit.test)('with field color', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <div style=\"position: relative\">\n                      <div class=\"items-container\" style=\"max-height: 80px;overflow: auto;\" {{scroll-shadow color=\"field\"}}>\n                        {{#each this.itemNumbers as |itemNumber|}}\n                          <div>Item {{itemNumber}}</div>\n                        {{/each}}\n                      </div>\n                    </div>\n                  \n          */\n          {\n            \"id\": \"RDW93VLM\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n            \\\"],[11,0],[24,0,\\\"items-container\\\"],[24,5,\\\"max-height: 80px;overflow: auto;\\\"],[4,[38,0],null,[[\\\"color\\\"],[\\\"field\\\"]]],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"                \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/scroll-shadow-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.waitFor)('.scroll-shadow--field', {\n            timeout: 2000\n          });\n          assert.dom('.items-container').hasClass('scroll-shadow--field');\n        });\n      });\n    });\n    (0, _qunit.module)('when container has not scrollbar', function (hooks) {\n      hooks.beforeEach(function () {\n        this.itemNumbers = itemNumbers;\n      });\n      (0, _qunit.test)('it should not have scroll shadow classes', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <div style=\"position: relative\">\n                  <div class=\"items-container\" {{scroll-shadow}}>\n                    {{#each this.itemNumbers as |itemNumber|}}\n                      <div>Item {{itemNumber}}</div>\n                    {{/each}}\n                  </div>\n                </div>\n              \n        */\n        {\n          \"id\": \"YKSrPTka\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n          \\\"],[11,0],[24,0,\\\"items-container\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"              \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/scroll-shadow-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.items-container').doesNotHaveClass('scroll-shadow');\n        assert.dom('.items-container').doesNotHaveClass('scroll-shadow--white');\n      });\n    });\n    (0, _qunit.module)('when container change scrollbar dynamically', function (hooks) {\n      hooks.beforeEach(function () {\n        this.itemNumbers = itemNumbers;\n      });\n      (0, _qunit.test)('it should call ResizeObserver', async function (assert) {\n        const resizeObserverStub = _sinon.default.stub(ResizeObserverMock.prototype, 'observe');\n        window.ResizeObserver = ResizeObserverMock;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <div style=\"position: relative\">\n                  <div class=\"items-container\" {{scroll-shadow}}>\n                    {{#each this.itemNumbers as |itemNumber|}}\n                      <div>Item {{itemNumber}}</div>\n                    {{/each}}\n                  </div>\n                </div>\n              \n        */\n        {\n          \"id\": \"YKSrPTka\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n          \\\"],[11,0],[24,0,\\\"items-container\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"              \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/modifiers/scroll-shadow-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let container = document.querySelector('.items-container');\n        container.style.maxHeight = '80px';\n        container.style.overflow = 'auto';\n        assert.ok(resizeObserverStub.calledOnce);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/access-panel-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/object\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _object, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\",0,\"@ember/object\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/access-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.records = [{\n        label: 'foo'\n      }, {\n        label: 'bar'\n      }];\n      this.loading = false;\n      this.initialLoad = false;\n      this.loadMore = _sinon.default.stub();\n      this.onSearch = _sinon.default.stub();\n      this.onClose = _sinon.default.stub();\n    });\n    async function renderComponent() {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AccessPanel\n                @records={{this.records}} @loading={{this.loading}} @initialLoad={{this.initialLoad}}\n                @onBottomReached={{this.loadMore}} @onSearch={{this.onSearch}} @onClose={{this.onClose}}>\n                  <:header>Header</:header>\n                  <:columns>Columns</:columns>\n                  <:row as |record|>row display: {{record.label}}</:row>\n                  <:empty-state><div class=\"empty-state\">empty state</div></:empty-state>\n                  <:no-results><div class=\"no-results\">no search results</div></:no-results>\n                </OSS::AccessPanel>\n            \n      */\n      {\n        \"id\": \"p+Z3gD81\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@records\\\",\\\"@loading\\\",\\\"@initialLoad\\\",\\\"@onBottomReached\\\",\\\"@onSearch\\\",\\\"@onClose\\\"],[[30,0,[\\\"records\\\"]],[30,0,[\\\"loading\\\"]],[30,0,[\\\"initialLoad\\\"]],[30,0,[\\\"loadMore\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onClose\\\"]]]],[[\\\"header\\\",\\\"columns\\\",\\\"row\\\",\\\"empty-state\\\",\\\"no-results\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Columns\\\"]],[]],[[[1,\\\"row display: \\\"],[1,[30,1,[\\\"label\\\"]]]],[1]],[[[10,0],[14,0,\\\"empty-state\\\"],[12],[1,\\\"empty state\\\"],[13]],[]],[[[10,0],[14,0,\\\"no-results\\\"],[12],[1,\\\"no search results\\\"],[13]],[]]]]],[1,\\\"\\\\n      \\\"]],[\\\"record\\\"],false,[\\\"o-s-s/access-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/access-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n    }\n    (0, _qunit.test)('it renders the right empty state when no records are found and there is no ongoing search', async function (assert) {\n      this.records = [];\n      await renderComponent();\n      assert.dom('.empty-state').exists();\n      assert.dom('.empty-state').hasText('empty state');\n    });\n    (0, _qunit.test)('the initial loading state is correctly displayed', async function (assert) {\n      this.loading = true;\n      this.initialLoad = true;\n      await renderComponent();\n      assert.dom('.oss-access-panel-container__row').exists({\n        count: 12\n      });\n      assert.dom('.oss-access-panel-container__row .upf-skeleton-effect').exists({\n        count: 24\n      });\n    });\n    (0, _qunit.test)('the initial loading state is correctly displayed', async function (assert) {\n      this.loading = true;\n      this.initialLoad = false;\n      await renderComponent();\n      assert.dom('.oss-access-panel-container__row').exists({\n        count: 5\n      });\n      assert.dom('.oss-access-panel-container__row .upf-skeleton-effect').exists({\n        count: 6\n      });\n    });\n    (0, _qunit.test)('The header named block is correctly filled', async function (assert) {\n      await renderComponent();\n      assert.dom('.oss-access-panel-container__header').exists();\n      assert.dom('.oss-access-panel-container__header').hasText('Header');\n    });\n    (0, _qunit.test)('The columns named block is correctly filled', async function (assert) {\n      await renderComponent();\n      assert.dom('.oss-access-panel-container__rows-header').exists();\n      assert.dom('.oss-access-panel-container__rows-header').hasText('Columns');\n    });\n    (0, _qunit.test)('The records are correctly displayed using the row named block', async function (assert) {\n      await renderComponent();\n      assert.dom('.oss-access-panel-container__row').exists({\n        count: 2\n      });\n      assert.dom('.oss-access-panel-container__row:first-child').hasText('row display: foo');\n      assert.dom('.oss-access-panel-container__row:last-child').hasText('row display: bar');\n    });\n    (0, _qunit.module)('Search', function () {\n      (0, _qunit.test)('it calls the onSearch arg when a keyword is typed', async function (assert) {\n        await renderComponent();\n        await (0, _testHelpers.fillIn)('.oss-input-container input', 'fo');\n        await (0, _testHelpers.typeIn)('.oss-input-container input', 'o', {\n          delay: 0\n        });\n        assert.ok(this.onSearch.lastCall.calledWithExactly('foo'));\n      });\n      (0, _qunit.test)('the input is autofocused', async function (assert) {\n        await renderComponent();\n        assert.dom('.oss-input-container input').isFocused();\n      });\n      (0, _qunit.test)('it renders the right empty state when no records are found and there is an ongoing search', async function (assert) {\n        this.onSearch = _sinon.default.stub().callsFake(() => {\n          (0, _object.set)(this, 'records', []);\n        });\n        await renderComponent();\n        await (0, _testHelpers.fillIn)('.oss-input-container input', 'fo');\n        await (0, _testHelpers.typeIn)('.oss-input-container input', 'o', {\n          delay: 0\n        });\n        assert.dom('.no-results').exists();\n        assert.dom('.no-results').hasText('no search results');\n      });\n      (0, _qunit.test)('if the onSearch arg is not passed, the search input is not displayed', async function (assert) {\n        this.onSearch = undefined;\n        await renderComponent();\n        assert.dom('.oss-input-container').doesNotExist();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/alert-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  const ALERT_SKINS = ['success', 'error', 'info', 'warning'];\n  const ICONS = {\n    success: 'fa-check-circle',\n    error: 'fa-exclamation-triangle',\n    info: 'fa-info-circle',\n    warning: 'fa-exclamation-circle'\n  };\n  (0, _qunit.module)('Integration | Component | o-s-s/alert', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Alert @skin=\"success\" />\n      */\n      {\n        \"id\": \"W+/hkDVR\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\"],[\\\"success\\\"]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-alert').exists({\n        count: 1\n      });\n    });\n    (0, _qunit.test)('it sets info as default if no skin is specified', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Alert />\n      */\n      {\n        \"id\": \"5PmDt1XJ\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-alert').hasClass('upf-alert--info');\n    });\n    ALERT_SKINS.forEach(skin => {\n      (0, _qunit.test)(`it renders ${skin} skin correctly`, async function (assert) {\n        this.skin = skin;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Alert @skin={{this.skin}} @title={{concat \"Title \" this.skin}} @subtitle={{concat \"Subitle \" this.skin}} />\n        */\n        {\n          \"id\": \"aqkzmJ0E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@title\\\",\\\"@subtitle\\\"],[[30,0,[\\\"skin\\\"]],[28,[37,1],[\\\"Title \\\",[30,0,[\\\"skin\\\"]]],null],[28,[37,1],[\\\"Subitle \\\",[30,0,[\\\"skin\\\"]]],null]]],null]],[],false,[\\\"o-s-s/alert\\\",\\\"concat\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert .icon i').hasClass('far');\n        assert.dom('.upf-alert .icon i').hasClass(`${ICONS[skin]}`);\n        assert.dom('.upf-alert .title').hasText(`Title ${skin}`);\n        assert.dom('.upf-alert .subtitle').hasText(`Subitle ${skin}`);\n      });\n    });\n    (0, _qunit.module)('@plain parameter', function () {\n      (0, _qunit.test)('if true, the background-color is grey', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Alert @plain={{true}} />\n        */\n        {\n          \"id\": \"9PBBh83r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[true]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert .main-container').hasClass('main-container--plain');\n      });\n      (0, _qunit.test)('if false, the background-color is white', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Alert @plain={{false}} />\n        */\n        {\n          \"id\": \"m6er04rU\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[false]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert .main-container').hasNoClass('main-container--plain');\n      });\n      (0, _qunit.test)('if undefined, the background-color is grey', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Alert />\n        */\n        {\n          \"id\": \"5PmDt1XJ\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert .main-container').hasClass('main-container--plain');\n      });\n    });\n    (0, _qunit.module)('@closable parameter', function () {\n      (0, _qunit.test)('if true, display the cross icon which delete alert when you click on it', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <div><OSS::Alert @closable={{true}} /></div>\n        */\n        {\n          \"id\": \"4WvcGbf/\",\n          \"block\": \"[[[10,0],[12],[8,[39,0],null,[[\\\"@closable\\\"],[true]],null],[13]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert').exists();\n        assert.dom('.upf-alert .main-container .fx-col i').exists();\n        assert.dom('.upf-alert .main-container .fx-col i').hasClass('fa-times');\n        await (0, _testHelpers.click)('.upf-alert .main-container .fx-col i');\n        assert.dom('.upf-alert').doesNotExist();\n      });\n      (0, _qunit.test)('if false, the cross icon is not displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Alert @closable={{false}} />\n        */\n        {\n          \"id\": \"S79GzUFn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@closable\\\"],[false]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert').exists();\n        assert.dom('.upf-alert .main-container .fx-col i').doesNotExist();\n      });\n      (0, _qunit.test)('if undefined, the cross icon is not displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Alert />\n        */\n        {\n          \"id\": \"5PmDt1XJ\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-alert').exists();\n        assert.dom('.upf-alert .main-container .fx-col i').doesNotExist();\n      });\n      (0, _qunit.test)('clicking the cross icon also calls the onClose argument provided', async function (assert) {\n        this.onClose = _sinon.default.stub();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <div><OSS::Alert @closable={{true}} @onClose={{this.onClose}} /></div>\n        */\n        {\n          \"id\": \"I/qKJ2E+\",\n          \"block\": \"[[[10,0],[12],[8,[39,0],null,[[\\\"@closable\\\",\\\"@onClose\\\"],[true,[30,0,[\\\"onClose\\\"]]]],null],[13]],[],false,[\\\"o-s-s/alert\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-alert .main-container .fx-col i');\n        assert.ok(this.onClose.calledOnce);\n        assert.dom('.upf-alert').doesNotExist();\n      });\n    });\n    (0, _qunit.test)('it renders the extra-content named block', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Alert><:extra-content><div>Hello</div></:extra-content></OSS::Alert>\n      */\n      {\n        \"id\": \"r0V+ir5q\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"extra-content\\\"],[[[[10,0],[12],[1,\\\"Hello\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/alert\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/alert-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-alert .text-container div').hasText('Hello');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/anchor-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/anchor', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.router = this.owner.lookup('service:router');\n      this.transitionToStub = _sinon.default.stub(this.router, 'transitionTo');\n    });\n    (0, _qunit.test)('When link is registered in router it render as a anchor element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Anchor @link=\"http://www.google.fr\" target=\"_blank\" >test</OSS::Anchor>\n      */\n      {\n        \"id\": \"P55/lmUh\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"target\\\",\\\"_blank\\\"]],[[\\\"@link\\\"],[\\\"http://www.google.fr\\\"]],[[\\\"default\\\"],[[[[1,\\\"test\\\"]],[]]]]]],[],false,[\\\"o-s-s/anchor\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/anchor-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasNoClass('ember-view');\n    });\n    (0, _qunit.test)('When link is registered in router it render as a linkTo helper', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Anchor @link=\"index\" >test</OSS::Anchor>\n      */\n      {\n        \"id\": \"uh5pV7IZ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@link\\\"],[\\\"index\\\"]],[[\\\"default\\\"],[[[[1,\\\"test\\\"]],[]]]]]],[],false,[\\\"o-s-s/anchor\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/anchor-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasClass('ember-view');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/array-input-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | OSS::ArrayInput', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const onChange = _sinon.default.stub();\n    const validator = _sinon.default.stub();\n    async function fillInputAndValidate(keyword = 'keyword') {\n      await (0, _testHelpers.fillIn)('.array-input-container input', keyword);\n      let input = (0, _testHelpers.find)('.array-input-container input');\n      await (0, _testHelpers.triggerKeyEvent)(input, 'keydown', 'Enter', {\n        code: 'Enter'\n      });\n    }\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ArrayInput />\n      */\n      {\n        \"id\": \"CxaNGDCL\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.array-input-container').exists();\n    });\n    (0, _qunit.module)('@values parameter', hooks => {\n      hooks.beforeEach(function () {\n        this.loadedValues = ['value1', 'value2'];\n      });\n      (0, _qunit.test)('Passing @values parameter displays the items', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @values={{this.loadedValues}} />\n        */\n        {\n          \"id\": \"dsPv8fje\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\"],[[30,0,[\\\"loadedValues\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        const domTags = await (0, _testHelpers.findAll)('.upf-chip');\n        assert.dom(domTags[0]).hasText('value1');\n        assert.dom(domTags[1]).hasText('value2');\n      });\n    });\n    (0, _qunit.module)('WHEN @onChange function is set', hooks => {\n      hooks.beforeEach(function () {\n        this.onChange = onChange;\n      });\n      (0, _qunit.test)('it is triggered on keyword addition', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"MASD4RKb\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await fillInputAndValidate();\n        assert.ok(onChange.calledWith(['keyword']));\n      });\n      (0, _qunit.test)('it is triggered on keyword deletion', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"MASD4RKb\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await fillInputAndValidate();\n        assert.ok(onChange.calledWith(['keyword']));\n        await (0, _testHelpers.click)('.upf-chip i');\n        assert.dom('.upf-chip').doesNotExist();\n        assert.ok(onChange.calledWith([]));\n      });\n      (0, _qunit.test)('it is triggered on keyword edition', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"MASD4RKb\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await fillInputAndValidate();\n        assert.ok(onChange.calledWith(['keyword']));\n        await (0, _testHelpers.triggerKeyEvent)('.array-input-container input', 'keydown', 'Backspace', {\n          code: 'Backspace'\n        });\n        assert.dom('.upf-chip').doesNotExist();\n        assert.ok(onChange.calledWith([]));\n      });\n    });\n    (0, _qunit.module)('WHEN @onValidator function is set', hooks => {\n      hooks.beforeEach(function () {\n        this.validator = validator;\n      });\n      (0, _qunit.test)('it is triggered on keyword addition', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @validator={{this.validator}} />\n        */\n        {\n          \"id\": \"AsVvcXA8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@validator\\\"],[[30,0,[\\\"validator\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await fillInputAndValidate('hashtag');\n        assert.ok(validator.calledWith('hashtag'));\n      });\n      (0, _qunit.test)('WHEN the validator is truthy, the value is added as a tag', async function (assert) {\n        validator.returns(true);\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @validator={{this.validator}} />\n        */\n        {\n          \"id\": \"AsVvcXA8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@validator\\\"],[[30,0,[\\\"validator\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await fillInputAndValidate('hashtag');\n        assert.ok(validator.calledWith('hashtag'));\n        assert.ok(validator.returned(true));\n        assert.dom('.upf-chip').exists();\n        assert.dom('.upf-chip').hasText('hashtag');\n      });\n      (0, _qunit.test)('WHEN the validator is falsy, the value is not added', async function (assert) {\n        validator.returns(false);\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @validator={{this.validator}} />\n        */\n        {\n          \"id\": \"AsVvcXA8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@validator\\\"],[[30,0,[\\\"validator\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await fillInputAndValidate('hashtag');\n        assert.ok(validator.calledWith('hashtag'));\n        assert.ok(validator.returned(false));\n        assert.dom('.upf-chip').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('WHEN the user presses on the Backspace key', () => {\n      (0, _qunit.test)('If there are no tags, nothing happens', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput />\n        */\n        {\n          \"id\": \"CxaNGDCL\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerKeyEvent)('.array-input-container input', 'keydown', 'Backspace', {\n          code: 'Backspace'\n        });\n        assert.dom('.upf-chip').doesNotExist();\n        assert.dom('.array-input-container').exists();\n        assert.dom('.array-input-container input').exists();\n      });\n      (0, _qunit.test)('If there are tags, the last one is removed and is passed to edit mode', async function (assert) {\n        this.loadedValues = ['value1', 'value2'];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @values={{this.loadedValues}} />\n        */\n        {\n          \"id\": \"dsPv8fje\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\"],[[30,0,[\\\"loadedValues\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        let domTags = (0, _testHelpers.findAll)('.upf-chip');\n        assert.equal(domTags.length, 2);\n        assert.dom(domTags[1]).hasText('value2');\n        await (0, _testHelpers.triggerKeyEvent)('.array-input-container input', 'keydown', 'Backspace', {\n          code: 'Backspace'\n        });\n        domTags = (0, _testHelpers.findAll)('.upf-chip');\n        assert.equal(domTags.length, 1);\n        assert.dom('.array-input-container input').hasValue('value2');\n      });\n    });\n    (0, _qunit.module)('Keyboard validation', function () {\n      (0, _qunit.test)('entries are validated when one of the extra keyboard trigger is hit', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ArrayInput @keyboardTriggers={{array \" \"}} />\n        */\n        {\n          \"id\": \"EGjb/L2A\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@keyboardTriggers\\\"],[[28,[37,1],[\\\" \\\"],null]]],null]],[],false,[\\\"o-s-s/array-input\\\",\\\"array\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.fillIn)('.array-input-container input', 'foobar');\n        let input = (0, _testHelpers.find)('.array-input-container input');\n        await (0, _testHelpers.triggerKeyEvent)(input, 'keydown', ' ');\n        assert.dom('.upf-chip').exists();\n        assert.dom('.upf-chip').hasText('foobar');\n      });\n    });\n    (0, _qunit.test)('Clicking on the remove icon suppresses the target entry', async function (assert) {\n      this.loadedValues = ['value1', 'value2'];\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ArrayInput @values={{this.loadedValues}} />\n      */\n      {\n        \"id\": \"dsPv8fje\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\"],[[30,0,[\\\"loadedValues\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/array-input-test.js\",\n        \"isStrictMode\": false\n      }));\n      let domTagsRemove = (0, _testHelpers.findAll)('.upf-chip');\n      assert.equal(domTagsRemove.length, 2);\n      await (0, _testHelpers.click)('.upf-chip i');\n      domTagsRemove = (0, _testHelpers.findAll)('.upf-chip');\n      assert.equal(domTagsRemove.length, 1);\n      assert.dom('.upf-chip').hasText('value2');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/base-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/trigger-event\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _triggerEvent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/dom/trigger-event\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.test)('It renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Base />\n      */\n      {\n        \"id\": \"CAoaAayy\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute').exists();\n    });\n    (0, _qunit.test)('The splattributes argument is set on the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Base data-control-name=\"testing-splattributes\" />\n      */\n      {\n        \"id\": \"4NtPBt2K\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"testing-splattributes\\\"]],null,null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"testing-splattributes\"]').exists();\n    });\n    (0, _qunit.test)('It displays the label named-block when passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Base @value=\"bananas\">\n                            <:label><span>this is the label named-block</span></:label>\n                           </OSS::Attribute::Base>\n      */\n      {\n        \"id\": \"AQnXeN/4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"bananas\\\"]],[[\\\"label\\\"],[[[[10,1],[12],[1,\\\"this is the label named-block\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute .oss-attribute__label').hasText('this is the label named-block');\n    });\n    (0, _qunit.module)('Value handling', () => {\n      (0, _qunit.test)('It displays the value when passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Base @value=\"bananas\" />\n        */\n        {\n          \"id\": \"n7h4vSQj\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"bananas\\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-attribute .oss-attribute__value').hasText('bananas');\n      });\n      (0, _qunit.test)('It displays the value named-block when passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Base @value=\"bananas\">\n                               <:value>\n                                 <div class=\"fx-row fx-xalign-center fx-gap-px-6\">\n                                   {{@value}}\n                                   <OSS::Icon @icon=\"fa-lock\" />\n                                 </div>\n                               </:value>\n                             </OSS::Attribute::Base>\n        */\n        {\n          \"id\": \"G8ubc084\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"bananas\\\"]],[[\\\"value\\\"],[[[[1,\\\"\\\\n                         \\\"],[10,0],[14,0,\\\"fx-row fx-xalign-center fx-gap-px-6\\\"],[12],[1,\\\"\\\\n                           \\\"],[1,[30,1]],[1,\\\"\\\\n                           \\\"],[8,[39,1],null,[[\\\"@icon\\\"],[\\\"fa-lock\\\"]],null],[1,\\\"\\\\n                         \\\"],[13],[1,\\\"\\\\n                       \\\"]],[]]]]]],[\\\"@value\\\"],false,[\\\"o-s-s/attribute/base\\\",\\\"o-s-s/icon\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-attribute .oss-attribute__value .fa-lock').exists();\n      });\n    });\n    (0, _qunit.module)('Copy button behaviour', () => {\n      (0, _qunit.test)('The text is copyable by default if a value is passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Base @label=\"label\" @value=\"value\" />\n        */\n        {\n          \"id\": \"us+3n6EO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"label\\\",\\\"value\\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n        assert.dom('.oss-attribute__copy').exists();\n      });\n      (0, _qunit.test)('The text is not copyable if the value is blank', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Base @label=\"label\" @value=\"   \" />\n        */\n        {\n          \"id\": \"jzS+sHZv\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"label\\\",\\\"   \\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n        assert.dom('.oss-attribute__copy').doesNotExist();\n      });\n      (0, _qunit.test)('The text is not copyable if the value is undefined', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Base @label=\"label\" />\n        */\n        {\n          \"id\": \"HizsNBSh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"label\\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n        assert.dom('.oss-attribute__copy').doesNotExist();\n      });\n      (0, _qunit.test)('The text is not copyable if the @copyable parameter is set to false', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Base @label=\"label\" @value=\"value\" @copyable={{false}} />\n        */\n        {\n          \"id\": \"TQxiGV/t\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"label\\\",\\\"value\\\",false]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/base-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n        assert.dom('.oss-attribute__copy').doesNotExist();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/country-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/country', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Country />\n      */\n      {\n        \"id\": \"vMoCjn9n\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/country-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"attribute-country\"]').exists();\n    });\n    (0, _qunit.module)('If the @countryCode matches a dictionnary entry', () => {\n      (0, _qunit.test)('The flag icon is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Country @countryCode=\"US\" />\n        */\n        {\n          \"id\": \"2K1DJgfP\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\"],[\\\"US\\\"]],null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/country-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-attribute__label .fflag-US').exists();\n      });\n      (0, _qunit.test)('The country name is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Country @countryCode=\"US\" />\n        */\n        {\n          \"id\": \"2K1DJgfP\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\"],[\\\"US\\\"]],null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/country-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-attribute__value').hasText('United States');\n      });\n    });\n    (0, _qunit.module)('If the @countryCode does not match a dictionnary entry', () => {\n      (0, _qunit.test)('The flag icon is not displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Country @countryCode=\"\" />\n        */\n        {\n          \"id\": \"DLHyc+OR\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/country-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-attribute__label .fflag').doesNotExist();\n      });\n      (0, _qunit.test)('The empty state is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::Country />\n        */\n        {\n          \"id\": \"vMoCjn9n\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/country-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-attribute__value').hasText('-');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/phone-number-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/phone-number', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::PhoneNumber />\n      */\n      {\n        \"id\": \"D0M88YgY\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/phone-number-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"attribute-phone-number\"]').exists();\n    });\n    (0, _qunit.test)('If the number is passed, it is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::PhoneNumber @number=\"+1 212 666 666\" />\n      */\n      {\n        \"id\": \"mztAMyEy\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@number\\\"],[\\\"+1 212 666 666\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/phone-number-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('+1 212 666 666');\n    });\n    (0, _qunit.test)('If the number is undefined, a dash is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::PhoneNumber @prefix=\"+44\" @number=\"\" />\n      */\n      {\n        \"id\": \"UaUzlGYb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\"],[\\\"+44\\\",\\\"\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/phone-number-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('-');\n    });\n    (0, _qunit.test)('If the prefix is passed with a number, they are both displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::PhoneNumber @prefix=\"+44\" @number=\"123 123\" />\n      */\n      {\n        \"id\": \"L5RaK6OB\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\"],[\\\"+44\\\",\\\"123 123\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/phone-number-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('+44 123 123');\n    });\n    (0, _qunit.test)('If the countryCode matches one in the dictionary, a flag is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::PhoneNumber @countryCode=\"US\" @prefix=\"+1\" @number=\"123 123\" />\n      */\n      {\n        \"id\": \"0Mr3HGKa\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\",\\\"@prefix\\\",\\\"@number\\\"],[\\\"US\\\",\\\"+1\\\",\\\"123 123\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/phone-number-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('+1 123 123');\n      assert.dom('.fflag-US').exists();\n    });\n    (0, _qunit.test)(\"If the countryCode doesn't match one in the dictionary, no flag is displayed\", async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::PhoneNumber @countryCode=\"random\" @prefix=\"+1\" @number=\"123 123\" />\n      */\n      {\n        \"id\": \"uiFeGZf9\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\",\\\"@prefix\\\",\\\"@number\\\"],[\\\"random\\\",\\\"+1\\\",\\\"123 123\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/phone-number-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('+1 123 123');\n      assert.dom('.fflag-US').doesNotExist();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/rating-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/rating', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.testRating = 3;\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Rating @label=\"Hello\" @rating={{this.testRating}}/>\n      */\n      {\n        \"id\": \"HZshRC2p\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@rating\\\"],[\\\"Hello\\\",[30,0,[\\\"testRating\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"attribute-rating\"]').exists();\n    });\n    (0, _qunit.test)('it displays a dash when no @rating is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Rating @label=\"Hello\" />\n      */\n      {\n        \"id\": \"UvCCpkpj\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('-');\n    });\n    (0, _qunit.test)('it displays the proper number of stars when @rating is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Rating @label=\"Hello\" @rating={{this.testRating}}/>\n      */\n      {\n        \"id\": \"HZshRC2p\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@rating\\\"],[\\\"Hello\\\",[30,0,[\\\"testRating\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.fas.fa-star.color-yellow').exists({\n        count: this.testRating\n      });\n    });\n    (0, _qunit.test)('it displays a label when @label is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::Rating @label=\"Hello\" @rating={{this.testRating}}/>\n      */\n      {\n        \"id\": \"HZshRC2p\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@rating\\\"],[\\\"Hello\\\",[30,0,[\\\"testRating\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__label').hasText('Hello');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/removable-text-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/removable-text', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.onRemove = _sinon.default.stub().resolves();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RemovableText @label=\"label\" @onRemove={{this.onRemove}} />\n      */\n      {\n        \"id\": \"Nn+C5V7P\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"label\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"attribute-removable-text\"]').exists();\n    });\n    (0, _qunit.test)('It displays the @label', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} />\n      */\n      {\n        \"id\": \"iCsaRzEO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__label').hasText('city');\n    });\n    (0, _qunit.test)('If the value is provided, it is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RemovableText @label=\"city\" @value=\"Lyon\" @onRemove={{this.onRemove}} />\n      */\n      {\n        \"id\": \"hf+5dm3v\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@onRemove\\\"],[\\\"city\\\",\\\"Lyon\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('Lyon');\n    });\n    (0, _qunit.test)('If the value is not provided, it displays a dash', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} />\n      */\n      {\n        \"id\": \"iCsaRzEO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('-');\n    });\n    (0, _qunit.module)('Remove tooltip', () => {\n      (0, _qunit.test)('If the @removeTooltip paramater is passed, the string contents are used as tooltip for the lock icon', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} @removeTooltip=\"Click to remove\" />\n        */\n        {\n          \"id\": \"wyvhWa3t\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@removeTooltip\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]],\\\"Click to remove\\\"]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n        await assert.tooltip('.fa-trash').hasTitle('Click to remove');\n      });\n      (0, _qunit.test)('If the @removeTooltip paramater is not passed, the default text is used', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"iCsaRzEO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n        await assert.tooltip('.fa-trash').hasTitle('Remove');\n      });\n    });\n    (0, _qunit.test)('Clicking on the trash icon calls the @onRemove method', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RemovableText @label=\"city\" @value=\"Lyon\" @onRemove={{this.onRemove}} />\n      */\n      {\n        \"id\": \"hf+5dm3v\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@onRemove\\\"],[\\\"city\\\",\\\"Lyon\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n      await (0, _testHelpers.click)('.fa-trash');\n      assert.true(this.onRemove.calledOnce);\n    });\n    (0, _qunit.test)('Clicking on the trash icon displays a loader', async function (assert) {\n      this.onRemove.returns(new Promise(() => {}));\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RemovableText @label=\"city\" @value=\"Lyon\" @onRemove={{this.onRemove}} />\n      */\n      {\n        \"id\": \"hf+5dm3v\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@onRemove\\\"],[\\\"city\\\",\\\"Lyon\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/removable-text-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n      await (0, _testHelpers.click)('.fa-trash');\n      assert.dom('.fa-circle-notch.fa-spin').exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/revealable-email-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/revealable-email', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.onRevealStub = _sinon.default.stub().resolves();\n    });\n    (0, _qunit.test)('It renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n      */\n      {\n        \"id\": \"hnSbwDfu\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"attribute-revealable-email\"]').exists();\n    });\n    (0, _qunit.module)('Label tooltip', () => {\n      (0, _qunit.test)('If the @tooltip paramater is passed, the info icon is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::RevealableEmail @tooltip=\"this is a tooltip\" @onRevealEmail={{this.onRevealStub}} />\n        */\n        {\n          \"id\": \"tjhVFVCu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tooltip\\\",\\\"@onRevealEmail\\\"],[\\\"this is a tooltip\\\",[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await assert.tooltip('.oss-attribute__info').hasTitle('this is a tooltip');\n      });\n      (0, _qunit.test)('If the @tooltip paramater is not passed, the info icon is not visible', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n        */\n        {\n          \"id\": \"hnSbwDfu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await assert.dom('.oss-attribute__info').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('Lock tooltip', () => {\n      (0, _qunit.test)('If the @lockTooltip paramater is passed, the string contents are used as tooltip for the lock icon', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::RevealableEmail @lockTooltip=\"locked\" @onRevealEmail={{this.onRevealStub}} />\n        */\n        {\n          \"id\": \"I2XiVNK+\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@lockTooltip\\\",\\\"@onRevealEmail\\\"],[\\\"locked\\\",[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n        await assert.tooltip('.fa-lock').hasTitle('locked');\n      });\n      (0, _qunit.test)('If the @lockTooltip paramater is not passed, the default text is used', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n        */\n        {\n          \"id\": \"hnSbwDfu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n        await assert.tooltip('.fa-lock').hasTitle('Reveal email');\n      });\n    });\n    (0, _qunit.test)('Clicking on the lock icon calls the @onRevealEmail method', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n      */\n      {\n        \"id\": \"hnSbwDfu\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n      await (0, _testHelpers.click)('.fa-lock');\n      assert.true(this.onRevealStub.calledOnce);\n    });\n    (0, _qunit.test)('Clicking on the lock icon displays a loader', async function (assert) {\n      this.onRevealStub.returns(new Promise(() => {}));\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n      */\n      {\n        \"id\": \"hnSbwDfu\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n      await (0, _testHelpers.click)('.fa-lock');\n      assert.dom('.fa-circle-notch.fa-spin').exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/tag-array-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/find-all\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _findAll, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/dom/find-all\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/tag-array', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::TagArray @label=\"Fruits\" />\n      */\n      {\n        \"id\": \"VXJfXshU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Fruits\\\"]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/tag-array-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"attribute-tag-array\"]').exists();\n    });\n    (0, _qunit.test)('it displays the @label parameter', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::TagArray @label=\"Fruits\" />\n      */\n      {\n        \"id\": \"VXJfXshU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Fruits\\\"]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/tag-array-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__label').hasText('Fruits');\n    });\n    (0, _qunit.test)('If @tags are passed to the component, they are displayed', async function (assert) {\n      this.tags = ['watermelon', 'vodkamelon', 'whiskeymelon', 'tequilamelon'];\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::TagArray @label=\"Fruits\" @tags={{this.tags}} />\n      */\n      {\n        \"id\": \"QeE2Gr8M\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@tags\\\"],[\\\"Fruits\\\",[30,0,[\\\"tags\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/tag-array-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value .fx-row.fx-wrap').exists();\n      const allUpfTags = (0, _findAll.default)('.upf-tag');\n      assert.equal(allUpfTags.length, this.tags.length);\n    });\n    (0, _qunit.test)('If @tags are not passed to the component, a dash is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Attribute::TagArray @label=\"Fruits\" />\n      */\n      {\n        \"id\": \"VXJfXshU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Fruits\\\"]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/tag-array-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-attribute__value').hasText('-');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/text-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/trigger-event\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _triggerEvent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/dom/trigger-event\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/text', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.module)('Default behavior', function () {\n      (0, _qunit.module)('Render conditions', function () {\n        (0, _qunit.test)('It renders', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value=\"World\" />\n          */\n          {\n            \"id\": \"jbYaMYLo\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",\\\"World\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-attribute').exists();\n          assert.dom('.oss-attribute__label').hasText('Hello');\n          assert.dom('.oss-attribute__value').hasText('World');\n        });\n        (0, _qunit.test)('It renders when the @value is undefined', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" />\n          */\n          {\n            \"id\": \"fYV8vuDT\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-attribute').exists();\n          assert.dom('.oss-attribute__value').hasText('-');\n        });\n        (0, _qunit.test)('It renders with a tooltip when specified', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @tooltip=\"Tooltip\" />\n          */\n          {\n            \"id\": \"QFsfb6Nk\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@tooltip\\\"],[\\\"Hello\\\",\\\"Tooltip\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-attribute__info').exists();\n          await assert.tooltip('.oss-attribute__info').hasTitle('Tooltip');\n        });\n        (0, _qunit.test)('It renders a dash as value when no value is specified', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" />\n          */\n          {\n            \"id\": \"fYV8vuDT\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-attribute').exists();\n          assert.dom('.oss-attribute__value').hasText('-');\n        });\n        (0, _qunit.test)('it renders a dash as value when @value is empty', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value=\"\"/>\n          */\n          {\n            \"id\": \"1Q7cI0X5\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",\\\"\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-attribute').exists();\n          assert.dom('.oss-attribute__value').hasText('-');\n        });\n      });\n      (0, _qunit.module)('Copy action', function (hooks) {\n        hooks.beforeEach(function () {\n          this.textForCopy = 'copied value';\n        });\n        (0, _qunit.test)('The copy icon is not visible before hovering', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} />\n          */\n          {\n            \"id\": \"2T3yBN8t\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-attribute__copy--visible').doesNotExist();\n        });\n        (0, _qunit.test)('The text is copyable by default', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} />\n          */\n          {\n            \"id\": \"2T3yBN8t\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n          assert.dom('.oss-attribute__copy').exists();\n        });\n        (0, _qunit.test)('The text is copyable if the @copyable argument is truthy', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} @copyable={{true}} />\n          */\n          {\n            \"id\": \"c9BtrJk6\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]],true]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n          assert.dom('.oss-attribute__copy--visible').exists();\n        });\n        (0, _qunit.test)('The text is not copyable (no copy button) if the argument is falsy', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} @copyable={{false}} />\n          */\n          {\n            \"id\": \"Qqn8vNwU\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]],false]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n          assert.dom('.oss-attribute__copy').doesNotExist();\n        });\n        (0, _qunit.test)(\"The text is not copyable if text value isn't specified\", async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @copyable={{true}} />\n          */\n          {\n            \"id\": \"xAcEVVaC\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@copyable\\\"],[\\\"Hello\\\",true]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n          assert.dom('.oss-copy--inline').doesNotExist();\n        });\n        (0, _qunit.test)('The text is not copyable if text value is specified but the value is empty', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Attribute::Text @label=\"Hello\" @value=\"\" @copyable={{true}} />\n          */\n          {\n            \"id\": \"190dSsar\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"Hello\\\",\\\"\\\",true]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attribute/text-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n          assert.dom('.oss-copy--inline').doesNotExist();\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attributes-panel-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/attributes-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.icon = 'fa-laptop-code';\n      this.title = 'Title';\n      this.isSaveDisabled = undefined;\n      this.onSave = _sinon.default.stub();\n      this.onCancel = _sinon.default.stub();\n      this.onEdit = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} />\n      */\n      {\n        \"id\": \"4wCy307r\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.attributes-panel').exists();\n    });\n    (0, _qunit.test)('it renders the icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} />\n      */\n      {\n        \"id\": \"4wCy307r\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.attributes-panel .fa-laptop-code').exists();\n    });\n    (0, _qunit.test)('it renders the title', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} />\n      */\n      {\n        \"id\": \"4wCy307r\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.attributes-panel span').hasText('Title');\n    });\n    (0, _qunit.test)('it renders the contextual-action named block', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}}>\n              <:contextual-action>\n                <OSS::Button @icon=\"fa-plus\" @square={{true}} />\n              </:contextual-action>\n            </OSS::AttributesPanel>\n          \n      */\n      {\n        \"id\": \"NRjMUL7c\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],[[\\\"contextual-action\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@icon\\\",\\\"@square\\\"],[\\\"fa-plus\\\",true]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/attributes-panel\\\",\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.attributes-panel .fa-plus').exists();\n    });\n    (0, _qunit.module)('for view mode', () => {\n      (0, _qunit.test)('it renders the view-mode named block', async function (assert) {\n        await renderComponent();\n        assert.dom('.attributes-panel__container.attributes-panel__container--view').exists();\n        assert.dom('.custom-view-mode').hasText('View mode');\n      });\n      (0, _qunit.test)('it renders edition button', async function (assert) {\n        await renderComponent();\n        assert.dom('[data-control-name=\"attributes-panel-mode-switch-button\"]').exists();\n      });\n      (0, _qunit.module)('when clicking on edit button', () => {\n        (0, _qunit.test)('it changes to edition mode container', async function (assert) {\n          await renderComponent();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-mode-switch-button\"]');\n          assert.dom('.attributes-panel__container.attributes-panel__container--view').doesNotExist();\n          assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n        });\n        (0, _qunit.test)('it calls the @onEdit', async function (assert) {\n          await renderComponent();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-mode-switch-button\"]');\n          assert.true(this.onEdit.calledOnceWithExactly());\n        });\n      });\n      async function renderComponent() {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} @onEdit={{this.onEdit}}>\n                  <:view-mode>\n                    <div class=\"custom-view-mode\">View mode</div>\n                  </:view-mode>\n                </OSS::AttributesPanel>\n              \n        */\n        {\n          \"id\": \"BGzwyM2A\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\",\\\"@onEdit\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]],[30,0,[\\\"onEdit\\\"]]]],[[\\\"view-mode\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"custom-view-mode\\\"],[12],[1,\\\"View mode\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n      }\n    });\n    (0, _qunit.module)('for edition mode', () => {\n      (0, _qunit.test)('it renders the view-mode named block', async function (assert) {\n        await renderComponentAndClickOnEdit();\n        assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n        assert.dom('.custom-edition-mode').hasText('Edition mode');\n      });\n      (0, _qunit.test)(\"it doesn't renders edition button\", async function (assert) {\n        await renderComponentAndClickOnEdit();\n        assert.dom('[data-control-name=\"attributes-panel-mode-switch-button\"]').doesNotExist();\n      });\n      (0, _qunit.test)(\"it doesn't renders contextual-action named block\", async function (assert) {\n        await renderComponentAndClickOnEdit();\n        assert.dom('.custom-contextual-action').doesNotExist();\n      });\n      (0, _qunit.test)('it renders the save and cancel button', async function (assert) {\n        await renderComponentAndClickOnEdit();\n        assert.dom('[data-control-name=\"attributes-panel-cancel-button\"]').exists();\n        assert.dom('[data-control-name=\"attributes-panel-save-button\"]').exists();\n      });\n      (0, _qunit.module)('when clicking on cancel button', () => {\n        (0, _qunit.test)('it switches to view mode', async function (assert) {\n          await renderComponentAndClickOnEdit();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-cancel-button\"]');\n          assert.dom('.attributes-panel__container.attributes-panel__container--view').exists();\n          assert.dom('.attributes-panel__container.attributes-panel__container--edition').doesNotExist();\n        });\n        (0, _qunit.test)('it calls the @onCancel', async function (assert) {\n          await renderComponentAndClickOnEdit();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-cancel-button\"]');\n          assert.true(this.onCancel.calledOnceWithExactly());\n        });\n      });\n      (0, _qunit.module)('when clicking on save button', () => {\n        (0, _qunit.test)('it switches to view mode', async function (assert) {\n          this.onSave.resolves();\n          await renderComponentAndClickOnEdit();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n          assert.dom('.attributes-panel__container.attributes-panel__container--view').exists();\n          assert.dom('.attributes-panel__container.attributes-panel__container--edition').doesNotExist();\n        });\n        (0, _qunit.test)(\"it doesn't switch to the view mode\", async function (assert) {\n          this.onSave.rejects();\n          await renderComponentAndClickOnEdit();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n          assert.dom('.attributes-panel__container.attributes-panel__container--view').doesNotExist();\n          assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n        });\n        (0, _qunit.test)('it render a loading state', async function (assert) {\n          this.onSave.returns(new Promise(() => {}));\n          await renderComponentAndClickOnEdit();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n          assert.dom('[data-control-name=\"attributes-panel-save-button\"] .fa-circle-notch').exists();\n        });\n        (0, _qunit.test)('it calls the @onSave', async function (assert) {\n          this.onSave.resolves();\n          await renderComponentAndClickOnEdit();\n          await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n          assert.true(this.onSave.calledOnceWithExactly());\n        });\n      });\n      (0, _qunit.module)('when @isSaveDisabled', () => {\n        (0, _qunit.test)('is undefined, the save button is not disabled', async function (assert) {\n          await renderComponentAndClickOnEdit();\n          assert.dom('[data-control-name=\"attributes-panel-save-button\"]').isNotDisabled();\n        });\n        (0, _qunit.test)('is true, the save button is disabled', async function (assert) {\n          this.isSaveDisabled = true;\n          await renderComponentAndClickOnEdit();\n          assert.dom('[data-control-name=\"attributes-panel-save-button\"]').isDisabled();\n        });\n        (0, _qunit.test)('is false, the save button is not disabled', async function (assert) {\n          this.isSaveDisabled = false;\n          await renderComponentAndClickOnEdit();\n          assert.dom('[data-control-name=\"attributes-panel-save-button\"]').isNotDisabled();\n        });\n      });\n      async function renderComponentAndClickOnEdit() {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} @onEdit={{this.onEdit}}\n                                      @onCancel={{this.onCancel}} @isSaveDisabled={{this.isSaveDisabled}}>\n                  <:contextual-action><div class=\"custom-contextual-action\"></div></:contextual-action>\n                  <:edition-mode>\n                    <div class=\"custom-edition-mode\">Edition mode</div>\n                  </:edition-mode>\n                </OSS::AttributesPanel>\n              \n        */\n        {\n          \"id\": \"WSFBjpbd\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\",\\\"@onEdit\\\",\\\"@onCancel\\\",\\\"@isSaveDisabled\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]],[30,0,[\\\"onEdit\\\"]],[30,0,[\\\"onCancel\\\"]],[30,0,[\\\"isSaveDisabled\\\"]]]],[[\\\"contextual-action\\\",\\\"edition-mode\\\"],[[[[10,0],[14,0,\\\"custom-contextual-action\\\"],[12],[13]],[]],[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"custom-edition-mode\\\"],[12],[1,\\\"Edition mode\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"attributes-panel-mode-switch-button\"]');\n      }\n    });\n    (0, _qunit.test)('it throws an error if @title is missing', async function (assert) {\n      (0, _testHelpers.setupOnerror)(error => {\n        assert.equal(error.message, 'Assertion Failed: [component][OSS::AttributesPanel] The @title parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AttributesPanel @onSave={{this.onSave}} />\n      */\n      {\n        \"id\": \"Fi4aZ8Q4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onSave\\\"],[[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.test)('it throws an error if @onSave is missing', async function (assert) {\n      (0, _testHelpers.setupOnerror)(error => {\n        assert.equal(error.message, 'Assertion Failed: [component][OSS::AttributesPanel] The @onSave parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AttributesPanel @title={{this.title}} />\n      */\n      {\n        \"id\": \"A5wA4MDH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.test)('Edition mode is displayed when passed through initialMode argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AttributesPanel @title={{this.title}} @icon={{this.icon}} @onSave={{this.onSave}} @initialMode=\"edition\" />\n      */\n      {\n        \"id\": \"aL9DrgXX\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@icon\\\",\\\"@onSave\\\",\\\"@initialMode\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"icon\\\"]],[30,0,[\\\"onSave\\\"]],\\\"edition\\\"]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/attributes-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/avatar-group-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/avatar-group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.avatars = [{\n        image: '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg',\n        initials: 'TS'\n      }, {\n        image: '/@upfluence/oss-components/assets/images/avatar-placeholder.svg',\n        initials: 'OM'\n      }];\n    });\n    (0, _qunit.test)('it displays the right number of avatars', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AvatarGroup @avatars={{this.avatars}} />\n      */\n      {\n        \"id\": \"a+CAYjrH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@avatars\\\"],[[30,0,[\\\"avatars\\\"]]]],null]],[],false,[\\\"o-s-s/avatar-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar').exists({\n        count: 2\n      });\n      assert.dom('.upf-avatar:first-child img').hasAttribute('src', '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg');\n      assert.dom('.upf-avatar:last-child img').hasAttribute('src', '/@upfluence/oss-components/assets/images/avatar-placeholder.svg');\n    });\n    (0, _qunit.test)('if no @size arg is provided, it should default to \"md\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AvatarGroup @avatars={{this.avatars}} />\n      */\n      {\n        \"id\": \"a+CAYjrH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@avatars\\\"],[[30,0,[\\\"avatars\\\"]]]],null]],[],false,[\\\"o-s-s/avatar-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar:first-child').hasClass('upf-avatar--md');\n      assert.dom('.upf-avatar:last-child').hasClass('upf-avatar--md');\n    });\n    (0, _qunit.test)('if a @size arg is provided, it should be used for all displayed avatars', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AvatarGroup @avatars={{this.avatars}} @size=\"sm\" />\n      */\n      {\n        \"id\": \"ptpU+df5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@avatars\\\",\\\"@size\\\"],[[30,0,[\\\"avatars\\\"]],\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/avatar-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar:first-child').hasClass('upf-avatar--sm');\n      assert.dom('.upf-avatar:last-child').hasClass('upf-avatar--sm');\n    });\n    (0, _qunit.test)('if a @max arg is provided, we should display maximum that number of avatars and display remaining ones using a placeholder', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AvatarGroup @avatars={{this.avatars}} @max={{1}} />\n      */\n      {\n        \"id\": \"G1YRutbz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@avatars\\\",\\\"@max\\\"],[[30,0,[\\\"avatars\\\"]],1]],null]],[],false,[\\\"o-s-s/avatar-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar').exists({\n        count: 2\n      });\n      assert.dom('.upf-avatar:first-child img').hasAttribute('src', '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg');\n      assert.dom('.upf-avatar:last-child img').doesNotExist();\n      assert.dom('.upf-avatar:last-child').hasText('+1');\n    });\n    (0, _qunit.test)('if a @loading arg is provided w/ no @loadingCount arg, we should display 3 avatars in loading state', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AvatarGroup @avatars={{this.avatars}} @loading={{true}} />\n      */\n      {\n        \"id\": \"QwNRDMKI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@avatars\\\",\\\"@loading\\\"],[[30,0,[\\\"avatars\\\"]],true]],null]],[],false,[\\\"o-s-s/avatar-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar').exists({\n        count: 3\n      });\n      assert.dom('.upf-avatar:first-child').hasClass('upf-avatar--loading');\n      assert.dom('.upf-avatar:nth-child(2)').hasClass('upf-avatar--loading');\n      assert.dom('.upf-avatar:nth-child(3)').hasClass('upf-avatar--loading');\n    });\n    (0, _qunit.test)('if a @loading arg is provided w/ @loadingCount arg, we should display {{@loadingCount}} avatars in loading state', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::AvatarGroup @avatars={{this.avatars}} @loading={{true}} @loadingCount={{1}} />\n      */\n      {\n        \"id\": \"1xLgdv1/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@avatars\\\",\\\"@loading\\\",\\\"@loadingCount\\\"],[[30,0,[\\\"avatars\\\"]],true,1]],null]],[],false,[\\\"o-s-s/avatar-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar').exists({\n        count: 1\n      });\n      assert.dom('.upf-avatar:first-child').hasClass('upf-avatar--loading');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/avatar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/avatar\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _avatar, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/components/o-s-s/avatar\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/avatar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('Default behavior', function () {\n      (0, _qunit.test)('it displays the image when it is provided', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @image=\"/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg\" />\n        */\n        {\n          \"id\": \"lg38wWoe\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[\\\"/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar img').exists();\n        assert.dom('.upf-avatar img').hasAttribute('src', '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg');\n      });\n      (0, _qunit.test)('it displays the initials when they are provided', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @initials=\"TS\" />\n        */\n        {\n          \"id\": \"nN8UM++J\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@initials\\\"],[\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar span').exists();\n        assert.dom('.upf-avatar span').hasText('TS');\n      });\n      (0, _qunit.test)('it displays the default image when initials and image are not provided', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar />\n        */\n        {\n          \"id\": \"OJr8BjyG\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar img').exists();\n        assert.dom('.upf-avatar img').hasAttribute('src', _avatar.DEFAULT_IMAGE_URL);\n      });\n      (0, _qunit.test)('it displays the image when image and initials are provided', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @image=\"/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg\" @initials=\"TS\" />\n        */\n        {\n          \"id\": \"CntmSaZu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\",\\\"@initials\\\"],[\\\"/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg\\\",\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar img').exists();\n        assert.dom('.upf-avatar img').hasAttribute('src', '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg');\n      });\n      (0, _qunit.test)('it updates the image when a new @image is provided', async function (assert) {\n        this.updatedImage = null;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @image={{this.updatedImage}} @initials=\"TS\" />\n        */\n        {\n          \"id\": \"Z1eYc/rS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\",\\\"@initials\\\"],[[30,0,[\\\"updatedImage\\\"]],\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.updatedImage === null);\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar img').doesNotExist();\n        assert.dom('.upf-avatar span').hasText('TS');\n        this.set('updatedImage', '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg');\n        assert.dom('.upf-avatar span').doesNotExist();\n        assert.dom('.upf-avatar img').hasAttribute('src', '/@upfluence/oss-components/assets/images/upfluence-blue-logo.svg');\n      });\n    });\n    (0, _qunit.module)('Sizes', function () {\n      (0, _qunit.test)('it sets the right default class when size is not provided', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar />\n        */\n        {\n          \"id\": \"OJr8BjyG\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar').hasClass(`upf-avatar--md`);\n      });\n      Object.keys(_avatar.SizeDefinition).forEach(size => {\n        (0, _qunit.test)(`it sets the right class when using a supported size: ${size}`, async function (assert) {\n          this.size = size;\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Avatar @size={{this.size}} />\n          */\n          {\n            \"id\": \"9G9nkPDf\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[[30,0,[\\\"size\\\"]]]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-avatar').exists();\n          assert.dom('.upf-avatar').hasClass(`upf-avatar--${size}`);\n        });\n      });\n    });\n    (0, _qunit.test)('When @loading is thruthy, the right class is applied on the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Avatar @loading={{true}} />\n      */\n      {\n        \"id\": \"i4QhetRV\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@loading\\\"],[true]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-avatar').hasClass('upf-avatar--loading');\n    });\n    (0, _qunit.module)('Error behavior', function () {\n      (0, _qunit.test)('it throws an error if the wrong size argument is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, `Assertion Failed: [component][OSS::Avatar] Unknown size. Available sizes are: ${Object.keys(_avatar.SizeDefinition).join(', ')}`);\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @size=\"test\" />\n        */\n        {\n          \"id\": \"ru2UzlWn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it displays the initials when both initials and image are provided and the image fails to load', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @image=\"/@upfluence/oss-components/assets/images/fail.svg\" @initials=\"TS\" />\n        */\n        {\n          \"id\": \"3QIewe2P\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\",\\\"@initials\\\"],[\\\"/@upfluence/oss-components/assets/images/fail.svg\\\",\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.waitFor)('.upf-avatar span');\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar span').exists();\n        assert.dom('.upf-avatar span').hasText('TS');\n      });\n      (0, _qunit.test)('it displays the placeholder image when the image provided in parameters fails to load', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Avatar @image=\"/@upfluence/oss-components/assets/images/fail.svg\" />\n        */\n        {\n          \"id\": \"sag+LWFu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[\\\"/@upfluence/oss-components/assets/images/fail.svg\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/avatar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.waitUntil)(function () {\n          return (0, _testHelpers.find)('.upf-avatar img')?.getAttribute('src') === _avatar.DEFAULT_IMAGE_URL;\n        });\n        assert.dom('.upf-avatar').exists();\n        assert.dom('.upf-avatar img').exists();\n        assert.dom('.upf-avatar img').hasAttribute('src', _avatar.DEFAULT_IMAGE_URL);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/badge-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/badge\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _badge, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/components/o-s-s/badge\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/badge', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.module)('sizes', function () {\n      (0, _qunit.test)('it sets the right class when usng a supported size', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @size=\"lg\" @text=\"2x\" />\n        */\n        {\n          \"id\": \"b6XyF5Ob\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@text\\\"],[\\\"lg\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge').exists();\n        assert.dom('.upf-badge').hasClass('upf-badge--size-lg');\n      });\n      (0, _qunit.test)('it defaults to md size if none is passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @text=\"2x\" />\n        */\n        {\n          \"id\": \"5gLsLZl1\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge').exists();\n        assert.dom('.upf-badge').hasClass('upf-badge--size-md');\n      });\n    });\n    (0, _qunit.module)('skins', function () {\n      Object.keys(_badge.SkinDefinition).forEach(skin => {\n        (0, _qunit.test)(`it sets the right class when using a supported skin: ${skin}`, async function (assert) {\n          this.skin = skin;\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Badge @skin={{this.skin}} @text=\"2x\" />\n          */\n          {\n            \"id\": \"q/K/s9ht\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@text\\\"],[[30,0,[\\\"skin\\\"]],\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-badge').exists();\n          assert.dom('.upf-badge').hasClass(`upf-badge--${skin.startsWith('xtd') ? skin.replace('xtd', 'extended') : skin}`);\n        });\n      });\n      (0, _qunit.test)('it adds the plain class when passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @skin=\"primary\" @plain={{true}} @text=\"2x\" />\n        */\n        {\n          \"id\": \"6lQDtFKV\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@plain\\\",\\\"@text\\\"],[\\\"primary\\\",true,\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge').hasClass('upf-badge--plain');\n      });\n    });\n    (0, _qunit.module)('content args', function () {\n      (0, _qunit.test)('it displays the right icon when using the @icon arg', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @icon=\"fas fa-users\" />\n        */\n        {\n          \"id\": \"qsTu79TE\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fas fa-users\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge').exists();\n        assert.dom('.upf-badge i').hasAttribute('class', 'fas fa-users');\n      });\n      (0, _qunit.test)('it displays the right text when using the @text arg', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @text=\"2x\" />\n        */\n        {\n          \"id\": \"5gLsLZl1\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge').exists();\n        assert.dom('.upf-badge .upf-badge__text').exists();\n        assert.dom('.upf-badge .upf-badge__text').hasText('2x');\n      });\n      (0, _qunit.test)('it displays the right image when using the @image arg', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @image=\"http://foo.co/bar.png\" />\n        */\n        {\n          \"id\": \"UWdrqJ+z\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[\\\"http://foo.co/bar.png\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge').exists();\n        assert.dom('.upf-badge img').exists();\n        assert.dom('.upf-badge img').hasAttribute('src', 'http://foo.co/bar.png');\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error when an unsupported skin is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] Unknown skin. Available skins are: primary, success, alert, error, xtd-cyan, xtd-orange, xtd-yellow, xtd-lime, xtd-blue, xtd-violet, xtd-smart');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @skin=\"foo\" @text=\"2x\" />\n        */\n        {\n          \"id\": \"4FkVrniC\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@text\\\"],[\\\"foo\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error when an unsupported size is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] Unknown size. Available sizes are: sm, md, lg');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @size=\"foo\" @text=\"2x\" />\n        */\n        {\n          \"id\": \"xKeMBBXf\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@text\\\"],[\\\"foo\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if no argument is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] One of @icon, @image or @text arguments is mandatory. You passed 0 arguments');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge />\n        */\n        {\n          \"id\": \"G//EBVIG\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if more than one content argument is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] One of @icon, @image or @text arguments is mandatory. You passed 2 arguments');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Badge @icon=\"fas fa-users\" @text=\"2x\" />\n        */\n        {\n          \"id\": \"auEPCPfs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\"],[\\\"fas fa-users\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/banner-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/banner', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner />\n      */\n      {\n        \"id\": \"z7u4nn5D\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner').exists();\n    });\n    (0, _qunit.test)('passing a font-awesome icon in the @icon parameter displays the icon in a rounded badge', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner @icon=\"fas fa-check\" />\n      */\n      {\n        \"id\": \"Vzo0zBGh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fas fa-check\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner .fa-check').exists();\n    });\n    (0, _qunit.test)('passing an image url in the @image parameter displays the image in a rounded badge', async function (assert) {\n      this.url = 'https://thepressfree.com/wp-content/uploads/2021/11/Voici-pourquoi-Bruce-Banner-netait-plus-Smart-Hulk-dans-la-800x445.jpg';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner @image={{this.url}} />\n      */\n      {\n        \"id\": \"AW0/FsGq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[[30,0,[\\\"url\\\"]]]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner img').exists();\n      assert.dom('img').hasAttribute('src', this.url);\n    });\n    (0, _qunit.test)('passing a title in the @title parameter displays the title in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner @title=\"Test Title\" />\n      */\n      {\n        \"id\": \"8mlx0GWO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test Title\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner .font-weight-semibold').hasText('Test Title');\n    });\n    (0, _qunit.test)('passing a title-suffix named block uses it in a addition to the @title arg ', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner @title=\"Test Title\"><:title-suffix><div class=\"title-named-block\">foo</div></:title-suffix></OSS::Banner>\n      */\n      {\n        \"id\": \"iZENL0AQ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test Title\\\"]],[[\\\"title-suffix\\\"],[[[[10,0],[14,0,\\\"title-named-block\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner .font-weight-semibold').hasText('Test Title');\n      assert.dom('.upf-banner .title-named-block').exists();\n      assert.dom('.upf-banner .title-named-block').hasText('foo');\n    });\n    (0, _qunit.test)('passing a title-suffix named block without a @title arg does not display it at all', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner><:title-suffix><div class=\"title-named-block\">foo</div></:title-suffix></OSS::Banner>\n      */\n      {\n        \"id\": \"pYRLk2ow\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"title-suffix\\\"],[[[[10,0],[14,0,\\\"title-named-block\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner .font-weight-semibold').doesNotExist();\n      assert.dom('.upf-banner .title-named-block').doesNotExist();\n    });\n    (0, _qunit.test)('passing a subtitle in the @subtitle parameter displays the title in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Banner @subtitle=\"Test subtitle\" />\n      */\n      {\n        \"id\": \"TGg6y4A2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Test subtitle\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-banner .font-color-gray-500.text-size-4').hasText('Test subtitle');\n    });\n    (0, _qunit.module)('@plain parameter', function () {\n      (0, _qunit.test)('when the value is truthy, it sets gray-50 background', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @plain={{true}} />\n        */\n        {\n          \"id\": \"rfdZhWf+\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[true]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.background-color-gray-50').exists();\n      });\n      (0, _qunit.test)('when the value is falsy, it sets white background', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @plain={{false}} />\n        */\n        {\n          \"id\": \"Ni9josHS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[false]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.background-color-white').exists();\n      });\n      (0, _qunit.test)('when the value is undefined, it sets white background', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner />\n        */\n        {\n          \"id\": \"z7u4nn5D\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.background-color-white').exists();\n      });\n    });\n    (0, _qunit.module)('@selected parameter', function () {\n      (0, _qunit.test)('when the value is truthy, it adds upf-banner--selected class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @selected={{true}} />\n        */\n        {\n          \"id\": \"sLo53Q7p\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[true]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--selected').exists();\n      });\n      (0, _qunit.test)(\"when the value is falsy, it doesn't add upf-banner--selected class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @selected={{false}} />\n        */\n        {\n          \"id\": \"1Wq5/fhT\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[false]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--selected').doesNotExist();\n      });\n      (0, _qunit.test)(\"when the value is undefined, it doesn't add upf-banner--selected class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner />\n        */\n        {\n          \"id\": \"z7u4nn5D\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--selected').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('@disabled parameter', function () {\n      (0, _qunit.test)('when the value is truthy, it adds upf-banner--disabled class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @disabled={{true}} />\n        */\n        {\n          \"id\": \"w16y/MWL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@disabled\\\"],[true]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--disabled').exists();\n      });\n      (0, _qunit.test)(\"when the value is falsy, it doesn't add upf-banner--disabled class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @disabled={{false}} />\n        */\n        {\n          \"id\": \"pV+NTyQi\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@disabled\\\"],[false]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--disabled').doesNotExist();\n      });\n      (0, _qunit.test)(\"when the value is undefined, it doesn't add upf-banner--disabled class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner />\n        */\n        {\n          \"id\": \"z7u4nn5D\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--disabled').doesNotExist();\n      });\n    });\n    (0, _qunit.test)('passing a custom-icon named block renders inside the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Banner @subtitle=\"Test subtitle\">\n              <:custom-icon>\n                <OSS::Badge @text=\"2x\" />\n              </:custom-icon>\n            </OSS::Banner>\n          \n      */\n      {\n        \"id\": \"tWNReJ1P\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Test subtitle\\\"]],[[\\\"custom-icon\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@text\\\"],[\\\"2x\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/banner\\\",\\\"o-s-s/badge\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-badge').exists();\n    });\n    (0, _qunit.test)('passing an actions named block renders inside the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Banner @subtitle=\"Test subtitle\">\n              <:actions>\n                <OSS::Button @skin=\"primary\" @label=\"browse\" @icon=\"fas fa-box-open\" @size=\"md\" />\n              </:actions>\n            </OSS::Banner>\n          \n      */\n      {\n        \"id\": \"EKvRW8fC\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Test subtitle\\\"]],[[\\\"actions\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@skin\\\",\\\"@label\\\",\\\"@icon\\\",\\\"@size\\\"],[\\\"primary\\\",\\\"browse\\\",\\\"fas fa-box-open\\\",\\\"md\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/banner\\\",\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn').exists();\n    });\n    (0, _qunit.module)('@size parameter', function () {\n      (0, _qunit.test)(\"when the value is 'sm', it adds the upf-banner--size-sm class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @size=\"sm\" />\n        */\n        {\n          \"id\": \"p8dQ1mqj\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--size-sm').exists();\n      });\n      (0, _qunit.test)(\"when the value is 'lg', it adds the upf-banner--size-lg class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @size=\"lg\" />\n        */\n        {\n          \"id\": \"0a89oisE\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"lg\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--size-lg').exists();\n      });\n      (0, _qunit.test)(\"when the value is anything but 'sm', it doesn't add size class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner @size=\"md\" />\n        */\n        {\n          \"id\": \"7yLUhDDn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"md\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--size-sm').doesNotExist();\n        assert.dom('.upf-banner.upf-banner--size-lg').doesNotExist();\n      });\n      (0, _qunit.test)(\"when the value is undefined, it doesn't add the size class\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Banner />\n        */\n        {\n          \"id\": \"z7u4nn5D\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/banner-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-banner.upf-banner--size-sm').doesNotExist();\n        assert.dom('.upf-banner.upf-banner--size-lg').doesNotExist();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/button-dropdown-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/button-dropdown', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('the icon is not displayed if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ButtonDropdown @label=\"label\"><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n      */\n      {\n        \"id\": \"IXyYrSwr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"label\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').doesNotExist();\n    });\n    (0, _qunit.test)('the label is not displayed if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ButtonDropdown @icon=\"far fa-users\"><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n      */\n      {\n        \"id\": \"u653LmMw\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-users\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child span').doesNotExist();\n    });\n    (0, _qunit.test)('the button is displayed as square when @square is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ButtonDropdown @icon=\"far fa-users\" @square={{true}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n      */\n      {\n        \"id\": \"0kP8W6El\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@square\\\"],[\\\"far fa-users\\\",true]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-button-dropdown__trigger-square').exists();\n    });\n    (0, _qunit.test)('the arrow is hidden when @hideArrow is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ButtonDropdown @icon=\"far fa-users\" @square={{true}} @hideArrow={{true}}>\n                  <:items><div class=\"oss-button-dropdown__item\">foo</div></:items>\n                </OSS::ButtonDropdown>\n      */\n      {\n        \"id\": \"jxDQyf2+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@square\\\",\\\"@hideArrow\\\"],[\\\"far fa-users\\\",true,true]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.fa-caret-down').doesNotExist();\n    });\n    (0, _qunit.test)('the icon and label are displayed correctly when provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\"><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n      */\n      {\n        \"id\": \"sg35jHlS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"far fa-users\\\",\\\"label\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').exists();\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').hasClass('far');\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').hasClass('fa-users');\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child span').exists();\n      assert.dom('.oss-button-dropdown__trigger .fx-row:first-child span').hasText('label');\n    });\n    (0, _qunit.module)('If @mainAction is undefined', function () {\n      (0, _qunit.test)('Clicking on the button opens the dropdown', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\">\n                      <:items>\n                        <div class=\"oss-button-dropdown__item\">foo</div>\n                      </:items>\n                    </OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"31Ou+p4u\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"far fa-users\\\",\\\"label\\\"]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-button-dropdown__items').doesNotExist();\n        assert.dom('.oss-button-dropdown__trigger').hasAttribute('role', 'button');\n        await (0, _testHelpers.click)('.oss-button-dropdown__trigger');\n        assert.dom('.oss-button-dropdown__items').exists();\n        assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').exists({\n          count: 1\n        });\n        assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').hasText('foo');\n      });\n      (0, _qunit.test)(\"Hasn't inner border separator\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}>\n                      <:items>\n                        <div class=\"oss-button-dropdown__item\">foo</div>\n                      </:items>\n                    </OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"2YfvgGUS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-button-dropdown__trigger .fx-row:last-child').doesNotHaveStyle({\n          'border-left': '1px solid rgb(229, 231, 235)'\n        });\n      });\n    });\n    (0, _qunit.module)('If @mainAction is defined', function (hooks) {\n      hooks.beforeEach(function () {\n        this.mainAction = _sinon.default.stub();\n      });\n      (0, _qunit.test)('Clicking on the button should not open the dropdown', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"dOvhz4cr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-button-dropdown__items').doesNotExist();\n        assert.dom('.oss-button-dropdown__trigger').hasNoAttribute('role', 'button');\n        await (0, _testHelpers.click)('.oss-button-dropdown__trigger');\n        assert.dom('.oss-button-dropdown__items').doesNotExist();\n      });\n      (0, _qunit.test)('Clicking on the left part should trigger mainAction', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"dOvhz4cr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.mainAction.notCalled);\n        assert.dom('.oss-button-dropdown__trigger .fx-row:first-child').hasAttribute('role', 'button');\n        await (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:first-child');\n        assert.ok(this.mainAction.calledOnce);\n      });\n      (0, _qunit.test)('Clicking on the caret container part opens the dropdown', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"dOvhz4cr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-button-dropdown__items').doesNotExist();\n        assert.dom('.oss-button-dropdown__trigger .fx-row:last-child').hasAttribute('role', 'button');\n        await (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:last-child');\n        assert.dom('.oss-button-dropdown__trigger').hasClass('oss-button-dropdown__trigger--active');\n        assert.dom('.oss-button-dropdown__items').exists();\n        assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').exists({\n          count: 1\n        });\n        assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').hasText('foo');\n      });\n      (0, _qunit.test)('Has inner border separator', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"dOvhz4cr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-button-dropdown__trigger .fx-row:last-child').hasStyle({\n          'border-left': '1px solid rgb(229, 231, 235)'\n        });\n      });\n    });\n    (0, _qunit.module)('When the dropdown is opened', function (hooks) {\n      hooks.beforeEach(function () {\n        this.mainAction = _sinon.default.stub();\n      });\n      (0, _qunit.test)('Clicking on an item should close the dropdown', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}>\n                      <:items>\n                        <div class=\"oss-button-dropdown__item\">foo</div>\n                      </:items>\n                    </OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"2YfvgGUS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:last-child');\n        await (0, _testHelpers.click)('.oss-button-dropdown__items .oss-button-dropdown__item');\n        assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').doesNotExist();\n      });\n      (0, _qunit.test)('Clicking on an item with stopPropagation should keep the dropdown opened', async function (assert) {\n        this.stopPropagation = function (e) {\n          e.stopImmediatePropagation();\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}>\n                      <:items>\n                        <div class=\"oss-button-dropdown__item\" {{on \"click\" this.stopPropagation}}>bar</div>\n                      </:items>\n                    </OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"INHbzpW3\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[11,0],[24,0,\\\"oss-button-dropdown__item\\\"],[4,[38,1],[\\\"click\\\",[30,0,[\\\"stopPropagation\\\"]]],null],[12],[1,\\\"bar\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\",\\\"on\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:last-child');\n        await (0, _testHelpers.click)('.oss-button-dropdown__items .oss-button-dropdown__item');\n        assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').exists();\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if no icon or label args is provided', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ButtonDropdown] You must pass either a @label or an @icon argument.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"mAEPLX2N\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if mainAction exists and is not a function', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ButtonDropdown] The parameter @mainAction should be a function.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ButtonDropdown  @label=\"test\" @mainAction=\"foo\" ><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n        */\n        {\n          \"id\": \"xnuLBTNw\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@mainAction\\\"],[\\\"test\\\",\\\"foo\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-dropdown-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/button-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the icon when present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Button @icon=\"fab fa-facebook\" />\n      */\n      {\n        \"id\": \"Tjh+MdvK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fab fa-facebook\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn i').hasClass('fa-facebook');\n    });\n    (0, _qunit.test)('it renders the iconUrl when present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Button @iconUrl=\"/@upfluence/oss-components/assets/heart.svg\" />\n      */\n      {\n        \"id\": \"/bMzZ80a\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@iconUrl\\\"],[\\\"/@upfluence/oss-components/assets/heart.svg\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn img').hasAttribute('src', '/@upfluence/oss-components/assets/heart.svg');\n    });\n    (0, _qunit.test)('it renders the icon and label when present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Button @icon=\"fab fa-facebook\" @label=\"Label\" />\n      */\n      {\n        \"id\": \"CvRRCRAJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fab fa-facebook\\\",\\\"Label\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn i').hasClass('fa-facebook');\n      assert.dom('.upf-btn span').hasClass('margin-left-px-6');\n      assert.dom('.upf-btn span').hasText('Label');\n    });\n    (0, _qunit.test)('it renders the iconUrl and label when present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Button @iconUrl=\"/@upfluence/oss-components/assets/heart.svg\" @label=\"Label\" />\n      */\n      {\n        \"id\": \"uGQkkwXa\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@iconUrl\\\",\\\"@label\\\"],[\\\"/@upfluence/oss-components/assets/heart.svg\\\",\\\"Label\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn img').hasAttribute('src', '/@upfluence/oss-components/assets/heart.svg');\n      assert.dom('.upf-btn span').hasClass('margin-left-px-6');\n      assert.dom('.upf-btn span').hasText('Label');\n    });\n    (0, _qunit.test)('when icon and iconUrl are present, it only renders the icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Button @icon=\"fab fa-facebook\" @iconUrl=\"/@upfluence/oss-components/assets/heart.svg\" />\n      */\n      {\n        \"id\": \"beJiBNm5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@iconUrl\\\"],[\\\"fab fa-facebook\\\",\\\"/@upfluence/oss-components/assets/heart.svg\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn i').hasClass('fa-facebook');\n      assert.dom('.upf-btn img').doesNotExist();\n    });\n    (0, _qunit.test)('it renders the default button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Button @label=\"Test\" />\n      */\n      {\n        \"id\": \"Rj8O15iI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn').exists({\n        count: 1\n      });\n      assert.dom('.upf-btn').hasClass('upf-btn--default');\n      assert.dom('.upf-btn').hasText('Test');\n    });\n    (0, _qunit.module)('it render with the correct skin', function () {\n      (0, _qunit.test)('when using an unknown skin, it is set to default', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"unknown\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"nikoRBnL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"unknown\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--default');\n      });\n      (0, _qunit.test)('when using primary skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"primary\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"c6mrTVR8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"primary\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--primary');\n      });\n      (0, _qunit.test)('when using secondary skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"secondary\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"pi2fJUqS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"secondary\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--secondary');\n      });\n      (0, _qunit.test)('when using destructive skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"destructive\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"y1tJhPQ+\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"destructive\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--destructive');\n      });\n      (0, _qunit.test)('when using alert skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"alert\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"RnMRGRU3\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"alert\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--alert');\n      });\n      (0, _qunit.test)('when using success skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"success\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"bUgRlhPA\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"success\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--success');\n      });\n      (0, _qunit.test)('when using social-instagram skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"instagram\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"UZ8JmKFp\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"instagram\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--social-instagram');\n      });\n      (0, _qunit.test)('when using social-facebook skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"facebook\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"fnp9YBUg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"facebook\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--social-facebook');\n      });\n      (0, _qunit.test)('when using social-youtube skin', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @skin=\"youtube\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"STbIk0WF\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"youtube\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--social-youtube');\n      });\n    });\n    (0, _qunit.module)('it render with the right size', function () {\n      (0, _qunit.test)('when using xs', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @size=\"xs\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"/yP/ma3C\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"xs\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--xs');\n      });\n      (0, _qunit.test)('when using sm', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @size=\"sm\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"gg/iqhcx\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"sm\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--sm');\n      });\n      (0, _qunit.test)('when using md', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @size=\"md\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"3Zxc+F64\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"md\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--md');\n      });\n      (0, _qunit.test)('when using lg', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @size=\"lg\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"lrXkiQIt\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"lg\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--lg');\n      });\n    });\n    (0, _qunit.module)('it renders with loading state', function () {\n      (0, _qunit.test)('when using default loading', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @size=\"sm\" @loading={{true}} @label=\"Test\" />\n        */\n        {\n          \"id\": \"PXx2pGBu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@loading\\\",\\\"@label\\\"],[\\\"sm\\\",true,\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn i.fas').exists();\n        assert.dom('.upf-btn i.fas').hasClass('fa-circle-notch');\n        assert.dom('.upf-btn i.fas').hasClass('fa-spin');\n        assert.dom('.upf-btn span.margin-left-px-6').doesNotExist();\n      });\n      (0, _qunit.test)('when loading and the showLabel loading option is truthy, the label is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @size=\"sm\" @loading={{true}} @label=\"Test\" @loadingOptions={{hash showLabel=true}} />\n        */\n        {\n          \"id\": \"4uoz6IhT\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@loading\\\",\\\"@label\\\",\\\"@loadingOptions\\\"],[\\\"sm\\\",true,\\\"Test\\\",[28,[37,1],null,[[\\\"showLabel\\\"],[true]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn i.fas').exists();\n        assert.dom('.upf-btn i.fas').hasClass('fa-circle-notch');\n        assert.dom('.upf-btn i.fas').hasClass('fa-spin');\n        assert.dom('.upf-btn span.margin-left-px-6').exists();\n        assert.dom('.upf-btn span.margin-left-px-6').hasText('Test');\n      });\n    });\n    (0, _qunit.module)('it renders a square button', function () {\n      (0, _qunit.test)('when setting the square parameter to true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @square=\"true\" @label=\"Test\" />\n        */\n        {\n          \"id\": \"vuTeZI+Q\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@square\\\",\\\"@label\\\"],[\\\"true\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-square-btn').exists();\n      });\n    });\n    (0, _qunit.module)('it renders with the right theme', function () {\n      (0, _qunit.test)('it adds the right class for usage on dark theme', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @label=\"Test\" @theme=\"dark\" />\n        */\n        {\n          \"id\": \"WrPX8A5G\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@theme\\\"],[\\\"Test\\\",\\\"dark\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn').hasClass('upf-btn--dark-bg');\n      });\n    });\n    (0, _qunit.module)('it renders countDown', function (hooks) {\n      hooks.beforeEach(function () {\n        this.intlService = this.owner.lookup('service:intl');\n      });\n      (0, _qunit.test)('when clicking, it trigger the countdown', async function (assert) {\n        this.callback = () => {};\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @label=\"Test\" @countDown={{hash callback=this.callback}} />\n        */\n        {\n          \"id\": \"1zNUu7sZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"callback\\\"],[[30,0,[\\\"callback\\\"]]]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-btn--default');\n        assert.dom('.upf-btn--default').hasText(this.intlService.t('oss-components.button.cancel_message', {\n          time: 5\n        }));\n      });\n      (0, _qunit.test)('when clicking, it executes callback at the end of the countdown', async function (assert) {\n        this.callback = _sinon.default.stub().callsFake(() => {});\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @label=\"Test\" @countDown={{hash callback=this.callback time=50 step=10}} />\n        */\n        {\n          \"id\": \"oggMjJEO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"callback\\\",\\\"time\\\",\\\"step\\\"],[[30,0,[\\\"callback\\\"]],50,10]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-btn--default');\n        await (0, _testHelpers.waitUntil)(function () {\n          return document.querySelector('.upf-btn--default')?.textContent?.includes('Test');\n        }, {\n          timeout: 1000\n        });\n        assert.true(this.callback.calledOnce);\n      });\n      (0, _qunit.test)('when clicking again, it cancels the countdown', async function (assert) {\n        this.callback = () => {};\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @label=\"Test\" @countDown={{hash callback=this.callback}} />\n        */\n        {\n          \"id\": \"1zNUu7sZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"callback\\\"],[[30,0,[\\\"callback\\\"]]]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-btn--default');\n        await (0, _testHelpers.click)('.upf-btn--default');\n        assert.dom('.upf-btn--default').hasText('Test');\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it fails if @label, @icon and @iconUrl are missing', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Button] You must pass either a @label, an @icon or an @iconUrl argument.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button />\n        */\n        {\n          \"id\": \"U2cXYPeo\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it fails if callback missing for @countDown argument', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, \"Assertion Failed: [component][OSS::Button] You must pass either a hash with 'callback' value to @countDown argument.\");\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Button @label=\"Test\" @countDown={{hash time=1000}} />\n        */\n        {\n          \"id\": \"TYuDfGEx\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"time\\\"],[1000]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/button-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/carousel-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/carousel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.buttonIcon = undefined;\n      this.animationStyle = 'shift';\n      this.showIndicators = undefined;\n      this.showControls = undefined;\n      this.autoPlay = undefined;\n      this.onPageChange = _sinon.default.spy();\n    });\n    async function renderCarousel() {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Carousel @showIndicators={{this.showIndicators}} @showControls={{this.showControls}}\n                           @animationStyle={{this.animationStyle}} @buttonIcon={{this.buttonIcon}}\n                           @autoPlay={{this.autoPlay}} @onPageChange={{this.onPageChange}}>\n              <:pages>\n                <div class=\"page\">Page 1</div>\n                <div class=\"page\">Page 2</div>\n                <div class=\"page\">Page 3</div>\n              </:pages>\n            </OSS::Carousel>\n          \n      */\n      {\n        \"id\": \"kP8NrZiP\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showIndicators\\\",\\\"@showControls\\\",\\\"@animationStyle\\\",\\\"@buttonIcon\\\",\\\"@autoPlay\\\",\\\"@onPageChange\\\"],[[30,0,[\\\"showIndicators\\\"]],[30,0,[\\\"showControls\\\"]],[30,0,[\\\"animationStyle\\\"]],[30,0,[\\\"buttonIcon\\\"]],[30,0,[\\\"autoPlay\\\"]],[30,0,[\\\"onPageChange\\\"]]]],[[\\\"pages\\\"],[[[[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"page\\\"],[12],[1,\\\"Page 1\\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"page\\\"],[12],[1,\\\"Page 2\\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"page\\\"],[12],[1,\\\"Page 3\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/carousel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/carousel-test.ts\",\n        \"isStrictMode\": false\n      }));\n    }\n    (0, _qunit.test)('it renders', async function (assert) {\n      await renderCarousel();\n      assert.dom('.oss-carousel').exists();\n    });\n    (0, _qunit.test)('If no pages are yielded to the component, it throws an error', async function (assert) {\n      (0, _testHelpers.setupOnerror)(error => {\n        assert.equal(error.message, '[component][OSS::Carousel] No pages found in the carousel');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Carousel />\n      */\n      {\n        \"id\": \"lziuRAWB\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/carousel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/carousel-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.test)('it renders the pages', async function (assert) {\n      await renderCarousel();\n      assert.dom('.oss-carousel .page').exists({\n        count: 3\n      });\n    });\n    (0, _qunit.module)('Indicators', () => {\n      (0, _qunit.test)('By default, it renders the indicators', async function (assert) {\n        await renderCarousel();\n        assert.dom('.oss-carousel .page-btn').exists({\n          count: 3\n        });\n      });\n      (0, _qunit.test)('When specified, it does not render the indicators if showIndicators is set to false', async function (assert) {\n        this.showIndicators = false;\n        await renderCarousel();\n        assert.dom('.oss-carousel .page-btn').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('Controls (chevrons)', () => {\n      (0, _qunit.test)('By default, it does not render the controls', async function (assert) {\n        await renderCarousel();\n        assert.dom('.oss-carousel .carousel-control').doesNotExist();\n        assert.dom('.oss-carousel .carousel-control--left').doesNotExist();\n        assert.dom('.oss-carousel .carousel-control--right').doesNotExist();\n      });\n      (0, _qunit.test)('When specified, it renders the controls if showControls is set to true', async function (assert) {\n        this.showControls = true;\n        await renderCarousel();\n        assert.dom('.oss-carousel .carousel-control').exists();\n        assert.dom('.oss-carousel .carousel-control--left').exists();\n        assert.dom('.oss-carousel .carousel-control--right').exists();\n      });\n      (0, _qunit.test)('When specified, it renders the controls outside the carousel if showControls is set to outside', async function (assert) {\n        this.showControls = 'outside';\n        await renderCarousel();\n        assert.dom('.oss-carousel .carousel-control').exists();\n        assert.dom('.oss-carousel .carousel-control--left').exists();\n        assert.dom('.oss-carousel .carousel-control--right').exists();\n        assert.dom('.page-container--side-padding').exists();\n      });\n    });\n    (0, _qunit.module)('Indicator button icon', () => {\n      (0, _qunit.test)('By default, it renders the default button icon', async function (assert) {\n        await renderCarousel();\n        assert.dom('.oss-carousel .fas.fa-circle').exists({\n          count: 3\n        });\n      });\n      (0, _qunit.test)('When specified, it renders the custom button icon', async function (assert) {\n        this.buttonIcon = 'fas fa-robot';\n        await renderCarousel();\n        assert.dom('.oss-carousel .fas.fa-robot').exists({\n          count: 3\n        });\n      });\n    });\n    (0, _qunit.module)('Animation style', () => {\n      (0, _qunit.test)('By default, it uses the shift animation style', async function (assert) {\n        await renderCarousel();\n        await (0, _testHelpers.click)('.oss-carousel .page-btn:nth-child(2)');\n        assert.dom('.animate--shift-from-left').exists();\n      });\n      (0, _qunit.test)('When specified, it uses the slide animation style', async function (assert) {\n        this.animationStyle = 'slide';\n        await renderCarousel();\n        await (0, _testHelpers.click)('.oss-carousel .page-btn:nth-child(2)');\n        assert.dom('.animate--slide-from-left').exists();\n      });\n    });\n    (0, _qunit.module)('Auto play', () => {\n      (0, _qunit.test)('When specified, it automatically switches to the next page', async function (assert) {\n        this.autoPlay = 100;\n        await renderCarousel();\n        await new Promise(resolve => setTimeout(resolve, 101));\n        assert.dom('.oss-carousel .page--active').hasText('Page 2');\n      });\n    });\n    (0, _qunit.test)('@onPageChange is called when changing the page when the parameter is defined', async function (assert) {\n      await renderCarousel();\n      await (0, _testHelpers.click)('.oss-carousel .page-btn:nth-child(2)');\n      assert.true(this.onPageChange.calledOnceWithExactly());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/checkbox-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/checkbox', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = () => {};\n    });\n    (0, _qunit.test)('it renders correctly', async function (assert) {\n      this.checked = false;\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Checkbox @checked={{this.checked}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"XtGXvu5u\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-checkbox input').isNotChecked();\n    });\n    (0, _qunit.test)('the size arg is handled correctly', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Checkbox @checked={{true}} @onChange={{this.onChange}} @size=\"sm\" />\n      */\n      {\n        \"id\": \"J9RHNeV5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\",\\\"@size\\\"],[true,[30,0,[\\\"onChange\\\"]],\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-checkbox').hasClass('upf-checkbox--sm');\n    });\n    (0, _qunit.test)('it is correctly updated when the checked argument changes', async function (assert) {\n      this.checked = false;\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Checkbox @checked={{this.checked}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"XtGXvu5u\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n        \"isStrictMode\": false\n      }));\n      this.set('checked', true);\n      assert.dom('.upf-checkbox input').isChecked();\n    });\n    (0, _qunit.test)('disabled state is handled correctly', async function (assert) {\n      const onChangeSpy = _sinon.default.spy(this.onChange);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Checkbox @checked={{false}} @onChange={{this.onChange}} @disabled={{true}} />\n      */\n      {\n        \"id\": \"T/569P+5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\",\\\"@disabled\\\"],[false,[30,0,[\\\"onChange\\\"]],true]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-checkbox input').hasAttribute('disabled');\n      await (0, _testHelpers.click)('.upf-checkbox');\n      assert.ok(onChangeSpy.neverCalledWith());\n    });\n    (0, _qunit.test)('the onChange hooks is called with the new value', async function (assert) {\n      this.checked = false;\n      this.onChange = value => {\n        assert.equal(value, true);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Checkbox @checked={{this.checked}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"XtGXvu5u\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.upf-checkbox');\n      assert.expect(1);\n    });\n    (0, _qunit.module)('@partial argument', () => {\n      (0, _qunit.test)('it is correctly updated when the partial argument changes', async function (assert) {\n        this.checked = true;\n        this.partial = false;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{this.checked}} @partial={{this.partial}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"HeH8xwFs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@partial\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"partial\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-checkbox__fake-checkbox').hasNoClass('upf-checkbox__fake-checkbox--partial');\n        assert.dom('.upf-checkbox input').isChecked();\n        this.set('partial', true);\n        assert.dom('.upf-checkbox__fake-checkbox').hasClass('upf-checkbox__fake-checkbox--partial');\n      });\n      (0, _qunit.test)('if checked is truthy and partial is truthy, the checkbox is partially checked', async function (assert) {\n        this.checked = true;\n        this.partial = true;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{this.checked}} @partial={{this.partial}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"HeH8xwFs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@partial\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"partial\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-checkbox__fake-checkbox').hasClass('upf-checkbox__fake-checkbox--partial');\n      });\n      (0, _qunit.test)('if checked is truthy and partial is falsy, the checkbox is totally checked', async function (assert) {\n        this.checked = true;\n        this.partial = false;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{this.checked}} @partial={{this.partial}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"HeH8xwFs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@partial\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"partial\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-checkbox__fake-checkbox').hasNoClass('upf-checkbox__fake-checkbox--partial');\n      });\n    });\n    (0, _qunit.module)('@hasError argument', () => {\n      (0, _qunit.test)('When the hasError argument is true, the checkbox has the upf-checkbox--error class', async function (assert) {\n        this.checked = false;\n        this.hasError = true;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{this.checked}} @hasError={{this.hasError}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"a+PECYgL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@hasError\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"hasError\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-checkbox').hasClass('upf-checkbox--error');\n      });\n      (0, _qunit.test)('When the hasError argument is false, the checkbox does not have the upf-checkbox--error class', async function (assert) {\n        this.checked = false;\n        this.hasError = false;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{this.checked}} @hasError={{this.hasError}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"a+PECYgL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@hasError\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"hasError\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-checkbox').doesNotHaveClass('upf-checkbox--error');\n      });\n      (0, _qunit.test)('When the hasError argument is undefined, the checkbox does not have the upf-checkbox--error class', async function (assert) {\n        this.checked = false;\n        this.hasError = undefined;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{this.checked}} @hasError={{this.hasError}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"a+PECYgL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@hasError\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"hasError\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-checkbox').doesNotHaveClass('upf-checkbox--error');\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if checked argument is missing', async function (assert) {\n        (0, _testHelpers.setupOnerror)(error => {\n          assert.equal(error.message, 'Assertion Failed: [component][OSS::Checkbox] Boolean @checked argument is mandatory.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox />\n        */\n        {\n          \"id\": \"c1XCXnf0\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if checked argument is missing', async function (assert) {\n        (0, _testHelpers.setupOnerror)(error => {\n          assert.equal(error.message, 'Assertion Failed: [component][OSS::Checkbox] @onChange argument is mandatory.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Checkbox @checked={{true}} />\n        */\n        {\n          \"id\": \"iB6ARZUy\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\"],[true]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/checkbox-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/chip-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/chip\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _chip, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/components/o-s-s/chip\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/chip', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onRemove = () => {};\n      this.label = 'Test';\n    });\n    (0, _qunit.module)('Default behavior', () => {\n      (0, _qunit.test)('basic render', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"AXdx8Bp0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists();\n        assert.dom('.upf-chip span').exists();\n        assert.dom('.upf-chip i').exists();\n        assert.dom('.upf-chip').hasClass('upf-chip--default');\n        assert.dom('.upf-chip span').hasText(this.label);\n      });\n      (0, _qunit.test)('it renders the proper label when @label is passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"AXdx8Bp0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists({\n          count: 1\n        });\n        assert.dom('.upf-chip').hasText('Test');\n      });\n      (0, _qunit.test)('The component is disabled if the @disabled parameter is truthy', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} @disabled={{true}} />\n        */\n        {\n          \"id\": \"BiZC+eR8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@disabled\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]],true]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists({\n          count: 1\n        });\n        assert.dom('.upf-chip').hasClass('upf-chip--disabled');\n      });\n    });\n    (0, _qunit.module)('@maxDisplayWidth', () => {\n      (0, _qunit.test)('The component adds an ellispsis if the label is wider than @maxDisplayWidth', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label=\"Test with a huge label sentence\" @onRemove={{this.onRemove}} @maxDisplayWidth={{100}} />\n        */\n        {\n          \"id\": \"cIgMw8bW\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@maxDisplayWidth\\\"],[\\\"Test with a huge label sentence\\\",[30,0,[\\\"onRemove\\\"]],100]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists({\n          count: 1\n        });\n        assert.dom('.upf-chip span').hasStyle({\n          maxWidth: '100px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        });\n      });\n      (0, _qunit.test)('When the param is not set', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label=\"Test with a huge label sentence\" @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"IhJqhzF2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"Test with a huge label sentence\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists({\n          count: 1\n        });\n        assert.dom('.upf-chip span').doesNotHaveAttribute('style');\n        assert.dom('.upf-chip').hasText('Test with a huge label sentence');\n      });\n    });\n    (0, _qunit.module)('On cross click event', hooks => {\n      hooks.beforeEach(function () {\n        this.onRemove = _sinon.default.stub();\n      });\n      (0, _qunit.test)('When clicking on the close icon, the component triggers the @onRemove method', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"AXdx8Bp0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-chip i');\n        assert.true(this.onRemove.calledOnce);\n      });\n      (0, _qunit.test)('When @disabled is true and clicking on the close icon, the component no triggers the @onRemove method', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} @disabled={{true}} />\n        */\n        {\n          \"id\": \"BiZC+eR8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@disabled\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]],true]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-chip i');\n        assert.true(this.onRemove.notCalled);\n      });\n    });\n    Object.keys(_chip.SkinDefinition).forEach(skin => {\n      (0, _qunit.test)(`it sets the right class when using a supported skin: ${skin}`, async function (assert) {\n        this.skin = skin;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @skin={{this.skin}} @label={{this.label}} @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"camz9uEl\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"skin\\\"]],[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists();\n        assert.dom('.upf-chip').hasClass(`upf-chip--${_chip.SkinDefinition[this.skin]}`);\n      });\n    });\n    (0, _qunit.module)('prefix named-block', () => {\n      (0, _qunit.test)('When the prefix named-block is passed, it renders the block', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @skin={{this.skin}} @label={{this.label}} @onRemove={{this.onRemove}}><:prefix><OSS::Icon @icon=\"fa-users\" /></:prefix></OSS::Chip>\n        */\n        {\n          \"id\": \"qiZQiw/b\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"skin\\\"]],[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],[[\\\"prefix\\\"],[[[[8,[39,1],null,[[\\\"@icon\\\"],[\\\"fa-users\\\"]],null]],[]]]]]],[],false,[\\\"o-s-s/chip\\\",\\\"o-s-s/icon\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-chip').exists();\n        assert.dom('.upf-chip i.far.fa-users').exists();\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('It throws an error if @onRemove is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Chip] The parameter @onRemove of type function is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @label={{this.label}} />\n        */\n        {\n          \"id\": \"m50//67v\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[[30,0,[\\\"label\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('It throws an error if @label is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Chip] The @label parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Chip @onRemove={{this.onRemove}} />\n        */\n        {\n          \"id\": \"BPwQ9qLV\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onRemove\\\"],[[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/chip-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/code-block-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@upfluence/oss-components/test-support\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _testSupport2, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@upfluence/oss-components/test-support\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/code-block', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _testSupport2.setupToast)(hooks);\n    hooks.beforeEach(function () {\n      this.codeBlock = codeExample;\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock />\n      */\n      {\n        \"id\": \"3J1Y7bfr\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.code-block').exists();\n    });\n    (0, _qunit.test)('The code content is displayed properly', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} />\n      */\n      {\n        \"id\": \"G6aqzxPU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\"],[[30,0,[\\\"codeBlock\\\"]]]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      const codeLines = (0, _testHelpers.findAll)('.code-block code');\n      assert.equal(codeLines.length, 60);\n      assert.dom(codeLines[0]).hasText(\"import Component from '@glimmer/component';\");\n      assert.dom(codeLines[1]).hasText(`import { action } from '@ember/object';`);\n      assert.dom(codeLines[2]).hasText(`import { inject as service } from '@ember/service';`);\n    });\n    (0, _qunit.test)('If copyable parameter is set, the copy button is visible', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @copyable={{true}} />\n      */\n      {\n        \"id\": \"icQwOObz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@copyable\\\"],[[30,0,[\\\"codeBlock\\\"]],true]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.code-block .floating-copy-btn').exists();\n    });\n    (0, _qunit.test)('Clicking on the copy button copies the code into the users clipboard', async function (assert) {\n      const stubClipboard = _sinon.default.stub(navigator.clipboard, 'writeText');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @copyable={{true}} />\n      */\n      {\n        \"id\": \"icQwOObz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@copyable\\\"],[[30,0,[\\\"codeBlock\\\"]],true]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.code-block .floating-copy-btn .upf-btn');\n      assert.ok(stubClipboard.calledOnceWithExactly(this.codeBlock));\n      _sinon.default.restore();\n    });\n    (0, _qunit.test)('if onCopyMessage is set, it shows a toast message when the code is copied', async function (assert) {\n      _sinon.default.stub(navigator.clipboard, 'writeText');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @copyable={{true}} @onCopyMessage={{'Copied!'}} />\n      */\n      {\n        \"id\": \"GOQ0bKn6\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@copyable\\\",\\\"@onCopyMessage\\\"],[[30,0,[\\\"codeBlock\\\"]],true,\\\"Copied!\\\"]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.code-block .floating-copy-btn .upf-btn');\n      assert.ok(this.toastSuccessStub.calledOnceWithExactly('Copied!', ''));\n      _sinon.default.restore();\n    });\n    (0, _qunit.test)('If scrollable parameter is set, the component is scrollable', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @scrollable={{true}} />\n      */\n      {\n        \"id\": \"kZEM9csl\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@scrollable\\\"],[[30,0,[\\\"codeBlock\\\"]],true]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.code-container.scrollable').exists();\n    });\n    (0, _qunit.test)('If scrollable parameter is unset, the component shows the bottom shadow', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} />\n      */\n      {\n        \"id\": \"G6aqzxPU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\"],[[30,0,[\\\"codeBlock\\\"]]]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.code-container.scroll-shadow').exists();\n    });\n    (0, _qunit.test)('If collapseHeight is set, the height of the component is equal to the param size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n      */\n      {\n        \"id\": \"xUb8OMrJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.code-container').hasStyle({\n        height: '100px'\n      });\n    });\n    (0, _qunit.test)('If collapseHeight is set, the uncollapse button is visible', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n      */\n      {\n        \"id\": \"xUb8OMrJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.floating-collapse-btn').exists();\n      assert.dom('.floating-collapse-btn').hasText('Uncollapse');\n    });\n    (0, _qunit.test)('Clicking on the uncollapse button doubles the components height', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n      */\n      {\n        \"id\": \"xUb8OMrJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.floating-collapse-btn');\n      assert.dom('.code-container').hasStyle({\n        height: '200px'\n      });\n    });\n    (0, _qunit.test)('Clicking on the collapse button resets the height to the original collapseHeight parameter height', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{102}} />\n      */\n      {\n        \"id\": \"Ynxn/g0l\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],102]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.floating-collapse-btn');\n      assert.dom('.code-container').hasStyle({\n        height: '204px'\n      });\n      await (0, _testHelpers.click)('.floating-collapse-btn');\n      assert.dom('.code-container').hasStyle({\n        height: '102px'\n      });\n    });\n    (0, _qunit.test)('Clicking on the uncollapse button show the collapse button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n      */\n      {\n        \"id\": \"xUb8OMrJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/code-block-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.floating-collapse-btn');\n      assert.dom('.floating-collapse-btn').hasText('Collapse');\n    });\n  });\n  const codeExample = `import Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { inject as service } from '@ember/service';\nimport { tracked } from '@glimmer/tracking';\nimport ToastService from '@upfluence/oss-components/services/toast';\n\ninterface OSSCodeBlockArgs {\n  content: string;\n  copyable?: boolean;\n  scrollable?: boolean;\n  collapseHeight?: number;\n  onCopyMessage?: string;\n}\n\nexport default class OSSCodeBlock extends Component<OSSCodeBlockArgs> {\n  @tracked collapsable: boolean = false;\n  @tracked collapsed: boolean = true;\n  @tracked componentHeight: number = 0;\n  @service declare toast: ToastService;\n\n  constructor(owner: unknown, args: OSSCodeBlockArgs) {\n    super(owner, args);\n    if (this.args.collapseHeight) {\n      this.componentHeight = this.args.collapseHeight;\n      this.collapsable = true;\n    }\n  }\n\n  get heightStyle(): string | null {\n    if (this.args.collapseHeight) {\n      return \\`height: \\${this.componentHeight}px;\\`;\n    }\n    return null;\n  }\n\n  get codeLineArray(): string[] {\n    return (this.args.content || '').split(/\\r?\\n/);\n  }\n\n  @action\n  copyToClipboard(): void {\n    navigator.clipboard.writeText(this.args.content);\n    if (this.args.onCopyMessage) {\n      this.toast.success(this.args.onCopyMessage, '');\n    }\n  }\n\n  @action\n  collapse(): void {\n    this.collapsed = true;\n    this.componentHeight = this.componentHeight / 2;\n  }\n\n  @action\n  uncollapse(): void {\n    this.collapsed = false;\n    this.componentHeight = this.componentHeight * 2;\n  }\n}`;\n});","define(\"dummy/tests/integration/components/o-s-s/content-panel-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/content-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ContentPanel/>\n      */\n      {\n        \"id\": \"Z2Ma9FQD\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/content-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/content-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-content-panel').exists();\n    });\n    (0, _qunit.test)('The content named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::ContentPanel>\n              <p>This is the content</p>\n            </OSS::ContentPanel>\n      */\n      {\n        \"id\": \"kQVSHSlY\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]]],[],false,[\\\"o-s-s/content-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/content-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-content-panel').hasText('This is the content');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/copy-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@upfluence/oss-components/test-support\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _testSupport2, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@upfluence/oss-components/test-support\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/copy', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _testSupport2.setupClipboard)(hooks);\n    (0, _testSupport2.setupToast)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Copy />\n      */\n      {\n        \"id\": \"ViKCo+F5\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-btn--default').exists();\n    });\n    (0, _qunit.test)('it renders when inline value is specified', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Copy @inline={{true}} />\n      */\n      {\n        \"id\": \"740FTTH6\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@inline\\\"],[true]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-copy--inline').exists();\n    });\n    (0, _qunit.module)('for @icon', () => {\n      (0, _qunit.test)('when value is undefined, it renders the default icon', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy />\n        */\n        {\n          \"id\": \"ViKCo+F5\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('i.fa-copy').exists();\n      });\n      (0, _qunit.test)('when value is defined, it renders the specified icon', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy @icon=\"far fa-jedi\" />\n        */\n        {\n          \"id\": \"Ifovw0KX\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-jedi\\\"]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('i.fa-jedi').exists();\n      });\n    });\n    (0, _qunit.module)('for @tooltip', () => {\n      (0, _qunit.test)('when value is undefined, it renders the default', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy />\n        */\n        {\n          \"id\": \"ViKCo+F5\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await assert.tooltip('.upf-btn--default').hasTitle('Copy');\n      });\n      (0, _qunit.test)('when value is defined, it renders the specified tooltip', async function (assert) {\n        this.tooltip = 'Custom tooltip';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy @tooltip={{this.tooltip}} />\n        */\n        {\n          \"id\": \"sgAGgsRX\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tooltip\\\"],[[30,0,[\\\"tooltip\\\"]]]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await assert.tooltip('.upf-btn--default').hasTitle(this.tooltip);\n      });\n    });\n    (0, _qunit.module)('on non-Chrome browsers the button is always displayed', function (hooks) {\n      hooks.beforeEach(function () {\n        window.chrome = null;\n      });\n      (0, _qunit.test)('nothing is rendered', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy />\n        */\n        {\n          \"id\": \"ViKCo+F5\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-btn--default').exists();\n      });\n    });\n    (0, _qunit.module)('the clipboard-write permission is not granted', function (hooks) {\n      hooks.beforeEach(function () {\n        this.permissionQueryStub.restore();\n        this.permissionQueryStub = _sinon.default.stub(navigator.permissions, 'query').resolves({\n          name: 'clipboard-write',\n          state: 'denied'\n        });\n      });\n      (0, _qunit.test)('nothing is rendered', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy />\n        */\n        {\n          \"id\": \"ViKCo+F5\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.permissionQueryStub.calledOnceWithExactly({\n          name: 'clipboard-write'\n        }));\n        assert.dom('.oss-copy--inline').doesNotExist();\n        assert.dom('.upf-btn--default').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('when clicking', function (hooks) {\n      hooks.afterEach(function () {\n        _sinon.default.restore();\n      });\n      (0, _qunit.test)('the info toast is rendered', async function (assert) {\n        _sinon.default.stub(navigator.clipboard, 'writeText').resolves();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy @value=\"test\" />\n        */\n        {\n          \"id\": \"ZkAdrg36\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-btn--default');\n        assert.true(this.toastInfoStub.calledOnceWithExactly('Successfully copied to your clipboard.', 'Copied to clipboard'));\n      });\n      (0, _qunit.test)('the error toast is rendered', async function (assert) {\n        _sinon.default.stub(navigator.clipboard, 'writeText').rejects();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy @value=\"test\" />\n        */\n        {\n          \"id\": \"ZkAdrg36\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-btn--default');\n        assert.true(this.toastErrorStub.calledOnceWithExactly('Failed to copy to your clipboard. Please try again.', 'Error'));\n      });\n      (0, _qunit.test)('the clipboard writeText method is called', async function (assert) {\n        const writeTextStub = _sinon.default.stub(navigator.clipboard, 'writeText').resolves();\n        this.toastInfoStub.resolves();\n        this.textForCopy = 'test';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Copy @value={{this.textForCopy}} />\n        */\n        {\n          \"id\": \"z82s9nt3\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"textForCopy\\\"]]]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/copy-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-btn--default');\n        assert.true(writeTextStub.calledOnceWithExactly(this.textForCopy));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/country-selector-test\", [\"@ember/test-helpers/setup-onerror\", \"@ember/test-helpers/settled\", \"sinon\", \"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@upfluence/oss-components/utils/country-codes\", \"@ember/object\", \"@ember/test-helpers/dom/trigger-key-event\", \"@ember/template-factory\"], function (_setupOnerror, _settled, _sinon, _qunit, _emberQunit, _testSupport, _testHelpers, _countryCodes, _object, _triggerKeyEvent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"@ember/test-helpers/setup-onerror\",0,\"@ember/test-helpers/settled\",0,\"sinon\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/utils/country-codes\",0,\"@ember/object\",0,\"@ember/test-helpers/dom/trigger-key-event\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/country-selector', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.value = '';\n      this.onchange = value => {\n        (0, _object.set)(this, 'value', value.alpha2);\n      };\n      this.countries = _countryCodes.countries;\n      this.provinces = [{\n        name: 'Alabama',\n        code: 'AL'\n      }, {\n        name: 'Alaska',\n        code: 'AK'\n      }, {\n        name: 'American Samoa',\n        code: 'AS'\n      }];\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n      */\n      {\n        \"id\": \"qYzSGkKr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.ok(true);\n    });\n    (0, _qunit.test)('When clicking on the input, the dropdown menu opens', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n      */\n      {\n        \"id\": \"qYzSGkKr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n      assert.dom('.upf-infinite-select').exists();\n    });\n    (0, _qunit.module)('If @value is passed', function () {\n      (0, _qunit.test)('If the value matches an entry from the sourceList, then the input is set to the value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} @value=\"FR\" />\n        */\n        {\n          \"id\": \"oPXm/aww\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]],\\\"FR\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('France');\n      });\n      (0, _qunit.test)('If the component is in country mode, an alpha2 code will be matched in the @sourceList', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} @value=\"US\" />\n        */\n        {\n          \"id\": \"sPGcvthV\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]],\\\"US\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('United States');\n      });\n      (0, _qunit.test)('If the component is in province mode, a code as @value will be matched in the @sourceList', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} @value=\"AL\" />\n        */\n        {\n          \"id\": \"VKJ+1lq/\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]],\\\"AL\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Alabama');\n      });\n      (0, _qunit.test)('If the component is in province mode, a province name as @value will be matched in the @sourceList', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} @value=\"Alaska\" />\n        */\n        {\n          \"id\": \"UvbmJdNl\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]],\\\"Alaska\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Alaska');\n      });\n      (0, _qunit.test)('If the value matches an entry from the sourceList, the @onChange function is triggered', async function (assert) {\n        this.onchange = _sinon.default.spy();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} @value=\"FR\" />\n        */\n        {\n          \"id\": \"oPXm/aww\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]],\\\"FR\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.onchange.calledOnceWith({\n          id: 'FR',\n          alpha2: 'FR',\n          alpha3: 'FRA',\n          countryCallingCodes: ['33'],\n          currencies: ['EUR'],\n          name: 'France',\n          showOnTop: true\n        }));\n      });\n    });\n    (0, _qunit.module)('Dropdown menu', () => {\n      (0, _qunit.test)('It displays all items from the @sourceList parameter', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n        */\n        {\n          \"id\": \"qYzSGkKr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        const rows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n        assert.equal(rows.length, this.countries.length);\n      });\n      (0, _qunit.test)('if @sourceList contain ids, then country icons are displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n        */\n        {\n          \"id\": \"qYzSGkKr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        assert.dom('.upf-infinite-select__item' + ' .fflag.fflag-US').exists();\n      });\n    });\n    (0, _qunit.test)('If @sourceList contains ids, then the country placeholder is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n      */\n      {\n        \"id\": \"qYzSGkKr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Select your country');\n    });\n    (0, _qunit.test)('if sourceList does not contain ids, then the placeholder is for provinces', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} />\n      */\n      {\n        \"id\": \"llUkzqCi\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Select your province/state');\n    });\n    (0, _qunit.module)('When clicking on an item', () => {\n      (0, _qunit.test)('When selecting an item, the dropdown is closed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} />\n        */\n        {\n          \"id\": \"llUkzqCi\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n        assert.dom('.upf-infinite-select').doesNotExist();\n      });\n      (0, _qunit.test)('When clicking outside of the dropdown, the dropdown is closed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} />\n        */\n        {\n          \"id\": \"llUkzqCi\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        assert.dom('.upf-infinite-select').doesNotExist();\n      });\n      (0, _qunit.test)('the input is updated with the value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @value={{this.value}} @onChange={{this.onchange}} @sourceList={{this.countries}} />\n        */\n        {\n          \"id\": \"SXF5Cm6S\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('United States');\n      });\n      (0, _qunit.test)('the @onChange method is triggered with the selected value', async function (assert) {\n        this.onchange = _sinon.default.spy();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n        */\n        {\n          \"id\": \"qYzSGkKr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(2)');\n        assert.ok(this.onchange.calledWith({\n          id: 'FR',\n          alpha2: 'FR',\n          alpha3: 'FRA',\n          countryCallingCodes: ['33'],\n          currencies: ['EUR'],\n          name: 'France',\n          showOnTop: true\n        }));\n      });\n      (0, _qunit.test)('If the component is using Countries as @sourceList, the flag icon is visible in the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @value={{this.value}} @onChange={{this.onchange}} @sourceList={{this.countries}} />\n        */\n        {\n          \"id\": \"SXF5Cm6S\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('United States');\n        assert.dom('[data-control-name=\"country-selector-input\"] .fflag.fflag-US').exists();\n      });\n      (0, _qunit.test)('If the component is using Provinces as @sourceList, the flag icon is not visible in the input', async function (assert) {\n        this.province = '';\n        this.onProvinceChange = value => {\n          (0, _object.set)(this, 'province', value.name);\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @value={{this.province}} @onChange={{this.onProvinceChange}} @sourceList={{this.provinces}} />\n        */\n        {\n          \"id\": \"GkOUyWts\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"province\\\"]],[30,0,[\\\"onProvinceChange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n        assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Alabama');\n        assert.dom('[data-control-name=\"country-selector-input\"] .fflag.fflag-US').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('Keyboard control management', () => {\n      (0, _qunit.test)('on keydown Enter should open the dropdown', async function (assert) {\n        this.onProvinceChange = value => {\n          (0, _object.set)(this, 'province', value.name);\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @value={{this.province}} @onChange={{this.onProvinceChange}} @sourceList={{this.provinces}} />\n        */\n        {\n          \"id\": \"GkOUyWts\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"province\\\"]],[30,0,[\\\"onProvinceChange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-infinite-select').doesNotExist();\n        await (0, _triggerKeyEvent.default)('[data-control-name=\"country-selector-input\"]', 'keydown', 'Enter');\n        assert.dom('.upf-infinite-select').exists();\n      });\n    });\n    (0, _qunit.module)('error management', () => {\n      (0, _qunit.test)('it throws an error if @sourceList is not provided', async function (assert) {\n        (0, _setupOnerror.default)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::CountrySelector] The parameter @sourceList of type object is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @onChange={{this.onchange}} />\n        */\n        {\n          \"id\": \"F2YRvdwW\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onchange\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n      (0, _qunit.test)('it throws an error if @onChange is not provided', async function (assert) {\n        (0, _setupOnerror.default)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::CountrySelector] The @onChange parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CountrySelector @sourceList={{this.countries}} />\n        */\n        {\n          \"id\": \"K4nllJwy\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@sourceList\\\"],[[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/country-selector-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/currency-input-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/currency-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"VZbpOfOA\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.currency-input-container').exists();\n    });\n    (0, _qunit.test)('The passed @value parameter is properly displayed in the input', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput @value=\"12341234\" @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"xl5NdRY/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[\\\"12341234\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('12341234');\n    });\n    (0, _qunit.test)('It properly loads the correct currency when the @currency parameter is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput @currency=\"EUR\" @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"pJyF1WLs\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@onChange\\\"],[\\\"EUR\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.currency-selector').hasText('€');\n    });\n    (0, _qunit.test)('It displays an error message below the component if @errorMessage is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput @onChange={{this.onChange}} @errorMessage=\"This is an error message\" />\n      */\n      {\n        \"id\": \"UXTL+lKn\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],\\\"This is an error message\\\"]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.currency-input-container').containsText('This is an error message');\n    });\n    (0, _qunit.test)('It displays an red border around the component if @errorMessage exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput @onChange={{this.onChange}} @errorMessage=\"This is an error message\" />\n      */\n      {\n        \"id\": \"UXTL+lKn\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],\\\"This is an error message\\\"]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.currency-input-container').hasStyle({\n        borderColor: 'rgb(27, 30, 33)'\n      });\n    });\n    (0, _qunit.module)('Currency selector', () => {\n      (0, _qunit.test)('Clicking on the currency symbol button opens the currency selector', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"1ORNPtBd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.currency-selector');\n        assert.dom('.upf-infinite-select').exists();\n      });\n      (0, _qunit.test)('Selecting a new currency in the Currency selector triggers the onChange method', async function (assert) {\n        this.currency = '';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"/kK9ZJSa\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.currency-selector');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(5)');\n        assert.true(this.onChange.calledOnceWithExactly('AUD', 0));\n      });\n      (0, _qunit.test)('Selecting a new currency in the selector triggers the onChange method', async function (assert) {\n        this.currency = '';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onlyCurrency={{true}} @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"XIpYtBRL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onlyCurrency\\\",\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.currency-selector');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(5)');\n        assert.true(this.onChange.calledOnceWithExactly('AUD', 0));\n      });\n      (0, _qunit.test)('Typing in the search input filters the results', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"1ORNPtBd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.currency-selector');\n        assert.dom('.upf-infinite-select').exists();\n        await (0, _testHelpers.typeIn)('.upf-infinite-select input', 'usd');\n        const clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n        assert.equal(clickableRows.length, 1);\n        assert.dom(clickableRows[0]).hasText('$ USD');\n      });\n      (0, _qunit.test)('Searching by currency symbol works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"1ORNPtBd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.currency-selector');\n        assert.dom('.upf-infinite-select').exists();\n        await (0, _testHelpers.typeIn)('.upf-infinite-select input', '€');\n        const clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n        assert.equal(clickableRows.length, 1);\n        assert.dom(clickableRows[0]).hasText('€ EUR');\n      });\n      (0, _qunit.test)('The passed @currency parameter changes are properly tracked in the input', async function (assert) {\n        this.currency = 'USD';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"/kK9ZJSa\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.currency-selector').hasText('$');\n        this.set('currency', 'EUR');\n        assert.dom('.currency-selector').hasText('€');\n      });\n      (0, _qunit.test)('The currency selection is disabled if @allowCurrencyUpdate is falsy', async function (assert) {\n        this.currency = 'USD';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} @allowCurrencyUpdate={{false}} />\n        */\n        {\n          \"id\": \"IigriBic\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@allowCurrencyUpdate\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.currency-selector .far.fa-chevron-down').doesNotExist();\n        await (0, _testHelpers.click)('.currency-selector');\n        assert.dom('.upf-infinite-select').doesNotExist();\n      });\n      (0, _qunit.test)('Passing the @allowedCurrencies parameter overwrites the selectable options', async function (assert) {\n        this.allowedCurrencies = [{\n          code: 'USD',\n          symbol: '$'\n        }, {\n          code: 'EUR',\n          symbol: '€'\n        }];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}}\n                                                 @allowedCurrencies={{this.allowedCurrencies}} />\n        */\n        {\n          \"id\": \"hMCsbO+a\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@allowedCurrencies\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"allowedCurrencies\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.currency-selector');\n        const clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n        assert.equal(clickableRows.length, 2);\n      });\n    });\n    (0, _qunit.module)('Currency Input', () => {\n      (0, _qunit.test)('Typing numbers in the currency input triggers the onChange method', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"1ORNPtBd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.typeIn)('input', '8');\n        assert.ok(this.onChange.calledOnce);\n        assert.dom('input').hasValue('08');\n      });\n      (0, _qunit.test)('Typing non-numeric characters does not apply changes', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"1ORNPtBd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.typeIn)('input', '8');\n        assert.ok(this.onChange.calledOnce);\n        // @ts-ignore\n        await (0, _testHelpers.triggerKeyEvent)('input', 'keydown', 'A', {\n          code: 'a'\n        });\n        assert.dom('input').hasValue('08');\n      });\n      (0, _qunit.test)('Placeholder is correctly displayed when provided', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @currency=\"\" @value=\"\" @placeholder=\"foobar\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"3E4V7PcD\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",\\\"foobar\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasAttribute('placeholder', 'foobar');\n      });\n    });\n    (0, _qunit.test)('When @onlyCurrency is truthy, only the currency is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput @currency=\"USD\" @onlyCurrency={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"Ps647H3Z\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@onlyCurrency\\\",\\\"@onChange\\\"],[\\\"USD\\\",true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.currency-input-container').exists();\n      assert.dom('.currency-selector').hasText('$ USD');\n      assert.dom('.currency-input input').doesNotExist();\n    });\n    (0, _qunit.module)('For @disabled argument', () => {\n      (0, _qunit.test)(\"The disabled class isn't here for undefined value\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"VZbpOfOA\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.currency-input-container--disabled').doesNotExist();\n        assert.dom('.currency-input input').isNotDisabled();\n      });\n      (0, _qunit.test)(\"The disabled class isn't here for false value\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onChange={{this.onChange}} @disabled={{false}} />\n        */\n        {\n          \"id\": \"cnv46fEg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@disabled\\\"],[[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.currency-input-container--disabled').doesNotExist();\n        assert.dom('.currency-input input').isNotDisabled();\n      });\n      (0, _qunit.test)('The disabled class is here for true value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onChange={{this.onChange}} @disabled={{true}} />\n        */\n        {\n          \"id\": \"6egcLOp0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@disabled\\\"],[[30,0,[\\\"onChange\\\"]],true]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.currency-input-container--disabled').exists();\n        assert.dom('.currency-input input').isDisabled();\n      });\n    });\n    (0, _qunit.module)('When the paste event is received', function (hooks) {\n      hooks.beforeEach(function () {\n        this.value = '1234567890';\n      });\n      (0, _qunit.test)('The value stored in the clipboard is inserted in the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onChange={{this.onChange}} @value={{this.value}} />\n        */\n        {\n          \"id\": \"sMw0Bgtw\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasValue('1234567890');\n        await (0, _testHelpers.triggerEvent)('input', 'paste', {\n          clipboardData: {\n            getData: _sinon.default.stub().returns('123')\n          }\n        });\n        assert.dom('input').hasValue('1234567890123');\n      });\n      (0, _qunit.test)('The non-numeric characters are escaped', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onChange={{this.onChange}} @value={{this.value}} />\n        */\n        {\n          \"id\": \"sMw0Bgtw\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasValue('1234567890');\n        await (0, _testHelpers.triggerEvent)('input', 'paste', {\n          clipboardData: {\n            getData: _sinon.default.stub().returns('1withletter0')\n          }\n        });\n        assert.dom('input').hasValue('123456789010');\n      });\n      (0, _qunit.test)('When selection is applied, it replaces the selection', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::CurrencyInput @onChange={{this.onChange}} @value={{this.value}} />\n        */\n        {\n          \"id\": \"sMw0Bgtw\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasValue('1234567890');\n        let input = document.querySelector('input.ember-text-field');\n        input.setSelectionRange(4, 6);\n        await (0, _testHelpers.triggerEvent)('input', 'paste', {\n          clipboardData: {\n            getData: _sinon.default.stub().returns('0')\n          }\n        });\n        assert.dom('input').hasValue('123407890');\n      });\n    });\n    (0, _qunit.test)('It throws an error if @onChange is not passed', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [component][OSS::CurrencyInput] The parameter @onChange of type function is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::CurrencyInput />\n      */\n      {\n        \"id\": \"j4YPOnps\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/currency-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/dialog-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/dialog', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.title = 'Dialog title';\n      this.mainAction = {\n        label: 'Main action',\n        action: _sinon.default.stub()\n      };\n      this.secondaryAction = {\n        label: 'Secondary action',\n        action: _sinon.default.stub()\n      };\n    });\n    (0, _qunit.test)('It renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-dialog').exists();\n    });\n    (0, _qunit.test)('The dialog title is correctly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-dialog__header').hasText(this.title);\n    });\n    (0, _qunit.test)('If a @subtitle is passed, it is displayed', async function (assert) {\n      this.subtitle = 'This is a subtitle';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @subtitle={{this.subtitle}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"A93D8lfA\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.font-color-gray-900.font-size-sm').hasText(`${this.subtitle}`);\n    });\n    (0, _qunit.module)('For @skin', () => {\n      (0, _qunit.test)('When the value is undefined, the default skin is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"ETnwaB00\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-dialog__footer .upf-btn--alert').exists();\n        assert.dom('.oss-dialog__header .upf-badge--alert').exists();\n      });\n      (0, _qunit.test)('When the value is \"alert\", the corresponding skin is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @skin=\"alert\" @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"PEpwtywO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@skin\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],\\\"alert\\\",[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-dialog__footer .upf-btn--alert').exists();\n        assert.dom('.oss-dialog__header .upf-badge--alert').exists();\n      });\n      (0, _qunit.test)('When the value is \"error\", the corresponding skin is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @skin=\"error\" @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"KbM05kGV\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@skin\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],\\\"error\\\",[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-dialog__footer .upf-btn--destructive').exists();\n        assert.dom('.oss-dialog__header .upf-badge--error').exists();\n      });\n      (0, _qunit.test)('When the value is \"primary\", the corresponding skin is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @skin=\"primary\" @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"TsMIfc1l\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@skin\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],\\\"primary\\\",[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-dialog__footer .upf-btn--primary').exists();\n        assert.dom('.oss-dialog__header .upf-badge--primary').exists();\n      });\n    });\n    (0, _qunit.module)('For @icon', () => {\n      (0, _qunit.test)('When the value is undefined, the default icon is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"ETnwaB00\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-dialog__header .upf-badge--alert .fa-warning').exists();\n      });\n      (0, _qunit.test)('When the value is defined, the corresponding icon is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @icon=\"fa-otter\" @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"ze4LQemx\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@icon\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],\\\"fa-otter\\\",[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-dialog__header .upf-badge--alert .fa-otter').exists();\n      });\n    });\n    (0, _qunit.test)('The main action button label is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-dialog__footer .upf-btn--alert').hasText(this.mainAction.label);\n    });\n    (0, _qunit.test)('When the main action button has the loading property set to true, the button shows a spinner', async function (assert) {\n      this.mainAction.loading = true;\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"dialog-primary-action-button\"] .fa-circle-notch').exists();\n    });\n    (0, _qunit.test)('When the main action button has the icon property provided, the button shows it', async function (assert) {\n      this.mainAction.icon = 'far fa-robot';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"dialog-primary-action-button\"] .fa-robot').exists();\n    });\n    (0, _qunit.test)('The secondary action button label is displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-dialog__footer .upf-btn--default').hasText(this.secondaryAction.label);\n    });\n    (0, _qunit.test)('When the secondary action button has the icon property provided, the button shows it', async function (assert) {\n      this.secondaryAction.icon = 'far fa-robot';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"dialog-secondary-action-button\"] .fa-robot').exists();\n    });\n    (0, _qunit.test)('When clicking on the main action button, the main action is called', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.oss-dialog__footer .upf-btn--alert');\n      assert.true(this.mainAction.action.calledOnce);\n    });\n    (0, _qunit.test)('When clicking on the secondary action button, the secondary action is called', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n      */\n      {\n        \"id\": \"ETnwaB00\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.oss-dialog__footer .upf-btn--default');\n      assert.true(this.secondaryAction.action.calledOnce);\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('The component throws an error if the @title parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Dialog] The title parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @mainAction={{this.mainAction}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"4RdYwP4h\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@mainAction\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"mainAction\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('The component throws an error if the @mainAction parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Dialog] The mainAction parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @secondaryAction={{this.secondaryAction}} />\n        */\n        {\n          \"id\": \"fUAVB+Cs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@secondaryAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"secondaryAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('The component throws an error if the @secondaryAction parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Dialog] The secondaryAction parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Dialog @title={{this.title}} @mainAction={{this.mainAction}} />\n        */\n        {\n          \"id\": \"GX9kESRJ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@mainAction\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"mainAction\\\"]]]],null]],[],false,[\\\"o-s-s/dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/email-input-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/email-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput @value=\"\" />\n      */\n      {\n        \"id\": \"//gZPh9T\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-container').exists();\n    });\n    (0, _qunit.test)('it renders the @placeholder', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput @value=\"\" @placeholder=\"test\" />\n      */\n      {\n        \"id\": \"H9f6UQMi\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@placeholder\\\"],[\\\"\\\",\\\"test\\\"]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-container input').hasProperty('placeholder', 'test');\n    });\n    (0, _qunit.test)('it displays the error message when the @errorMessage is non-empty', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput @value=\"\" @errorMessage=\"This is the error message\" />\n      */\n      {\n        \"id\": \"hEB/kSfp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@errorMessage\\\"],[\\\"\\\",\\\"This is the error message\\\"]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n      assert.dom('.text-color-error').hasText('This is the error message');\n    });\n    (0, _qunit.test)('If the email regex isnt matched, then the error message is displayed', async function (assert) {\n      this.value = '';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput @value={{this.value}} />\n      */\n      {\n        \"id\": \"xjO7Ay2m\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'foo@f');\n      assert.dom('.text-color-error').hasText('Please enter a valid email address.');\n    });\n    (0, _qunit.test)('If the email regex is matched, and the @validates method is passed, then the status of the validation is returned', async function (assert) {\n      this.value = 'john.doe@example.com';\n      this.validates = x => {\n        assert.equal(x, true);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput @value={{this.value}} @validates={{this.validates}} />\n      */\n      {\n        \"id\": \"XVa2HKZh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'a');\n    });\n    (0, _qunit.test)('If the email regex isnt matched, and the @validates method is passed, then the status of the validation is returned', async function (assert) {\n      this.value = 'foo@f';\n      this.validates = x => {\n        assert.equal(x, false);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput @value={{this.value}} @validates={{this.validates}} />\n      */\n      {\n        \"id\": \"XVa2HKZh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'a');\n    });\n    (0, _qunit.test)('it throws an error when the @value parameter is missing', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [component][OSS::EmailInput] The @value parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmailInput />\n      */\n      {\n        \"id\": \"N1/+IAX1\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.module)('for the @onChange method', hooks => {\n      hooks.beforeEach(function () {\n        this.value = '';\n        this.onChange = _sinon.default.stub();\n      });\n      (0, _qunit.test)('it is called when a new character is typed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmailInput @value={{this.value}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"TAPo0MXs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.typeIn)('input', 'a');\n        assert.true(this.onChange.calledOnceWithExactly('a'));\n      });\n      (0, _qunit.test)('it returns null value', async function (assert) {\n        this.value = null;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmailInput @value={{this.value}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"TAPo0MXs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerKeyEvent)('input', 'keyup', 'Backspace');\n        assert.true(this.onChange.calledOnceWithExactly(null));\n      });\n      (0, _qunit.test)('if defined, it transforms the result to lowercase', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmailInput @value={{this.value}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"TAPo0MXs\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/email-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.typeIn)('input', 'A');\n        assert.true(this.onChange.calledOnceWithExactly('a'));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/empty-state-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/empty-state', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders with default properties', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\" />\n      */\n      {\n        \"id\": \"soLGenqS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\"],[\\\"No Data\\\",\\\"Try again later\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div.font-color-gray-900').hasText('No Data');\n      assert.dom('div.font-color-gray-500').hasText('Try again later');\n    });\n    (0, _qunit.test)('it renders with a badge icon', async function (assert) {\n      this.set('image', 'fa-thumbs-up');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\" @badgeIcon={{this.image}} />\n      */\n      {\n        \"id\": \"I3irsZi8\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@badgeIcon\\\"],[\\\"No Data\\\",\\\"Try again later\\\",[30,0,[\\\"image\\\"]]]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div.font-color-gray-900').hasText('No Data');\n      assert.dom('div.font-color-gray-500').hasText('Try again later');\n      assert.dom('.upf-badge').exists();\n    });\n    (0, _qunit.test)('it supports named-block usage for image', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\">\n              <:image>\n                <img src=\"/test-image.png\" alt=\"Test Image\" />\n              </:image>\n            </OSS::EmptyState>\n          \n      */\n      {\n        \"id\": \"8MQ4GaKE\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\"],[\\\"No Data\\\",\\\"Try again later\\\"]],[[\\\"image\\\"],[[[[1,\\\"\\\\n          \\\"],[10,\\\"img\\\"],[14,\\\"src\\\",\\\"/test-image.png\\\"],[14,\\\"alt\\\",\\\"Test Image\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div.font-color-gray-900').hasText('No Data');\n      assert.dom('div.font-color-gray-500').hasText('Try again later');\n      assert.dom('img').exists();\n    });\n    (0, _qunit.test)('it supports named-block usage for actions', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\">\n              <:actions>\n                <button type=\"button\">Retry</button>\n              </:actions>\n            </OSS::EmptyState>\n          \n      */\n      {\n        \"id\": \"O/13dJ1S\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\"],[\\\"No Data\\\",\\\"Try again later\\\"]],[[\\\"actions\\\"],[[[[1,\\\"\\\\n          \\\"],[10,\\\"button\\\"],[14,4,\\\"button\\\"],[12],[1,\\\"Retry\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div.font-color-gray-900').hasText('No Data');\n      assert.dom('div.font-color-gray-500').hasText('Try again later');\n      assert.dom('button').hasText('Retry');\n    });\n    (0, _qunit.module)('component size', function (hooks) {\n      (0, _qunit.test)('it applies md sizes by default', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\" />\n        */\n        {\n          \"id\": \"soLGenqS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\"],[\\\"No Data\\\",\\\"Try again later\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('div.font-color-gray-900').hasClass('font-size-lg');\n        assert.dom('div.font-color-gray-500').hasClass('font-size-md');\n      });\n      (0, _qunit.test)('it applies md sizes when given a wrong size', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\" @size=\"wrong\" />\n        */\n        {\n          \"id\": \"CWE5do1M\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@size\\\"],[\\\"No Data\\\",\\\"Try again later\\\",\\\"wrong\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('div.font-color-gray-900').hasClass('font-size-lg');\n        assert.dom('div.font-color-gray-500').hasClass('font-size-md');\n      });\n      (0, _qunit.test)('it applies md sizes when specified', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\" @size=\"md\" />\n        */\n        {\n          \"id\": \"DVuLjSvg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@size\\\"],[\\\"No Data\\\",\\\"Try again later\\\",\\\"md\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('div.font-color-gray-900').hasClass('font-size-lg');\n        assert.dom('div.font-color-gray-500').hasClass('font-size-md');\n      });\n      (0, _qunit.test)('it applies sm sizes when specified', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmptyState @title=\"No Data\" @subtitle=\"Try again later\" @size=\"sm\" />\n        */\n        {\n          \"id\": \"SkRZddIN\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@size\\\"],[\\\"No Data\\\",\\\"Try again later\\\",\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('div.font-color-gray-900').hasClass('font-size-md');\n        assert.dom('div.font-color-gray-500').hasClass('font-size-sm');\n      });\n    });\n    (0, _qunit.module)('error management', function (hooks) {\n      (0, _qunit.test)('it throws an error if the @title parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::EmptyState] The title parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmptyState @subtitle=\"Try again later\" />\n        */\n        {\n          \"id\": \"GYFDFoxg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Try again later\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if the @subtitle parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::EmptyState] The subtitle parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::EmptyState @title=\"No Data\" />\n        */\n        {\n          \"id\": \"x+wVKAJr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"No Data\\\"]],null]],[],false,[\\\"o-s-s/empty-state\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/empty-state-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/form-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/form', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.formManager = this.owner.lookup('service:form-manager');\n      _sinon.default.stub(this.formManager, 'generateId').returns('foo-id');\n      this.onSetup = _sinon.default.stub();\n      this.onSubmit = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it properly renders & calls the onSetup arg upon entry', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Form @onSetup={{this.onSetup}} @onSubmit={{this.onSubmit}}>\n              <:content>\n                Foo\n              </:content>\n            </OSS::Form>\n          \n      */\n      {\n        \"id\": \"WqGQhyWK\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@onSetup\\\",\\\"@onSubmit\\\"],[[30,0,[\\\"onSetup\\\"]],[30,0,[\\\"onSubmit\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n          Foo\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/form\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/form-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('form').hasAttribute('id', 'foo-id');\n      assert.ok(this.onSetup.calledOnceWithExactly(_sinon.default.match(obj => {\n        return obj && typeof obj === 'object' && ['validateForm', 'validateField', 'getErrors', 'clearErrors'].every(func => func in obj);\n      })));\n      assert.dom().hasText('Foo');\n    });\n    (0, _qunit.test)('hitting Enter properly submits the form', async function (assert) {\n      const validateFormStub = _sinon.default.stub(this.formManager, 'validateForm').returns(true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Form @onSetup={{this.onSetup}} @onSubmit={{this.onSubmit}}>\n              <:content>\n                Foo\n              </:content>\n            </OSS::Form>\n          \n      */\n      {\n        \"id\": \"WqGQhyWK\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@onSetup\\\",\\\"@onSubmit\\\"],[[30,0,[\\\"onSetup\\\"]],[30,0,[\\\"onSubmit\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n          Foo\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/form\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/form-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('form', 'submit');\n      assert.ok(validateFormStub.calledOnce);\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/icon-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  const STYLE_CLASSES = {\n    solid: 'fas',\n    regular: 'far',\n    light: 'fal',\n    duotone: 'fad',\n    brand: 'fab'\n  };\n  (0, _qunit.module)('Integration | Component | o-s-s/icon', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Icon @icon=\"fa-laptop-code\" />\n      */\n      {\n        \"id\": \"mbrPgxAs\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fa-laptop-code\\\"]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/icon-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('i').exists();\n    });\n    (0, _qunit.test)('it renders the correct icon class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Icon @icon=\"fa-code-merge\" />\n      */\n      {\n        \"id\": \"o59bPqQc\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fa-code-merge\\\"]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/icon-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('i').hasClass('fa-code-merge');\n    });\n    (0, _qunit.test)(`it renders the correct default style class`, async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Icon @icon=\"fa-code-merge\" />\n      */\n      {\n        \"id\": \"o59bPqQc\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fa-code-merge\\\"]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/icon-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('i').hasClass('far');\n    });\n    for (const [key, value] of Object.entries(STYLE_CLASSES)) {\n      (0, _qunit.test)(`it renders the correct style ${key} class`, async function (assert) {\n        this.style = key;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Icon @icon=\"fa-code-merge\" @style={{this.style}} />\n        */\n        {\n          \"id\": \"nl/oHDkr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@style\\\"],[\\\"fa-code-merge\\\",[30,0,[\\\"style\\\"]]]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/icon-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('i').hasClass(value);\n      });\n    }\n    (0, _qunit.test)('it throws an error if icon argument is missing', async function (assert) {\n      (0, _testHelpers.setupOnerror)(error => {\n        assert.equal(error.message, 'Assertion Failed: [component][OSS::Icon] The @icon parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Icon />\n      */\n      {\n        \"id\": \"HX993/w2\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/icon-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/illustration-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/illustration\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _illustration, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"@upfluence/oss-components/components/o-s-s/illustration\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/illustration', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('the style is inserted in the fetched svg', async function (assert) {\n      this.extractedCSSVars = (0, _illustration.extractCSSVars)().join(';');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Illustration @src=\"/@upfluence/oss-components/assets/images/no-records.svg\" />\n      */\n      {\n        \"id\": \"VzXz5vu3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@src\\\"],[\\\"/@upfluence/oss-components/assets/images/no-records.svg\\\"]],null]],[],false,[\\\"o-s-s/illustration\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/illustration-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.waitUntil)(() => {\n        return (0, _testHelpers.find)('svg');\n      });\n      assert.deepEqual((0, _testHelpers.find)('svg style').textContent.trim(), `:root { ${this.extractedCSSVars} }`.trim());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/infinite-select-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  function _isFocused(element) {\n    return element === document.activeElement;\n  }\n  const FAKE_DATA = [{\n    name: 'Batman',\n    characters: 'Bruce Wayne'\n  }, {\n    name: 'Superman',\n    characters: 'Kal-El'\n  }, {\n    name: 'Green Arrow',\n    characters: 'Oliver Queen'\n  }, {\n    name: 'Wonder Woman',\n    characters: 'Princess Diana'\n  }, {\n    name: 'Martian Manhunter',\n    characters: 'Martian Manhunter'\n  }, {\n    name: 'Robin/Nightwing',\n    characters: 'Dick Grayson'\n  }, {\n    name: 'Spider Man',\n    characters: 'Peter Parker'\n  }, {\n    name: 'Iron Man',\n    characters: 'Tony Stark'\n  }, {\n    name: 'Thor',\n    characters: 'Thor Odinson'\n  }, {\n    name: 'Hulk',\n    characters: 'Bruce Banner'\n  }, {\n    name: 'Wolverine',\n    characters: 'James Howlett'\n  }];\n  (0, _qunit.module)('Integration | Component | o-s-s/infinite-select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.test)('the index values from the @items array are available in the option named block', async function (assert) {\n      this.items = FAKE_DATA;\n      this.checkedIndex = 0;\n      this.onSelect = () => {};\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InfiniteSelect\n                  @items={{this.items}}\n                  @searchEnabled={{false}}\n                  @onSelect={{this.onSelect}}\n                >\n                  <:option as |item index|>\n                    <div class=\"index\">{{index}}</div>\n                  </:option>\n                </OSS::InfiniteSelect>\n              \n      */\n      {\n        \"id\": \"H8P1RPNQ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[10,0],[14,0,\\\"index\\\"],[12],[1,[30,2]],[13],[1,\\\"\\\\n            \\\"]],[1,2]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\",\\\"index\\\"],false,[\\\"o-s-s/infinite-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.index:nth-of-type(1)').hasText(this.checkedIndex.toString());\n    });\n    (0, _qunit.module)('search is enabled', function () {\n      (0, _qunit.module)('with onSearch hook', function () {\n        (0, _qunit.test)('it calls the onSearch hook with the typed keyword', async function (assert) {\n          this.onSearch = keyword => {\n            assert.equal(keyword, 'b', 'Enters the onSearch hook');\n          };\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect\n                          @items={{this.items}} @searchEnabled={{true}} @onSearch={{this.onSearch}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"VNX3UGGQ\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSearch\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select input.upf-input').exists();\n          await (0, _testHelpers.typeIn)('.upf-infinite-select input.upf-input', 'b');\n        });\n        (0, _qunit.test)('it uses the passed placeholder when present', async function (assert) {\n          this.onSearch = () => {};\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                      <OSS::InfiniteSelect\n                        @items={{this.items}} @searchEnabled={{true}} @onSearch={{this.onSearch}} @searchPlaceholder=\"Foobar\"\n                        @onSelect={{this.onSelect}}/>\n                    \n          */\n          {\n            \"id\": \"zmidhmJv\",\n            \"block\": \"[[[1,\\\"\\\\n            \\\"],[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSearch\\\",\\\"@searchPlaceholder\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,[30,0,[\\\"onSearch\\\"]],\\\"Foobar\\\",[30,0,[\\\"onSelect\\\"]]]],null],[1,\\\"\\\\n          \\\"]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select input.upf-input').exists();\n          assert.dom('.upf-infinite-select input.upf-input').hasAttribute('placeholder', 'Foobar');\n        });\n      });\n    });\n    (0, _qunit.module)('item selection', function () {\n      (0, _qunit.module)('onSelect is passed', function () {\n        (0, _qunit.test)('it calls the onSelect hook with the clicked item', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = item => {\n            assert.equal(item.name, 'Batman');\n          };\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"YU8eRyjM\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.click)('.upf-infinite-select__items-container .upf-infinite-select__item:first-child');\n        });\n      });\n    });\n    (0, _qunit.module)('loading states', function () {\n      (0, _qunit.module)('full content loading', function () {\n        (0, _qunit.test)('should display rows of skeleton loading in place of the content', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @loading={{true}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"PV95TKPs\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@loading\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').doesNotExist();\n          assert.dom('.upf-infinite-select__items-container .upf-skeleton-effect').exists({\n            count: 5\n          });\n        });\n      });\n      (0, _qunit.module)('additional content loading', function () {\n        (0, _qunit.test)('should display rows of skeleton loading after the existing content', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @loadingMore={{true}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"2QRiNZ1/\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@loadingMore\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').exists({\n            count: FAKE_DATA.length\n          });\n          assert.dom('.upf-infinite-select__items-container .upf-skeleton-effect').exists({\n            count: 3\n          });\n        });\n      });\n    });\n    (0, _qunit.module)('it renders', function () {\n      (0, _qunit.module)('with itemLabel', function () {\n        (0, _qunit.test)('it uses the passed itemLabel argument as display key', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @itemLabel=\"characters\" @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"DGWqF5sk\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@itemLabel\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],\\\"characters\\\",false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').exists({\n            count: FAKE_DATA.length\n          });\n          let displayedNames = [];\n          document.querySelectorAll('.upf-infinite-select__items-container .upf-infinite-select__item').forEach(x => {\n            displayedNames.push(x.textContent.trim());\n          });\n          assert.deepEqual(displayedNames, FAKE_DATA.map(x => x.characters));\n        });\n      });\n      (0, _qunit.module)('with option block', function () {\n        (0, _qunit.test)('it uses the passed block to display options', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                      <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}>\n                        <:option as |opt|>\n                          Comics - {{opt.name}}\n                        </:option>\n                      </OSS::InfiniteSelect>\n                    \n          */\n          {\n            \"id\": \"U9wMQPOn\",\n            \"block\": \"[[[1,\\\"\\\\n            \\\"],[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n                Comics - \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n              \\\"]],[1]]]]],[1,\\\"\\\\n          \\\"]],[\\\"opt\\\"],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').exists({\n            count: FAKE_DATA.length\n          });\n          let displayedNames = [];\n          document.querySelectorAll('.upf-infinite-select__items-container .upf-infinite-select__item').forEach(x => {\n            displayedNames.push(x.textContent.trim());\n          });\n          assert.deepEqual(displayedNames, FAKE_DATA.map(x => `Comics - ${x.name}`));\n        });\n      });\n      (0, _qunit.module)('with empty items', function () {\n        (0, _qunit.test)('it should render the empty state', async function (assert) {\n          this.items = [];\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"YU8eRyjM\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select__items-container').hasClass('upf-infinite-select__items-container--empty');\n          assert.dom('.upf-infinite-select__items-container [data-control-name=\"infinite-select-empty-state-illustration\"]');\n        });\n      });\n      (0, _qunit.module)('with inline', function () {\n        (0, _qunit.test)('it should render with undefined arg', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"YU8eRyjM\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select.upf-infinite-select--absolute').exists({\n            count: 1\n          });\n        });\n        (0, _qunit.test)('it should render with falsy arg', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"pX8GiE7G\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select.upf-infinite-select--absolute').exists({\n            count: 1\n          });\n        });\n        (0, _qunit.test)('it should render with truthy arg', async function (assert) {\n          this.items = FAKE_DATA;\n          this.onSelect = () => {};\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{true}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n          */\n          {\n            \"id\": \"PAyUYGP4\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-infinite-select').exists({\n            count: 1\n          });\n          assert.dom('.upf-infinite-select--absolute').doesNotExist();\n        });\n      });\n    });\n    (0, _qunit.module)('with onBottomReached', function () {\n      (0, _qunit.test)('it should trigger onBottomReach function', async function (assert) {\n        this.items = FAKE_DATA;\n        this.onSelect = () => {};\n        this.loadingMore = false;\n        this.onBottomReached = _sinon.default.stub().callsFake(() => {\n          this.set('loadingMore', true);\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                       @loadingMore={{this.loadingMore}} @onBottomReached={{this.onBottomReached}} />\n                \n        */\n        {\n          \"id\": \"Rl7Cugrc\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@loadingMore\\\",\\\"@onBottomReached\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"loadingMore\\\"]],[30,0,[\\\"onBottomReached\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n        this.set('loadingMore', false);\n        await (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n        assert.ok(this.onBottomReached.calledTwice);\n      });\n    });\n    (0, _qunit.module)('Keyboard control management', function (hooks) {\n      hooks.beforeEach(function () {\n        this.items = FAKE_DATA;\n        this.onSelect = () => {};\n        this.onSearch = () => {};\n      });\n      (0, _qunit.module)('If keyboard is disabled', function () {\n        (0, _qunit.test)('The first element should not be focused on load', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}} />\n          */\n          {\n            \"id\": \"pX8GiE7G\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n        });\n        (0, _qunit.test)('The keyboard controls are disabled', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}} />\n          */\n          {\n            \"id\": \"pX8GiE7G\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          await (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'ArrowDown');\n          assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[1]));\n        });\n      });\n      (0, _qunit.module)('If keyboard is enabled', function (hooks) {\n        hooks.beforeEach(function () {\n          this.enableKeyboard = true;\n        });\n        (0, _qunit.module)('If Search is enabled', function () {\n          (0, _qunit.test)('Search input should be focused', async function (assert) {\n            await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n            /*\n              <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                 @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}}/>\n            */\n            {\n              \"id\": \"6CC6Hesg\",\n              \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n              \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n              \"isStrictMode\": false\n            }));\n            assert.ok(_isFocused(document.querySelector('.upf-input')));\n            assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          });\n          (0, _qunit.test)('On keydown Enter it should focus the first element', async function (assert) {\n            await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n            /*\n              <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                 @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}}/>\n            */\n            {\n              \"id\": \"6CC6Hesg\",\n              \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n              \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n              \"isStrictMode\": false\n            }));\n            assert.ok(_isFocused(document.querySelector('.upf-input')));\n            await (0, _testHelpers.triggerKeyEvent)('.upf-input', 'keydown', 'Enter');\n            assert.notOk(_isFocused(document.querySelector('.upf-input')));\n            assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          });\n          (0, _qunit.test)('On keydown ArrowDown it should focus the first element', async function (assert) {\n            await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n            /*\n              <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                 @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}}/>\n            */\n            {\n              \"id\": \"6CC6Hesg\",\n              \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n              \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n              \"isStrictMode\": false\n            }));\n            assert.ok(_isFocused(document.querySelector('.upf-input')));\n            await (0, _testHelpers.triggerKeyEvent)('.upf-input', 'keydown', 'ArrowDown');\n            assert.notOk(_isFocused(document.querySelector('.upf-input')));\n            assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          });\n          (0, _qunit.test)('On keydown Enter it should call the onClose action', async function (assert) {\n            this.onClose = _sinon.default.stub();\n            await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n            /*\n              <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                 @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}} @onClose={{this.onClose}}/>\n            */\n            {\n              \"id\": \"4pHpxGHY\",\n              \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\",\\\"@onClose\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n              \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n              \"isStrictMode\": false\n            }));\n            assert.ok(_isFocused(document.querySelector('.upf-input')));\n            assert.ok(this.onClose.notCalled);\n            await (0, _testHelpers.triggerKeyEvent)('.upf-input', 'keydown', 'Escape');\n            assert.ok(this.onClose.calledOnce);\n          });\n        });\n        (0, _qunit.test)('The first element should be focuses on load', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                             @enableKeyboard={{this.enableKeyboard}}/>\n          */\n          {\n            \"id\": \"dDi5PIb8\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n        });\n        (0, _qunit.test)('On keydown ArrowUp & ArrowDown it should control the focused element', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                             @enableKeyboard={{this.enableKeyboard}}/>\n          */\n          {\n            \"id\": \"dDi5PIb8\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          await (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'ArrowDown');\n          assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n          assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[1]));\n          await (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'ArrowUp');\n          assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[1]));\n          assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n        });\n        (0, _qunit.test)('On keydown Enter it should select the focused element', async function (assert) {\n          this.onSelect = _sinon.default.stub();\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                             @enableKeyboard={{this.enableKeyboard}}/>\n          */\n          {\n            \"id\": \"dDi5PIb8\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          const el = document.querySelectorAll('.upf-infinite-select__item')[0];\n          assert.ok(_isFocused(el));\n          assert.ok(this.onSelect.notCalled);\n          await (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'Enter');\n          assert.ok(this.onSelect.calledOnceWith(FAKE_DATA[0]));\n        });\n        (0, _qunit.test)('On keydown Tab/Escape it should call the onClose action', async function (assert) {\n          this.onClose = _sinon.default.stub();\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                             @enableKeyboard={{this.enableKeyboard}} @onClose={{this.onClose}}/>\n          */\n          {\n            \"id\": \"7mvfvN+3\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onClose\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.ok(this.onClose.notCalled);\n          await (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'Tab');\n          assert.ok(this.onClose.calledOnce);\n          await (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'Escape');\n          assert.ok(this.onClose.calledTwice);\n        });\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.module)('On item selection, if onSelect is not passed', function () {\n        (0, _qunit.test)('it should throw an error', async function (assert) {\n          (0, _testHelpers.setupOnerror)(err => {\n            assert.equal(err.message, 'Assertion Failed: [component][OSS::InfiniteSelect] `onSelect` action is mandatory');\n          });\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} />\n          */\n          {\n            \"id\": \"MQHnGCey\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\"],[[30,0,[\\\"items\\\"]],false]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n        });\n      });\n      (0, _qunit.module)('When the search is enabled, if no onSearch hook has been passed', function () {\n        (0, _qunit.test)('should throw an error', async function (assert) {\n          (0, _testHelpers.setupOnerror)(err => {\n            assert.equal(err.message, 'Assertion Failed: [component][OSS::InfiniteSelect] Search is enabled without an `onSearch` action being passed');\n          });\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{true}} />\n          */\n          {\n            \"id\": \"RhR382Cb\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\"],[[30,0,[\\\"items\\\"]],true]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/infinite-select-test.js\",\n            \"isStrictMode\": false\n          }));\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/information-section-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-intl/test-support\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _testSupport, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"ember-intl/test-support\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/information-section', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.title = 'Information Section Title';\n      this.subtitle = 'Information Section subtitle';\n      this.namedBlockContent = 'Information Section Custom Content';\n      this.icon = 'fa-pen';\n      this.imageUrl = '/assets/images/upfluence-white-logo.svg';\n      this.actionButton = {\n        label: 'Test Button',\n        icon: 'fa-pen'\n      };\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InformationSection @title={{this.title}}/>\n      */\n      {\n        \"id\": \"T/k3PMfP\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(\"[data-control-name='information-section']\").exists();\n    });\n    (0, _qunit.test)('it renders the @title arg', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InformationSection @title={{this.title}}/>\n      */\n      {\n        \"id\": \"T/k3PMfP\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.font-color-gray-900.font-size-md.font-weight-semibold').hasText(this.title);\n    });\n    (0, _qunit.test)('it renders the @subtitle arg', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InformationSection @title={{this.title}} @subtitle={{this.subtitle}}/>\n      */\n      {\n        \"id\": \"gm5TlNo7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]]]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.font-color-gray-500').hasText(this.subtitle);\n    });\n    (0, _qunit.module)('plain arg', function () {\n      (0, _qunit.test)('it renders the header with a grey background when @plain is false', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @title={{this.title}} @plain={{false}}/>\n        */\n        {\n          \"id\": \"J5F/N78N\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@plain\\\"],[[30,0,[\\\"title\\\"]],false]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(\"[data-control-name='information-section-header']\").hasClass('background-color-gray-50');\n      });\n      (0, _qunit.test)('it renders the header with a white background when @plain is true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @title={{this.title}} @plain={{true}}/>\n        */\n        {\n          \"id\": \"LaQxwb/s\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@plain\\\"],[[30,0,[\\\"title\\\"]],true]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(\"[data-control-name='information-section-header']\").hasClass('background-color-white');\n      });\n      (0, _qunit.test)('it renders the header with a white background when @plain is unspecified', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @title={{this.title}} />\n        */\n        {\n          \"id\": \"T/k3PMfP\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(\"[data-control-name='information-section-header']\").hasClass('background-color-white');\n      });\n    });\n    (0, _qunit.module)('badge icons', function () {\n      (0, _qunit.test)('it renders the icon with @badgeIcon arg', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @badgeIcon={{this.icon}} @title={{this.title}}/>\n        */\n        {\n          \"id\": \"TKar9rkq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@badgeIcon\\\",\\\"@title\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge i').hasClass(this.icon);\n      });\n      (0, _qunit.test)('it renders the icon with an svg icon as @badgeIcon arg', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @imageUrl={{this.imageUrl}} @title={{this.title}}/>\n        */\n        {\n          \"id\": \"ItGKDY3d\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@imageUrl\\\",\\\"@title\\\"],[[30,0,[\\\"imageUrl\\\"]],[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-badge img').hasAttribute('src', this.imageUrl);\n      });\n      (0, _qunit.test)('it renders the badge with badge named block', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @title={{this.title}}>\n                                  <:badge>\n                                    <OSS::Badge\n                                      data-control-name=\"test-badge\"\n                                      @icon={{this.icon}}\n                                    />\n                                  </:badge>\n                                </OSS::InformationSection>\n        */\n        {\n          \"id\": \"uWL32ex8\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],[[\\\"badge\\\"],[[[[1,\\\"\\\\n                            \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"test-badge\\\"]],[[\\\"@icon\\\"],[[30,0,[\\\"icon\\\"]]]],null],[1,\\\"\\\\n                          \\\"]],[]]]]]],[],false,[\\\"o-s-s/information-section\\\",\\\"o-s-s/badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(\"[data-control-name='test-badge']\").exists();\n      });\n    });\n    (0, _qunit.module)('actions named block', function () {\n      (0, _qunit.test)('it renders', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @title={{this.title}}>\n                                  <:action>\n                                    <div data-control-name=\"actions-named-block\">\n                                      <OSS::Button\n                                        data-control-name=\"test-button\"\n                                        @label={{this.actionButton.label}}\n                                        @icon={{this.actionButton.icon}}\n                                      />\n                                    </div>\n                                  </:action>\n                                </OSS::InformationSection>\n        */\n        {\n          \"id\": \"H+K6/RIK\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],[[\\\"action\\\"],[[[[1,\\\"\\\\n                            \\\"],[10,0],[14,\\\"data-control-name\\\",\\\"actions-named-block\\\"],[12],[1,\\\"\\\\n                              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"test-button\\\"]],[[\\\"@label\\\",\\\"@icon\\\"],[[30,0,[\\\"actionButton\\\",\\\"label\\\"]],[30,0,[\\\"actionButton\\\",\\\"icon\\\"]]]],null],[1,\\\"\\\\n                            \\\"],[13],[1,\\\"\\\\n                          \\\"]],[]]]]]],[],false,[\\\"o-s-s/information-section\\\",\\\"o-s-s/button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(\"[data-control-name='actions-named-block']\").exists();\n      });\n    });\n    (0, _qunit.module)('content named block', function () {\n      (0, _qunit.test)('it renders', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InformationSection @title={{this.title}}>\n                                  <:content>\n                                    <p data-control-name='content-named-block'>{{this.namedBlockContent}}</p>\n                                  </:content>\n                                </OSS::InformationSection>\n        */\n        {\n          \"id\": \"L5eGXb8j\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n                            \\\"],[10,2],[14,\\\"data-control-name\\\",\\\"content-named-block\\\"],[12],[1,[30,0,[\\\"namedBlockContent\\\"]]],[13],[1,\\\"\\\\n                          \\\"]],[]]]]]],[],false,[\\\"o-s-s/information-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/information-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(\"[data-control-name='content-named-block']\").hasText(this.namedBlockContent);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/input-container-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/input-container', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputContainer />\n      */\n      {\n        \"id\": \"/S7gOB9A\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-input').exists();\n    });\n    (0, _qunit.module)('Input Blocks', () => {\n      async function renderComponentWithPrefixSuffix() {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n              <OSS::InputContainer>\n                <:prefix>\n                  <OSS::Icon @style=\"solid\" @icon=\"fa-user\" />\n                </:prefix>\n                <:input>\n                  <Input id=\"custom-input\"/>\n                </:input>\n                <:suffix>\n                  <OSS::Icon @style=\"solid\" @icon=\"fa-times\" />\n                </:suffix>\n              </OSS::InputContainer>\n        */\n        {\n          \"id\": \"g69wZ47T\",\n          \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"prefix\\\",\\\"input\\\",\\\"suffix\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@style\\\",\\\"@icon\\\"],[\\\"solid\\\",\\\"fa-user\\\"]],null],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[8,[39,2],[[24,1,\\\"custom-input\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@style\\\",\\\"@icon\\\"],[\\\"solid\\\",\\\"fa-times\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/input-container\\\",\\\"o-s-s/icon\\\",\\\"input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n      }\n      (0, _qunit.test)('Passing a :prefix named-block renders the block properly', async function (assert) {\n        await renderComponentWithPrefixSuffix();\n        assert.dom('.fa-user').exists();\n      });\n      (0, _qunit.test)('Passing a :suffix named-block renders the block properly', async function (assert) {\n        await renderComponentWithPrefixSuffix();\n        assert.dom('.fa-times').exists();\n      });\n      (0, _qunit.test)('Passing an :input named-block overloads the default input', async function (assert) {\n        await renderComponentWithPrefixSuffix();\n        assert.dom('#custom-input').exists();\n      });\n    });\n    (0, _qunit.module)('Component Parameters', hooks => {\n      let onValueChange;\n      hooks.beforeEach(function () {\n        onValueChange = _sinon.default.fake.returns(true);\n        this.set('value', 'testValue');\n        this.set('placeholder', 'Type your text');\n        this.set('onValueChange', onValueChange);\n      });\n      async function renderComponentWithParameters() {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::InputContainer @value={{this.value}}\n                                     @onChange={{this.onValueChange}}\n                                     @placeholder={{this.placeholder}} />\n        */\n        {\n          \"id\": \"As0hJu+6\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@placeholder\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onValueChange\\\"]],[30,0,[\\\"placeholder\\\"]]]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n      }\n      (0, _qunit.test)('Passing a @value parameter works', async function (assert) {\n        await renderComponentWithParameters();\n        assert.dom('.upf-input').hasValue('testValue');\n      });\n      (0, _qunit.test)('Passing a @placeholder parameter works', async function (assert) {\n        await renderComponentWithParameters();\n        let inputElement = (0, _testHelpers.find)('.upf-input');\n        assert.equal(inputElement.getAttribute('placeholder'), 'Type your text');\n      });\n      (0, _qunit.test)('Passing an @onChange method works and is triggered on input changes', async function (assert) {\n        await renderComponentWithParameters();\n        let inputElement = (0, _testHelpers.find)('.upf-input');\n        await (0, _testHelpers.typeIn)(inputElement, 'a');\n        assert.ok(onValueChange.called);\n      });\n      (0, _qunit.test)('Passing an @onChange method works and is triggered on copy event', async function (assert) {\n        this.onChange = _sinon.default.stub();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer data-control-name=\"firstname-input\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"T23nYTSA\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"firstname-input\\\"]],[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.onChange.notCalled);\n        await (0, _testHelpers.triggerEvent)('.oss-input-container input', 'paste', {\n          clipboardData: {\n            getData: format => `clipboardFormat/${format}`\n          }\n        });\n        assert.ok(this.onChange.calledWith('clipboardFormat/Text'));\n      });\n    });\n    (0, _qunit.module)('feedback messages', () => {\n      (0, _qunit.test)('Passing success as @feedbackMessage.type displays the success message and sets the border to green', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @feedbackMessage={{hash type=\"success\" value=\"This is a success message\"}} />\n        */\n        {\n          \"id\": \"uLNYThG4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@feedbackMessage\\\"],[[28,[37,1],null,[[\\\"type\\\",\\\"value\\\"],[\\\"success\\\",\\\"This is a success message\\\"]]]]],null]],[],false,[\\\"o-s-s/input-container\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').hasClass('oss-input-container--success');\n        assert.dom('i.far').hasClass('fa-check-circle');\n        assert.dom('.font-color-success-500').hasText('This is a success message');\n      });\n      (0, _qunit.test)('Passing warning as @feedbackMessage.type displays the warning message and sets the border to yellow', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @feedbackMessage={{hash type=\"warning\" value=\"This is a warning message\"}} />\n        */\n        {\n          \"id\": \"XZd22ntW\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@feedbackMessage\\\"],[[28,[37,1],null,[[\\\"type\\\",\\\"value\\\"],[\\\"warning\\\",\\\"This is a warning message\\\"]]]]],null]],[],false,[\\\"o-s-s/input-container\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').hasClass('oss-input-container--warning');\n        assert.dom('i.far').hasClass('fa-exclamation-circle');\n        assert.dom('.font-color-warning-500').hasText('This is a warning message');\n      });\n      (0, _qunit.test)('Passing error as @feedbackMessage.type displays the error message and sets the border to red', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @feedbackMessage={{hash type=\"error\" value=\"This is an error message\"}} />\n        */\n        {\n          \"id\": \"SdspPatn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@feedbackMessage\\\"],[[28,[37,1],null,[[\\\"type\\\",\\\"value\\\"],[\\\"error\\\",\\\"This is an error message\\\"]]]]],null]],[],false,[\\\"o-s-s/input-container\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').hasClass('oss-input-container--error');\n        assert.dom('.font-color-error-500').hasText('This is an error message');\n      });\n      (0, _qunit.test)(\"Passing an invalid feedbackMessage type doesn't display any message\", async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @feedbackMessage={{hash type=\"invalid\" value=\"This is an invalid message\"}} />\n        */\n        {\n          \"id\": \"Iz4Fl5KU\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@feedbackMessage\\\"],[[28,[37,1],null,[[\\\"type\\\",\\\"value\\\"],[\\\"invalid\\\",\\\"This is an invalid message\\\"]]]]],null]],[],false,[\\\"o-s-s/input-container\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-input').exists();\n        assert.dom('.font-color-success-500').doesNotExist();\n        assert.dom('.font-color-warning-500').doesNotExist();\n        assert.dom('.font-color-error-500').doesNotExist();\n        assert.dom('.oss-input-container').doesNotHaveTextContaining('This is an invalid message');\n      });\n    });\n    (0, _qunit.module)('Error States', () => {\n      (0, _qunit.test)('Passing an @errorMessage parameter displays an error message and sets the input border to red', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @errorMessage=\"This is an error message\" />\n        */\n        {\n          \"id\": \"rhUmu+UH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@errorMessage\\\"],[\\\"This is an error message\\\"]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n        assert.dom('.text-color-error').hasText('This is an error message');\n      });\n      (0, _qunit.test)('Setting @errorMessage parameter to an empty string does not display an error message', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @errorMessage=\"\" />\n        */\n        {\n          \"id\": \"8B1zdt7L\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@errorMessage\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').doesNotHaveClass('oss-input-container--errored');\n        assert.dom('.text-color-error').doesNotExist();\n      });\n      (0, _qunit.test)('Passing a @hasError parameter displays a red border around the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @hasError={{true}} />\n        */\n        {\n          \"id\": \"dyHL4R8o\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@hasError\\\"],[true]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n      });\n      (0, _qunit.test)('Setting @hasError parameter to false does not display a red border around the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @hasError={{false}} />\n        */\n        {\n          \"id\": \"3T/0079a\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@hasError\\\"],[false]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').doesNotHaveClass('oss-input-container--errored');\n      });\n      (0, _qunit.test)('Setting @hasError parameter to undefined does not display a red border around the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @hasError={{undefined}} />\n        */\n        {\n          \"id\": \"OEJuKlrB\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@hasError\\\"],[[27]]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').doesNotHaveClass('oss-input-container--errored');\n      });\n      (0, _qunit.test)('Having both @errorMessage and @hasError parameters set to true displays the error message', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @errorMessage=\"This is an error message\" @hasError={{true}} />\n        */\n        {\n          \"id\": \"fVwEVyNr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@errorMessage\\\",\\\"@hasError\\\"],[\\\"This is an error message\\\",true]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n        assert.dom('.text-color-error').hasText('This is an error message');\n      });\n    });\n    (0, _qunit.module)('Extra attributes', () => {\n      (0, _qunit.test)('passing an extra class is applied to the component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer class=\"my-extra-class\" />\n        */\n        {\n          \"id\": \"HMD2z53l\",\n          \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.my-extra-class').exists();\n      });\n      (0, _qunit.test)('passing data-control-name works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer data-control-name=\"firstname-input\" />\n        */\n        {\n          \"id\": \"0R+dVRfx\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"firstname-input\\\"]],null,null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-container-test.js\",\n          \"isStrictMode\": false\n        }));\n        let inputWrapper = (0, _testHelpers.find)('.oss-input-container');\n        assert.equal(inputWrapper.getAttribute('data-control-name'), 'firstname-input');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/input-group-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/input-group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup @prefix=\"username\" />\n      */\n      {\n        \"id\": \"dRO52ngX\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\"],[\\\"username\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group').exists();\n    });\n    (0, _qunit.test)('Passing the @prefix parameter displays the input prefix', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup @prefix=\"username\" />\n      */\n      {\n        \"id\": \"dRO52ngX\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\"],[\\\"username\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group-row-prefix').hasText('username');\n    });\n    (0, _qunit.test)('Passing the @suffix parameter displays the input suffix', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup @suffix=\"@domain.com\" />\n      */\n      {\n        \"id\": \"m+9zhpeW\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@suffix\\\"],[\\\"@domain.com\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group-row-suffix').hasText('@domain.com');\n    });\n    (0, _qunit.test)('Passing the @suffix parameter displays the input suffix', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup @prefix=\"email\" @suffix=\"@domain.com\" />\n      */\n      {\n        \"id\": \"Kyro+fY3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\"],[\\\"email\\\",\\\"@domain.com\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group-row-prefix').hasText('email');\n      assert.dom('.oss-input-group-row-suffix').hasText('@domain.com');\n    });\n    (0, _qunit.test)('Passing the @errorMessage parameter displays the error message', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup @suffix=\"@domain.com\" @errorMessage=\"This is an error.\" />\n      */\n      {\n        \"id\": \"vAmzUX8C\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@suffix\\\",\\\"@errorMessage\\\"],[\\\"@domain.com\\\",\\\"This is an error.\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group-row--error').exists();\n      assert.dom('.oss-input-group span').hasText('This is an error.');\n    });\n    (0, _qunit.test)('Passing the @errorMessage sets an error border on the whole compoenent', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup @prefix=\"random\" @suffix=\"@domain.com\" @errorMessage=\"This is an error.\" />\n      */\n      {\n        \"id\": \"3HHUug6Z\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@errorMessage\\\"],[\\\"random\\\",\\\"@domain.com\\\",\\\"This is an error.\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group-row--error').exists();\n      assert.dom('.oss-input-group-row--error').hasStyle({\n        borderColor: 'rgb(239, 68, 68)'\n      });\n    });\n    (0, _qunit.test)('it fails if no prefix or suffix parameters are passed', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [component][OSS::InputGroup] No @prefix or @suffix parameter were passed. If you are not going to use any, you should use an OSS::InputContainer.');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::InputGroup />\n      */\n      {\n        \"id\": \"lHvxrJhV\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/input-group-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/layout/navbar/navitem', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Layout::Navbar::NavItem\n              @icon=\"fa-users\"\n              @label=\"Label\"\n            />\n          \n      */\n      {\n        \"id\": \"P9NcPyr3\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-users\\\",\\\"Label\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/layout/navbar/nav-item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-navbar-item').exists();\n    });\n    (0, _qunit.test)('it renders the icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Layout::Navbar::NavItem\n              @icon=\"fa-users\"\n              @label=\"Label\"\n            />\n          \n      */\n      {\n        \"id\": \"P9NcPyr3\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-users\\\",\\\"Label\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/layout/navbar/nav-item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('i').exists().hasClass('fa-users');\n    });\n    (0, _qunit.test)('it renders the label', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Layout::Navbar::NavItem\n              @icon=\"fa-users\"\n              @label=\"Label\"\n            />\n          \n      */\n      {\n        \"id\": \"P9NcPyr3\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-users\\\",\\\"Label\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/layout/navbar/nav-item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('span').exists().hasText('Label');\n    });\n    (0, _qunit.test)('it renders the extra content block content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Layout::Navbar::NavItem\n              @icon=\"fa-users\"\n              @label=\"Label\"\n            >\n              <:extra>\n                <div id=\"extra-content\">\n                  Extra content\n                </div>\n              </:extra>\n            </OSS::Layout::Navbar::NavItem>\n          \n      */\n      {\n        \"id\": \"3sjXDOO0\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-users\\\",\\\"Label\\\"]],[[\\\"extra\\\"],[[[[1,\\\"\\\\n          \\\"],[10,0],[14,1,\\\"extra-content\\\"],[12],[1,\\\"\\\\n            Extra content\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/layout/navbar/nav-item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#extra-content').exists().hasText('Extra content');\n    });\n    (0, _qunit.test)('it has the extra right classes when @active is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Layout::Navbar::NavItem\n              @icon=\"fa-users\"\n              @label=\"Label\"\n              @active={{true}}\n            />\n          \n      */\n      {\n        \"id\": \"6TAkIxyr\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@active\\\"],[\\\"fa-users\\\",\\\"Label\\\",true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/layout/navbar/nav-item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/navbar/nav-item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-navbar-item--active').exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/layout/sidebar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/layout/sidebar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Layout::Sidebar />\n      */\n      {\n        \"id\": \"MWVxgMJN\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-sidebar--containers').exists();\n    });\n    (0, _qunit.test)('it renders the logo when present', async function (assert) {\n      this.logo = '/toto.png';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Layout::Sidebar @logo={{this.logo}}/>\n      */\n      {\n        \"id\": \"Kw1Gwufu\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@logo\\\"],[[30,0,[\\\"logo\\\"]]]],null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(document.querySelector('.oss-sidebar--containers .logo-container img')?.getAttribute('src'), '/toto.png');\n    });\n    (0, _qunit.module)('Named block', () => {\n      (0, _qunit.test)('The content named-block is properly displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::Layout::Sidebar>\n                  <:content>\n                    <p>This is the content</p>\n                  </:content>\n                </OSS::Layout::Sidebar>\n        */\n        {\n          \"id\": \"/6HnVkNv\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"content\\\"],[[[[1,\\\"\\\\n            \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-sidebar--content').hasText('This is the content');\n      });\n      (0, _qunit.test)('The footer named-block is properly displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::Layout::Sidebar>\n                  <:footer>\n                    footer content\n                  </:footer>\n                </OSS::Layout::Sidebar>\n        */\n        {\n          \"id\": \"GbMJ54vD\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"footer\\\"],[[[[1,\\\"\\\\n            footer content\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-sidebar--footer').hasText('footer content');\n      });\n    });\n    (0, _qunit.module)('Extra attributes', () => {\n      (0, _qunit.test)('passing an extra class is applied to the component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar class=\"my-extra-class\" />\n        */\n        {\n          \"id\": \"51hfcHPM\",\n          \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.my-extra-class').exists();\n      });\n      (0, _qunit.test)('passing data-control-name works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar data-control-name=\"layout-sidebar\" />\n        */\n        {\n          \"id\": \"rcSpR1SB\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"layout-sidebar\\\"]],null,null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let inputWrapper = (0, _testHelpers.find)('.oss-sidebar--containers');\n        assert.equal(inputWrapper?.getAttribute('data-control-name'), 'layout-sidebar');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/layout/sidebar/item-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | oss/layout/sidebar/item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" />\n      */\n      {\n        \"id\": \"zRXo9p88\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-sidebar-item').exists();\n    });\n    (0, _qunit.test)('it renders the icon when present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Layout::Sidebar::Item @icon=\"fal fa-search\" />\n      */\n      {\n        \"id\": \"olgroMY7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fal fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-sidebar-item .oss-sidebar-item--icon i').hasClass('fa-search');\n    });\n    (0, _qunit.module)('Arguments', () => {\n      (0, _qunit.test)('Default value for locked is false', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\"/>\n        */\n        {\n          \"id\": \"zRXo9p88\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-sidebar-item--locked').doesNotExist();\n      });\n      (0, _qunit.test)('When locked is true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @locked={{true}}/>\n        */\n        {\n          \"id\": \"56tac0XL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@locked\\\"],[\\\"far fa-search\\\",true]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-sidebar-item--locked').exists();\n      });\n      (0, _qunit.test)('Default value for hasNotification is false', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\"/>\n        */\n        {\n          \"id\": \"zRXo9p88\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-sidebar-item--notification').doesNotExist();\n      });\n      (0, _qunit.test)('When hasNotification is true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @hasNotifications={{true}}/>\n        */\n        {\n          \"id\": \"/V43CXzT\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@hasNotifications\\\"],[\\\"far fa-search\\\",true]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-sidebar-item--notification').exists();\n      });\n    });\n    (0, _qunit.module)('Actions', function (hooks) {\n      hooks.beforeEach(function () {\n        this.defaultAction = _sinon.default.spy();\n        this.lockedAction = _sinon.default.spy();\n      });\n      (0, _qunit.test)('OnClick it redirect to the @link attribute', async function (assert) {\n        const router = this.owner.lookup('service:router');\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @link=\"index\" @lockedAction={{this.lockedAction}}/>\n        */\n        {\n          \"id\": \"IUtR/p3O\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@link\\\",\\\"@lockedAction\\\"],[\\\"far fa-search\\\",\\\"index\\\",[30,0,[\\\"lockedAction\\\"]]]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.equal(router.currentRouteName, null);\n        await (0, _testHelpers.click)('.oss-sidebar-item');\n        assert.equal(router.currentRouteName, 'index');\n      });\n      (0, _qunit.test)('When locked is true lockedAction is triggered', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @locked={{true}} @defaultAction={{this.defaultAction}} @lockedAction={{this.lockedAction}}/>\n        */\n        {\n          \"id\": \"hO9alJPM\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@locked\\\",\\\"@defaultAction\\\",\\\"@lockedAction\\\"],[\\\"far fa-search\\\",true,[30,0,[\\\"defaultAction\\\"]],[30,0,[\\\"lockedAction\\\"]]]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-sidebar-item');\n        assert.ok(this.defaultAction.notCalled);\n        assert.ok(this.lockedAction.calledOnce);\n      });\n    });\n    (0, _qunit.module)('Extra attributes', () => {\n      (0, _qunit.test)('passing an extra class is applied to the component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" class=\"my-extra-class\" />\n        */\n        {\n          \"id\": \"rLwL9Iqk\",\n          \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.my-extra-class').exists();\n      });\n      (0, _qunit.test)('passing data-control-name works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" data-control-name=\"layout-sidebar\" />\n        */\n        {\n          \"id\": \"MwyCNW+P\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"layout-sidebar\\\"]],[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let inputWrapper = (0, _testHelpers.find)('.oss-sidebar-item');\n        assert.equal(inputWrapper?.getAttribute('data-control-name'), 'layout-sidebar');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders with icon only', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Link @icon=\"fab fa-facebook\" />\n      */\n      {\n        \"id\": \"ClGlh4mg\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fab fa-facebook\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/link-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-link i').hasClass('fa-facebook');\n    });\n    (0, _qunit.test)('it renders with label only', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Link @label=\"Super Label\" />\n      */\n      {\n        \"id\": \"q5Y2BgZ+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Super Label\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/link-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-link span').hasText('Super Label');\n    });\n    (0, _qunit.test)('it renders with both label and icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Link @icon=\"fab fa-facebook\" @label=\"Facebook\" />\n      */\n      {\n        \"id\": \"nkeYQk9b\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fab fa-facebook\\\",\\\"Facebook\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/link-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-link i').hasClass('fa-facebook');\n      assert.dom('.upf-link span').hasClass('margin-left-xxx-sm');\n      assert.dom('.upf-link span').hasText('Facebook');\n    });\n    (0, _qunit.test)('it opens link with href and target', async function (assert) {\n      let windowOpenStub = _sinon.default.stub(window, 'open');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Link @icon=\"fab fa-facebook\" @label=\"Facebook\"\n                       @link={{hash href=\"https://www.google.fr\" target=\"_blank\"}} />\n          \n      */\n      {\n        \"id\": \"HzJM2WT9\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@link\\\"],[\\\"fab fa-facebook\\\",\\\"Facebook\\\",[28,[37,1],null,[[\\\"href\\\",\\\"target\\\"],[\\\"https://www.google.fr\\\",\\\"_blank\\\"]]]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/link\\\",\\\"hash\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/link-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.upf-link');\n      assert.true(windowOpenStub.calledOnceWithExactly('https://www.google.fr', '_blank'));\n      _sinon.default.restore();\n    });\n    (0, _qunit.test)('it transits to the route', async function (assert) {\n      const router = this.owner.lookup('service:router');\n      let transitionToStub = _sinon.default.stub(router, 'transitionTo');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Link @icon=\"fab fa-facebook\" @label=\"Facebook\" @transitionTo=\"workflow.create\" />\n      */\n      {\n        \"id\": \"1EZf0NcA\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@transitionTo\\\"],[\\\"fab fa-facebook\\\",\\\"Facebook\\\",\\\"workflow.create\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/link-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.upf-link');\n      assert.true(transitionToStub.calledOnceWithExactly('workflow.create'));\n    });\n    (0, _qunit.test)('it fails if no label nor icon argument are present', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [component][OSS::Link] You must pass either a @label or an @icon argument.');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Link />\n      */\n      {\n        \"id\": \"TANcyMu3\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/link-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/modal-dialog-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/test-helpers/dom/click\", \"@ember/object\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _click, _object, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@ember/test-helpers/dom/click\",0,\"@ember/object\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/modal-dialog', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.closeModal = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n      */\n      {\n        \"id\": \"yWeYC1Ar\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog').exists();\n    });\n    (0, _qunit.test)('On escape button the modal is closed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n      */\n      {\n        \"id\": \"yWeYC1Ar\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerKeyEvent)('.oss-modal-dialog', 'keyup', 27);\n      assert.ok(this.closeModal.calledOnce);\n    });\n    (0, _qunit.test)('The cross button at the top right of the modal closes the modal', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n      */\n      {\n        \"id\": \"yWeYC1Ar\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _click.default)('.fa-times');\n      assert.ok(this.closeModal.calledOnce);\n    });\n    (0, _qunit.test)('The title parameter is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n      */\n      {\n        \"id\": \"yWeYC1Ar\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog .title').hasText('Example modal');\n    });\n    (0, _qunit.test)('The subtitle parameter is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"Subtitle\" @close={{this.closeModal}} @size=\"md\" />\n      */\n      {\n        \"id\": \"Endn/uRu\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"Subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog .subtitle').hasText('Subtitle');\n    });\n    (0, _qunit.test)('The icon parameter is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"Example modal\" @icon=\"fab fa-instagram\" @close={{this.closeModal}} @size=\"md\" />\n      */\n      {\n        \"id\": \"28wqeaKi\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@icon\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"fab fa-instagram\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog header i.fab').hasClass('fa-instagram');\n    });\n    (0, _qunit.test)('The illustration named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\">\n              <:illustration>\n                <p class=\"illustration-container\">Illustration</p>\n              </:illustration>\n            </OSS::ModalDialog>\n      */\n      {\n        \"id\": \"FQjl8+SN\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],[[\\\"illustration\\\"],[[[[1,\\\"\\\\n          \\\"],[10,2],[14,0,\\\"illustration-container\\\"],[12],[1,\\\"Illustration\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.illustration-container').exists();\n    });\n    (0, _qunit.test)('The content named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\">\n              <:content>\n                <p>This is the content</p>\n              </:content>\n            </OSS::ModalDialog>\n      */\n      {\n        \"id\": \"4+9s74CT\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],[[\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog--content').hasText('This is the content');\n    });\n    (0, _qunit.test)('The footer named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\">\n              <:footer>\n                footer content\n              </:footer>\n            </OSS::ModalDialog>\n      */\n      {\n        \"id\": \"BwXPuI1J\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],[[\\\"footer\\\"],[[[[1,\\\"\\\\n          footer content\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog footer').hasText('footer content');\n    });\n    (0, _qunit.module)('Queue management - if the @enqueue param is truthy', () => {\n      (0, _qunit.module)('When rendering two modals', () => {\n        (0, _qunit.test)('The second modal is not displayed', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                        data-control-name=\"modal-a\" />\n                        <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                        data-control-name=\"modal-b\" />\n          */\n          {\n            \"id\": \"S67JVV37\",\n            \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n              \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('[data-control-name=\"modal-a\"]').exists();\n          assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n        });\n        (0, _qunit.test)('When Modal A is closed, Modal B is displayed', async function (assert) {\n          this.helper = _object.default.create({\n            displayModalA: true\n          });\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    {{#if this.helper.displayModalA}}\n                      <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                        data-control-name=\"modal-a\" />\n                    {{/if}}\n                    <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                      data-control-name=\"modal-b\" />\n          */\n          {\n            \"id\": \"HQRNnknE\",\n            \"block\": \"[[[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"helper\\\",\\\"displayModalA\\\"]],[[[1,\\\"            \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"if\\\",\\\"o-s-s/modal-dialog\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('[data-control-name=\"modal-a\"]').exists();\n          assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n          await (0, _click.default)('.fa-times');\n          assert.ok(this.closeModal.calledOnce);\n          this.helper.set('displayModalA', false);\n          await (0, _testHelpers.waitFor)('[data-control-name=\"modal-b\"]', {\n            timeout: 1000\n          });\n          assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n          assert.dom('[data-control-name=\"modal-b\"]').exists();\n        });\n      });\n      (0, _qunit.module)('When rendering multiple modals', () => {\n        (0, _qunit.test)('Only the first modal is displayed', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::ModalDialog @title=\"MODAL C\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                        data-control-name=\"modal-c\" />\n                        <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                          data-control-name=\"modal-b\" />\n                        <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                          data-control-name=\"modal-a\" />\n          */\n          {\n            \"id\": \"2f5J6a7m\",\n            \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-c\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL C\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n              \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n              \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('[data-control-name=\"modal-c\"]').exists();\n          assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n          assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n        });\n        (0, _qunit.test)('Open & close modal flow check', async function (assert) {\n          this.helper = _object.default.create({\n            displayModalA: true,\n            displayModalB: true,\n            displayModalC: true\n          });\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                      {{#if this.helper.displayModalA}}\n                        <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                          data-control-name=\"modal-a\" />\n                      {{/if}}\n                      {{#if this.helper.displayModalB}}\n                        <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                          data-control-name=\"modal-b\" />\n                      {{/if}}\n                      {{#if this.helper.displayModalC}}\n                        <OSS::ModalDialog @title=\"MODAL C\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                          data-control-name=\"modal-c\" />\n                      {{/if}}\n                    \n          */\n          {\n            \"id\": \"ii96NSvM\",\n            \"block\": \"[[[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"helper\\\",\\\"displayModalA\\\"]],[[[1,\\\"              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[41,[30,0,[\\\"helper\\\",\\\"displayModalB\\\"]],[[[1,\\\"              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[41,[30,0,[\\\"helper\\\",\\\"displayModalC\\\"]],[[[1,\\\"              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-c\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL C\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"]],[],false,[\\\"if\\\",\\\"o-s-s/modal-dialog\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('[data-control-name=\"modal-a\"]').exists();\n          assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n          assert.dom('[data-control-name=\"modal-c\"]').doesNotExist();\n          await (0, _click.default)('.fa-times');\n          assert.ok(this.closeModal.calledOnce);\n          this.helper.set('displayModalA', false);\n          assert.false(this.helper.displayModalA);\n          await (0, _testHelpers.waitFor)('[data-control-name=\"modal-b\"]', {\n            timeout: 1000\n          });\n          assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n          assert.dom('[data-control-name=\"modal-b\"]').exists();\n          assert.dom('[data-control-name=\"modal-c\"]').doesNotExist();\n          await (0, _click.default)('.fa-times');\n          assert.ok(this.closeModal.calledTwice);\n          this.helper.set('displayModalB', false);\n          assert.false(this.helper.displayModalB);\n          await (0, _testHelpers.waitFor)('[data-control-name=\"modal-c\"]', {\n            timeout: 1000\n          });\n          assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n          assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n          assert.dom('[data-control-name=\"modal-c\"]').exists();\n        });\n      });\n    });\n    (0, _qunit.test)('If the enqueue parameter is falsy, rendering multiple modals opens all of them', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}}\n                                  data-control-name=\"modal-a\" />\n                <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}}\n                                  data-control-name=\"modal-b\" />\n      */\n      {\n        \"id\": \"+XYw15WR\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]]]],null],[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"modal-a\"]').exists();\n      assert.dom('[data-control-name=\"modal-b\"]').exists();\n    });\n    (0, _qunit.module)('Clicking outside', function () {\n      (0, _qunit.test)('It triggers the close action', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}}\n                                      data-control-name=\"modal-a\" />\n        */\n        {\n          \"id\": \"h+YrkwMS\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.closeModal.notCalled);\n        await (0, _click.default)('.oss-modal-dialog-backdrop');\n        assert.ok(this.closeModal.calledOnce);\n      });\n      (0, _qunit.test)('If the disableClickOutside parameter is truthy, it does not trigger the close action', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}}\n                                      data-control-name=\"modal-a\" @disableClickOutside={{true}}/>\n        */\n        {\n          \"id\": \"hWzwkqmN\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@disableClickOutside\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.closeModal.notCalled);\n        await (0, _click.default)('.oss-modal-dialog-backdrop');\n        assert.ok(this.closeModal.notCalled);\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('The component throws an error if the title parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ModalDialog] The title parameter is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ModalDialog @close={{this.closeModal}}></OSS::ModalDialog>\n        */\n        {\n          \"id\": \"+kHGYvpC\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('The component throws an error if the close parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ModalDialog] The close function is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ModalDialog @title=\"Test\"></OSS::ModalDialog>\n        */\n        {\n          \"id\": \"x+17RDCd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test\\\"]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-dialog-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/modal-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/modal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Modal @title=\"Test Modal\">\n              <div class=\"modal-body\">\n                Foo\n              </div>\n      \n              <div class=\"modal-footer\">\n                Bar\n              </div>\n            </OSS::Modal>\n          \n      */\n      {\n        \"id\": \"8f2bU0RA\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test Modal\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n          Foo\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n        \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n          Bar\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.querySelector('.modal-title').textContent.trim(), 'Test Modal');\n    });\n    (0, _qunit.module)('available options', function () {\n      (0, _qunit.module)('centered', function () {\n        (0, _qunit.test)('it should set the centered class on the modal dialog', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Modal @title=\"Test Modal\" @options={{hash centered=true}}>\n                      <div class=\"modal-body\">\n                        Foo\n                      </div>\n          \n                      <div class=\"modal-footer\">\n                        Bar\n                      </div>\n                    </OSS::Modal>\n                  \n          */\n          {\n            \"id\": \"e3wKRg/G\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@options\\\"],[\\\"Test Modal\\\",[28,[37,1],null,[[\\\"centered\\\"],[true]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.modal-dialog').hasClass('modal-dialog--centered');\n        });\n      });\n      (0, _qunit.module)('additional classes on the modal-dialog', function () {\n        (0, _qunit.test)('it should add the passed class on the modal dialog', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Modal @title=\"Test Modal\" @options={{hash modalClass=\"foobar\"}}>\n                      <div class=\"modal-body\">\n                        Foo\n                      </div>\n          \n                      <div class=\"modal-footer\">\n                        Bar\n                      </div>\n                    </OSS::Modal>\n                  \n          */\n          {\n            \"id\": \"sqayhZfm\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@options\\\"],[\\\"Test Modal\\\",[28,[37,1],null,[[\\\"modalClass\\\"],[\\\"foobar\\\"]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.modal-dialog').hasClass('foobar');\n        });\n      });\n      (0, _qunit.module)('borderless header', function () {\n        (0, _qunit.test)('it should add the good class on the modal dialog', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Modal @title=\"Test Modal\" @options={{hash borderlessHeader=true}}>\n                      <div class=\"modal-body\">\n                        Foo\n                      </div>\n          \n                      <div class=\"modal-footer\">\n                        Bar\n                      </div>\n                    </OSS::Modal>\n                  \n          */\n          {\n            \"id\": \"rZjtqtCd\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@options\\\"],[\\\"Test Modal\\\",[28,[37,1],null,[[\\\"borderlessHeader\\\"],[true]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.modal-dialog .modal-header').hasClass('modal-header__borderless');\n        });\n      });\n      (0, _qunit.module)('no header', function () {\n        (0, _qunit.test)('no header container is present', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Modal @options={{hash header=false}}>\n                      <div class=\"modal-body\">\n                        Foo\n                      </div>\n          \n                      <div class=\"modal-footer\">\n                        Bar\n                      </div>\n                    </OSS::Modal>\n                  \n          */\n          {\n            \"id\": \"IoyZxzJw\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@options\\\"],[[28,[37,1],null,[[\\\"header\\\"],[false]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-test.js\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.modal-dialog .modal-header').doesNotExist();\n        });\n      });\n    });\n    (0, _qunit.module)('keyboard shortcut', function () {\n      (0, _qunit.test)('it closes the modal on Escape key', async function (assert) {\n        this.display = true;\n        this.onClose = () => {\n          this.set('display', false);\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                {{#if this.display}}\n                  <OSS::Modal @onClose={{this.onClose}}>\n                    <div class=\"modal-body\">\n                      Foo\n                    </div>\n        \n                    <div class=\"modal-footer\">\n                      Bar\n                    </div>\n                  </OSS::Modal>\n                {{/if}}\n              \n        */\n        {\n          \"id\": \"bxEOfxdY\",\n          \"block\": \"[[[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"display\\\"]],[[[1,\\\"          \\\"],[8,[39,1],null,[[\\\"@onClose\\\"],[[30,0,[\\\"onClose\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"      \\\"]],[],false,[\\\"if\\\",\\\"o-s-s/modal\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/modal-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.modal-dialog').exists();\n        await (0, _testHelpers.triggerKeyEvent)('.modal', 'keydown', 'Escape');\n        assert.dom('.modal-dialog').doesNotExist();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/mode-switch-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/mode-switch', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onSelect = _sinon.default.stub();\n      this.options = [{\n        key: 'option1',\n        label: 'Option one'\n      }, {\n        key: 'option2',\n        label: 'Option two'\n      }];\n    });\n    (0, _qunit.test)('it renders with the correct wording', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModeSwitch @options={{this.options}} @onSelect={{this.onSelect}} />\n      */\n      {\n        \"id\": \"cLuO5PwN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"option1-input\"]').exists();\n      assert.dom('[data-control-name=\"option2-input\"]').exists();\n      assert.dom('[data-control-name=\"option1-label\"]').hasText('Option one');\n      assert.dom('[data-control-name=\"option2-label\"]').hasText('Option two');\n    });\n    (0, _qunit.test)('it renders with the first option selected by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModeSwitch @options={{this.options}} @onSelect={{this.onSelect}} />\n      */\n      {\n        \"id\": \"cLuO5PwN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"option1-input\"]').isChecked();\n      assert.dom('[data-control-name=\"option2-input\"]').isNotChecked();\n    });\n    (0, _qunit.module)('selected option parameter', function (hooks) {\n      (0, _qunit.test)('it renders with option 1 as selected parameter', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ModeSwitch @options={{this.options}} @selected='option1' @onSelect={{this.onSelect}} />\n        */\n        {\n          \"id\": \"56LN709K\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@selected\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],\\\"option1\\\",[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"option1-input\"]').isChecked();\n        assert.dom('[data-control-name=\"option2-input\"]').isNotChecked();\n      });\n      (0, _qunit.test)('it renders with option 2 as selected parameter', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ModeSwitch @options={{this.options}} @selected='option2' @onSelect={{this.onSelect}} />\n        */\n        {\n          \"id\": \"WkceTvOt\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@selected\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],\\\"option2\\\",[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"option1-input\"]').isNotChecked();\n        assert.dom('[data-control-name=\"option2-input\"]').isChecked();\n      });\n    });\n    (0, _qunit.test)('it renders with a tag', async function (assert) {\n      this.options = [{\n        key: 'option1',\n        label: 'Option one'\n      }, {\n        key: 'option2',\n        label: 'Option two',\n        tag: {\n          label: 'Tag'\n        }\n      }];\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModeSwitch @options={{this.options}} @onSelect={{this.onSelect}} />\n      */\n      {\n        \"id\": \"cLuO5PwN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"option1-input\"]').exists();\n      assert.dom('[data-control-name=\"option2-input\"]').exists();\n      assert.dom('[data-control-name=\"option1-label\"] .upf-tag').doesNotExist();\n      assert.dom('[data-control-name=\"option2-label\"] .upf-tag').exists();\n      assert.dom('[data-control-name=\"option2-label\"] .upf-tag').hasText('Tag');\n    });\n    (0, _qunit.test)('it renders with an icon', async function (assert) {\n      this.options = [{\n        key: 'option1',\n        label: 'Option one'\n      }, {\n        key: 'option2',\n        label: 'Option two',\n        icon: 'fa-exclamation-circle'\n      }];\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModeSwitch @options={{this.options}} @onSelect={{this.onSelect}} />\n      */\n      {\n        \"id\": \"cLuO5PwN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"option1-input\"]').exists();\n      assert.dom('[data-control-name=\"option2-input\"]').exists();\n      assert.dom('[data-control-name=\"option1-label\"] i').doesNotExist();\n      assert.dom('[data-control-name=\"option2-label\"] i').exists();\n      assert.dom('[data-control-name=\"option2-label\"] i').hasClass('fa-exclamation-circle');\n    });\n    (0, _qunit.test)('clicking a radio button changes the selection option and calls the onselect function', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModeSwitch @options={{this.options}} @onSelect={{this.onSelect}} />\n      */\n      {\n        \"id\": \"cLuO5PwN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('[data-control-name=\"option2-label\"]');\n      assert.ok(this.onSelect.calledWith('option2'));\n      assert.dom('[data-control-name=\"option1-input\"]').isNotChecked();\n      assert.dom('[data-control-name=\"option2-input\"]').isChecked();\n      await (0, _testHelpers.click)('[data-control-name=\"option1-label\"]');\n      assert.ok(this.onSelect.calledWith('option1'));\n      assert.dom('[data-control-name=\"option1-input\"]').isChecked();\n      assert.dom('[data-control-name=\"option1-input\"]').isChecked();\n      assert.dom('[data-control-name=\"option2-input\"]').isNotChecked();\n    });\n    (0, _qunit.test)('keyboard interaction on label triggers click on input', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ModeSwitch @options={{this.options}} @onSelect={{this.onSelect}} />\n      */\n      {\n        \"id\": \"cLuO5PwN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@onSelect\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/mode-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/mode-switch-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('[data-control-name=\"option2-label\"]', 'keydown', {\n        key: 'Enter'\n      });\n      assert.ok(this.onSelect.calledWith('option2'));\n      assert.dom('[data-control-name=\"option1-input\"]').isNotChecked();\n      assert.dom('[data-control-name=\"option2-input\"]').isChecked();\n      await (0, _testHelpers.triggerEvent)('[data-control-name=\"option1-label\"]', 'keydown', {\n        key: ' '\n      });\n      assert.ok(this.onSelect.calledWith('option1'));\n      assert.dom('[data-control-name=\"option1-input\"]').isChecked();\n      assert.dom('[data-control-name=\"option2-input\"]').isNotChecked();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/nav-tab-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/nav-tab', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onSelection = () => {};\n      this.tabArray = [];\n    });\n    (0, _qunit.module)('Default behavior', () => {\n      (0, _qunit.test)('basic render', async function (assert) {\n        this.tabArray.push({\n          label: 'Tab'\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"JcLT9YB4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.tab-container').exists();\n        assert.dom('.tab-container .tab').exists();\n        assert.dom('.tab-content span').exists();\n        assert.dom('.tab-content span').hasText('Tab');\n      });\n      (0, _qunit.test)('Tab Icon displays properly', async function (assert) {\n        this.tabArray.push({\n          label: 'Tab',\n          icon: 'far fa-thumbs-up'\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"JcLT9YB4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.tab-container').exists();\n        assert.dom('.tab-container .tab').exists();\n        assert.dom('.tab-content span').exists();\n        assert.dom('.tab-content i').exists();\n        assert.dom('.tab-content i').hasClass('fa-thumbs-up');\n        assert.dom('.tab-content span').hasText('Tab');\n      });\n      (0, _qunit.test)('Tab info-circle displays properly', async function (assert) {\n        this.tabArray.push({\n          label: 'Tab',\n          infoCircle: true\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"JcLT9YB4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.tab-container').exists();\n        assert.dom('.tab-container .tab').exists();\n        assert.dom('.tab-content span').exists();\n        assert.dom('.tab-content i').exists();\n        assert.dom('.tab-content i').hasClass('fa-info-circle');\n        assert.dom('.tab-content span').hasText('Tab');\n      });\n      (0, _qunit.test)('Tab notification dot displays properly', async function (assert) {\n        this.tabArray.push({\n          label: 'Tab',\n          notificationDot: true\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"JcLT9YB4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.tab-container').exists();\n        assert.dom('.tab-container .tab').exists();\n        assert.dom('.tab-content .fas.fa-circle').exists();\n      });\n      (0, _qunit.test)('Tab displays selected state properly', async function (assert) {\n        this.tabArray.push({\n          label: 'Tab',\n          selected: true\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"JcLT9YB4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.tab-container').exists();\n        assert.dom('.tab-container .tab').exists();\n        assert.dom('.tab-content span').exists();\n        assert.dom('.tab-container .tab').hasClass('tab--selected');\n        assert.dom('.tab-content span').hasText('Tab');\n      });\n      (0, _qunit.test)('Tab displays disabled state properly', async function (assert) {\n        this.tabArray.push({\n          label: 'Tab',\n          disabled: true\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"JcLT9YB4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.tab-container').exists();\n        assert.dom('.tab-container .tab').exists();\n        assert.dom('.tab-content span').exists();\n        assert.dom('.tab-container .tab').hasClass('tab--disabled');\n        assert.dom('.tab-content span').hasText('Tab');\n      });\n    });\n    (0, _qunit.test)('When clicking on Tab element, the component triggers the @onSelection method', async function (assert) {\n      this.onSelection = _sinon.default.stub();\n      this.tabArray.push({\n        label: 'Tab'\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n      */\n      {\n        \"id\": \"JcLT9YB4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.tab');\n      assert.true(this.onSelection.calledOnce);\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('It throws an error if @onSelection is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The parameter @onSelection of type function is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @tabArray={{this.tabArray}} />\n        */\n        {\n          \"id\": \"u/S4m1CG\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\"],[[30,0,[\\\"tabArray\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('It throws an error if @tabArray is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The parameter @tabArray is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @onSelection={{this.onSelection}} />\n        */\n        {\n          \"id\": \"9It0XAgn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\"],[[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The parameter @tabArray is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @onSelection={{this.onSelection}} @tabArray=[] />\n        */\n        {\n          \"id\": \"A3v6jiC6\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@tabArray\\\"],[[30,0,[\\\"onSelection\\\"]],\\\"[]\\\"]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('It throws an error if @label and @icon is missing for any element in @tabArray', async function (assert) {\n        this.tabArray.push({\n          label: '',\n          icon: ''\n        });\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The @label or @icon parameter is mandatory for each element in @tabArray');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NavTab @onSelection={{this.onSelection}} @tabArray={{this.tabArray}} />\n        */\n        {\n          \"id\": \"UNwFm2CU\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@tabArray\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"tabArray\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/nav-tab-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/number-input-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/click\", \"@ember/test-helpers/dom/trigger-key-event\", \"@ember/test-helpers/dom/type-in\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _click, _triggerKeyEvent, _typeIn, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/dom/click\",0,\"@ember/test-helpers/dom/trigger-key-event\",0,\"@ember/test-helpers/dom/type-in\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/number-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::NumberInput />\n      */\n      {\n        \"id\": \"LqMwfiIX\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.number-input').exists();\n    });\n    (0, _qunit.module)('@value parameter', () => {\n      (0, _qunit.test)('If none present, the default value is 0', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n      });\n      (0, _qunit.test)('If the value is passed, it is set in the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @value={{42}} />\n        */\n        {\n          \"id\": \"lobXt6pJ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[42]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('42');\n      });\n    });\n    (0, _qunit.module)('@step parameter', () => {\n      (0, _qunit.test)('If none present, the default step is 1', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        await (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n        assert.dom('.number-input input').hasValue('1');\n      });\n      (0, _qunit.test)('If the step is passed, it is used when increasing the value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @step={{5}} />\n        */\n        {\n          \"id\": \"wiVZhxd0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@step\\\"],[5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        await (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n        assert.dom('.number-input input').hasValue('5');\n      });\n      (0, _qunit.test)('If the step is passed, it is used when decreasing the value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @step={{5}} />\n        */\n        {\n          \"id\": \"wiVZhxd0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@step\\\"],[5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        await (0, _click.default)('.upf-square-btn:nth-of-type(1)');\n        assert.dom('.number-input input').hasValue('-5');\n      });\n    });\n    (0, _qunit.module)('Value increase', () => {\n      (0, _qunit.test)('+ button increases the value by the step', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        await (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n        assert.dom('.number-input input').hasValue('1');\n      });\n      (0, _qunit.test)('Up arrow increases the value by the step', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        // @ts-ignore\n        await (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowUp', {\n          code: 'ArrowUp'\n        });\n        assert.dom('.number-input input').hasValue('1');\n      });\n      (0, _qunit.test)('Right arrow increases the value by the step', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        // @ts-ignore\n        await (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowRight', {\n          code: 'ArrowRight'\n        });\n        assert.dom('.number-input input').hasValue('1');\n      });\n      (0, _qunit.test)('If @max parameter is set, increasing the value sets the max value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @value={{5}} @max={{5}} />\n        */\n        {\n          \"id\": \"pbkeJGHg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@max\\\"],[5,5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('5');\n        assert.dom('.upf-square-btn:nth-of-type(2)').isDisabled();\n      });\n      (0, _qunit.test)('If @max & @maxReachedTooltip parameter are set, it renders the tooltip', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @value={{5}} @max={{5}} @maxReachedTooltip=\"max\" />\n        */\n        {\n          \"id\": \"zhyJBPwX\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@max\\\",\\\"@maxReachedTooltip\\\"],[5,5,\\\"max\\\"]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        document.querySelector('.upf-square-btn:nth-of-type(2)')?.dispatchEvent(new Event('mouseover'));\n        await (0, _testHelpers.waitFor)('.upf-tooltip');\n        assert.dom('.upf-tooltip .title').hasText('max');\n      });\n    });\n    (0, _qunit.module)('Value decrease', () => {\n      (0, _qunit.test)('- button increases the value by the step', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        await (0, _click.default)('.upf-square-btn:nth-of-type(1)');\n        assert.dom('.number-input input').hasValue('-1');\n      });\n      (0, _qunit.test)('Down arrow increases the value by the step', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        // @ts-ignore\n        await (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowDown', {\n          code: 'ArrowDown'\n        });\n        assert.dom('.number-input input').hasValue('-1');\n      });\n      (0, _qunit.test)('Left arrow increases the value by the step', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput />\n        */\n        {\n          \"id\": \"LqMwfiIX\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('0');\n        // @ts-ignore\n        await (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowLeft', {\n          code: 'ArrowLeft'\n        });\n        assert.dom('.number-input input').hasValue('-1');\n      });\n      (0, _qunit.test)('If @min parameter is set, decreasing the value sets the min value', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @value={{5}} @min={{5}} />\n        */\n        {\n          \"id\": \"voRN8ePN\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@min\\\"],[5,5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.number-input input').hasValue('5');\n        assert.dom('.upf-square-btn:nth-of-type(1)').isDisabled();\n      });\n      (0, _qunit.test)('If @min & @minReachedTooltip parameter are set, it renders the tooltip', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @value={{5}} @min={{5}} @minReachedTooltip=\"min\" />\n        */\n        {\n          \"id\": \"485uZpW2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@min\\\",\\\"@minReachedTooltip\\\"],[5,5,\\\"min\\\"]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        document.querySelector('.upf-square-btn:nth-of-type(1)')?.dispatchEvent(new Event('mouseover'));\n        await (0, _testHelpers.waitFor)('.upf-tooltip');\n        assert.dom('.upf-tooltip .title').hasText('min');\n      });\n    });\n    (0, _qunit.module)('On user input', () => {\n      (0, _qunit.test)('if the inputed value is above the max value, the max value is set', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @max={{42}} />\n        */\n        {\n          \"id\": \"0WrHcEDy\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@max\\\"],[42]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _typeIn.default)('.number-input input', '455');\n        assert.dom('.number-input input').hasValue('42');\n      });\n      (0, _qunit.test)('if the inputed value is below the min value, the min value is set', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::NumberInput @value={{0}} @min={{42}} />\n        */\n        {\n          \"id\": \"d7pwWiHq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@min\\\"],[0,42]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _typeIn.default)('.number-input input', '3');\n        assert.dom('.number-input input').hasValue('42');\n      });\n    });\n    (0, _qunit.test)('The @onChange method receives the updated value', async function (assert) {\n      this.onChange = _sinon.default.stub();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::NumberInput @value={{0}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"ks8zD9xl\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[0,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n      assert.true(this.onChange.calledOnceWithExactly(1));\n    });\n    (0, _qunit.test)('The buttons and the input are disabled when the @disabled parameter is truthy', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::NumberInput @disabled={{true}} />\n      */\n      {\n        \"id\": \"uT0hQEeF\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@disabled\\\"],[true]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/number-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.number-input input').isDisabled();\n      assert.dom('.upf-square-btn:nth-of-type(1)').isDisabled();\n      assert.dom('.upf-square-btn:nth-of-type(2)').isDisabled();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/panel-row-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/panel-row', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'l}} />\n      */\n      {\n        \"id\": \"N8hDBEkY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\"]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-row-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel-content--row').exists();\n    });\n    (0, _qunit.test)('It renders the @icon properly', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'l}} />\n      */\n      {\n        \"id\": \"N8hDBEkY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\"]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-row-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.far').exists();\n    });\n    (0, _qunit.test)('it renders the @label properly', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'l}} />\n      */\n      {\n        \"id\": \"N8hDBEkY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\"]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-row-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('span').hasText('Your Label');\n    });\n    (0, _qunit.test)('it renders as disabled when @disabled is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'}} @disabled={{true}}/>\n      */\n      {\n        \"id\": \"A2L1Z3xo\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@disabled\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\",true]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-row-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel-content--row-disabled').exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/panel-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:content>Content</:content>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"/9E8NLw2\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"content\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel').exists();\n      assert.dom('.oss-panel--content').hasText('Content', 'Content should be visible');\n    });\n    (0, _qunit.test)('it should render the content separator if the header exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:header>Header</:header>\n              <:content>Content</:content>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"6/wcJf0/\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"header\\\",\\\"content\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--content .oss-panel--separator').exists('Content separator should be visible when header is visible');\n    });\n    (0, _qunit.test)('it should render the footer separator if the content exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:header>Header</:header>\n              <:content>Content</:content>\n              <:footer>Footer</:footer>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"c0Cii6CZ\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"header\\\",\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Content\\\"]],[]],[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--footer .oss-panel--separator').exists('Footer separator should be visible when the content is visible');\n    });\n    (0, _qunit.test)('it should not render the content separator if the header does not exist', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:content>Content</:content>\n              <:footer>Footer</:footer>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"+RxZwqvY\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"Content\\\"]],[]],[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--content .oss-panel--separator').doesNotExist('Content separator should not be visible when header is not visible');\n    });\n    (0, _qunit.test)('it should not render the footer separator if the content does not exist', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:footer>Footer</:footer>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"xS0ZwEro\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"footer\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--footer .oss-panel--separator').doesNotExist('Footer separator should not be visible when the content is not visible');\n    });\n    (0, _qunit.test)('If the header named-block is defined, it is properly rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:header>Header</:header>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"8h6MGAq0\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"header\\\"],[[[[1,\\\"Header\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--header').exists('The header named block should be visible');\n    });\n    (0, _qunit.test)('If the content named-block is defined, it is properly rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:content>Content</:content>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"/9E8NLw2\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"content\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--content').exists('The content named block should be visible');\n    });\n    (0, _qunit.test)('If the footer named-block is defined, it is properly rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::Panel>\n              <:footer>Footer</:footer>\n            </OSS::Panel>\n          \n      */\n      {\n        \"id\": \"xS0ZwEro\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"footer\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-panel--footer').exists('The footer named block should be visible');\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/password-input-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"ember-intl/test-support\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _testSupport, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"ember-intl/test-support\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/password-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.validates = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value=\"\" />\n      */\n      {\n        \"id\": \"QAN48+2e\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-container').exists();\n    });\n    (0, _qunit.test)('it renders the @placeholder', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value=\"\" @placeholder=\"test\" />\n      */\n      {\n        \"id\": \"5VlhUZWj\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@placeholder\\\"],[\\\"\\\",\\\"test\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-container input').hasProperty('placeholder', 'test');\n    });\n    (0, _qunit.test)('it displays the error message when the @errorMessage is non-empty', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value=\"\" @errorMessage=\"This is the error message\" />\n      */\n      {\n        \"id\": \"MTPHuqZx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@errorMessage\\\"],[\\\"\\\",\\\"This is the error message\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n      assert.dom('.text-color-error').hasText('This is the error message');\n    });\n    (0, _qunit.test)('The input is set to password, thus hiding characters, by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value=\"azeaze\" />\n      */\n      {\n        \"id\": \"OZheD0Ue\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"azeaze\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'password');\n    });\n    (0, _qunit.test)('Clicking on the eye icon sets the input type to text, thus making the text readable', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value=\"azeaze\" />\n      */\n      {\n        \"id\": \"OZheD0Ue\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"azeaze\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'password');\n      await (0, _testHelpers.click)('.fa-eye');\n      assert.dom('input').hasAttribute('type', 'text');\n    });\n    (0, _qunit.test)('Clicking on the eye-slash icon sets the input type to password, thus hiding the text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value=\"azeaze\" />\n      */\n      {\n        \"id\": \"OZheD0Ue\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"azeaze\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'password');\n      await (0, _testHelpers.click)('.fa-eye');\n      assert.dom('input').hasAttribute('type', 'text');\n      await (0, _testHelpers.click)('.fa-eye-slash');\n      assert.dom('input').hasAttribute('type', 'password');\n    });\n    (0, _qunit.test)('If the password regex is matched, and the @validates method is passed, then the status of the validation is returned', async function (assert) {\n      this.value = '1Aaaaaa';\n      this.validates = x => {\n        assert.equal(x, true);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n      */\n      {\n        \"id\": \"Xir3ppLh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'a');\n    });\n    (0, _qunit.test)('If the password regex isnt matched, and the @validates method is passed, then the status of the validation is returned', async function (assert) {\n      this.value = '1A';\n      this.validates = x => {\n        assert.equal(x, false);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n      */\n      {\n        \"id\": \"Xir3ppLh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'a');\n    });\n    (0, _qunit.test)('The password validation is not enabled if the @validates method is not passed', async function (assert) {\n      this.value = '';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value={{this.value}} />\n      */\n      {\n        \"id\": \"02Ho804Q\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'az');\n      assert.dom('.text-color-error').doesNotExist();\n      assert.dom('[data-control-name=\"password-input-validators\"]').doesNotExist();\n    });\n    (0, _qunit.test)('If the @validates method is passed, the validators states are visible', async function (assert) {\n      this.value = '';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n      */\n      {\n        \"id\": \"Xir3ppLh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-control-name=\"password-input-validators\"]').exists();\n    });\n    (0, _qunit.module)('Validators', () => {\n      (0, _qunit.test)('Uppercase - if no uppercase character is inputed, a validator error is shown', async function (assert) {\n        this.value = 'aze';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-uppercase\"] i.visible').hasClass('font-color-error-500');\n      });\n      (0, _qunit.test)('Uppercase - if an uppercase character is inputed, a validator success is shown', async function (assert) {\n        this.value = 'AZE';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-uppercase\"] i.visible').hasClass('font-color-success-500');\n      });\n      (0, _qunit.test)('Number - if no number is inputed, a validator error is shown', async function (assert) {\n        this.value = 'aze';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-number\"] i.visible').hasClass('font-color-error-500');\n      });\n      (0, _qunit.test)('Uppercase - if a number is inputed, a validator success is shown', async function (assert) {\n        this.value = '123';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-number\"] i.visible').hasClass('font-color-success-500');\n      });\n      (0, _qunit.test)('Length - if the password is not at least 8 characters long, a validator error is shown', async function (assert) {\n        this.value = '123';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-length\"] i.visible').hasClass('font-color-error-500');\n      });\n      (0, _qunit.test)('Length - if the password has 8 characters, a validator success is shown', async function (assert) {\n        this.value = '12345678';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-length\"] i.visible').hasClass('font-color-success-500');\n      });\n      (0, _qunit.test)('When all validators are matched, the @validates method sends a truthy argument', async function (assert) {\n        this.value = '123azeAZE';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n        */\n        {\n          \"id\": \"Xir3ppLh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.typeIn)('input', 'a');\n        assert.true(this.validates.calledOnceWith(true));\n      });\n    });\n    (0, _qunit.module)('Passing a @validorSet sets uses the custom validators', hooks => {\n      hooks.beforeEach(function () {\n        this.validatorSet = {\n          lowercase: {\n            labelKey: 'oss-components.password-input.validators.lowercase',\n            regex: /(?=.*[a-z]).*/\n          }\n        };\n      });\n      (0, _qunit.test)('The custom validator is visible', async function (assert) {\n        this.value = '';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                   @validatorSet={{this.validatorSet}} />\n        */\n        {\n          \"id\": \"wk6Au2cq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-lowercase\"]').exists();\n      });\n      (0, _qunit.test)('Lowercase - if no lowercase character is inputed, a validator error is shown', async function (assert) {\n        this.value = 'AZE';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                   @validatorSet={{this.validatorSet}} />\n        */\n        {\n          \"id\": \"wk6Au2cq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-lowercase\"] i.visible').hasClass('font-color-error-500');\n      });\n      (0, _qunit.test)('Lowercase - if an lowercase character is inputed, a validator success is shown', async function (assert) {\n        this.value = 'aze';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                   @validatorSet={{this.validatorSet}} />\n        */\n        {\n          \"id\": \"wk6Au2cq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"password-input-validator-lowercase\"] i.visible').hasClass('font-color-success-500');\n      });\n      (0, _qunit.test)('When all validators are matched, the @validates method sends a truthy argument', async function (assert) {\n        this.value = '123azeAZE';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                   @validatorSet={{this.validatorSet}} />\n        */\n        {\n          \"id\": \"wk6Au2cq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.typeIn)('input', 'a');\n        assert.true(this.validates.calledOnceWith(true));\n      });\n    });\n    (0, _qunit.test)('it throws an error when the @value parameter is missing', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [component][OSS::PasswordInput] The @value parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PasswordInput />\n      */\n      {\n        \"id\": \"sca+bpCo\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/password-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/phone-number-input-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/click\", \"sinon\", \"@ember/test-helpers/dom/find-all\", \"@ember/test-helpers/dom/type-in\", \"@ember/test-helpers/settled\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _click, _sinon, _findAll, _typeIn, _settled, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/dom/click\",0,\"sinon\",0,\"@ember/test-helpers/dom/find-all\",0,\"@ember/test-helpers/dom/type-in\",0,\"@ember/test-helpers/settled\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/phone-number-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"v6OgIA+r\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.phone-number-container').exists();\n    });\n    (0, _qunit.test)('The passed @number parameter is properly displayed in the input', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PhoneNumberInput @prefix=\"\" @number=\"12341234\" @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"SThCQyvp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"12341234\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('12341234');\n    });\n    (0, _qunit.test)('It properly loads the correct country when the @prefix parameter is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PhoneNumberInput @prefix=\"+33\" @number=\"\" @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"NbndV2yb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"+33\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.country-selector .fflag.fflag-FR').exists();\n    });\n    (0, _qunit.module)('Country selector', () => {\n      (0, _qunit.test)('Clicking on the Flag button opens the country selector', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"v6OgIA+r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _click.default)('.country-selector');\n        assert.dom('.upf-infinite-select').exists();\n      });\n      (0, _qunit.test)('Selecting a new country in the Country selector triggers the onChange method', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"v6OgIA+r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _click.default)('.country-selector');\n        await (0, _click.default)('.upf-infinite-select__item:nth-child(5)');\n        assert.ok(this.onChange.calledOnce);\n        assert.dom('.country-selector .fflag.fflag-CH').exists();\n      });\n      (0, _qunit.test)('Typing in the search input filters the results', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"v6OgIA+r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _click.default)('.country-selector');\n        assert.dom('.upf-infinite-select').exists();\n        await (0, _typeIn.default)('.upf-infinite-select input', 'fran');\n        const clickableRows = (0, _findAll.default)('.upf-infinite-select__item');\n        assert.equal(clickableRows.length, 1);\n        assert.dom(clickableRows[0]).hasText('France (+33)');\n      });\n      (0, _qunit.test)('Searching by Country Code Prefix works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"v6OgIA+r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _click.default)('.country-selector');\n        assert.dom('.upf-infinite-select').exists();\n        await (0, _typeIn.default)('.upf-infinite-select input', '33');\n        const clickableRows = (0, _findAll.default)('.upf-infinite-select__item');\n        assert.equal(clickableRows.length, 2);\n        assert.dom(clickableRows[0]).hasText('France (+33)');\n      });\n    });\n    (0, _qunit.module)('Phone Number Input', hooks => {\n      hooks.beforeEach(function () {\n        this.onValidation = _sinon.default.stub();\n      });\n      (0, _qunit.test)('Typing numbers in the Phone input triggers the onChange method', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} @validates={{this.onValidation}} />\n        */\n        {\n          \"id\": \"Fcs6hF5o\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _typeIn.default)('input', '8');\n        assert.ok(this.onChange.calledOnce);\n        assert.ok(this.onValidation.calledWithExactly(true));\n        assert.dom('input').hasValue('8');\n      });\n      (0, _qunit.test)('Typing non-numeric characters does not apply changes', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} @validates={{this.onValidation}} />\n        */\n        {\n          \"id\": \"Fcs6hF5o\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _typeIn.default)('input', '8');\n        assert.ok(this.onChange.calledOnce);\n        // @ts-ignore\n        await (0, _testHelpers.triggerKeyEvent)('input', 'keydown', 'A', {\n          code: 'a'\n        });\n        assert.ok(this.onValidation.calledWithExactly(true));\n        assert.dom('input').hasValue('8');\n      });\n      (0, _qunit.test)('it displays an error if the number contains a + symbol', async function (assert) {\n        this.prefix = '+1';\n        this.number = '';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix={{this.prefix}} @number={{this.number}} @onChange={{this.onChange}} @validates={{this.onValidation}} />\n        */\n        {\n          \"id\": \"HDeBRW7f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[[30,0,[\\\"prefix\\\"]],[30,0,[\\\"number\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _typeIn.default)('input', '+1');\n        await (0, _settled.default)();\n        assert.ok(this.onValidation.calledWithExactly(false));\n        assert.dom('.font-color-error-500').exists();\n      });\n    });\n    (0, _qunit.module)('When the paste event is received', function (hooks) {\n      hooks.beforeEach(function () {\n        this.onChange = () => {};\n        this.onValidation = _sinon.default.spy();\n        this.number = '1234567890';\n      });\n      (0, _qunit.test)('The value stored in the clipboard is inserted in the input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number={{this.number}} @onChange={{this.onChange}} @validates={{this.onValidation}} />\n        */\n        {\n          \"id\": \"6FmO4T8L\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",[30,0,[\\\"number\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasValue('1234567890');\n        await (0, _testHelpers.triggerEvent)('input', 'paste', {\n          clipboardData: {\n            getData: _sinon.default.stub().returns('123')\n          }\n        });\n        assert.dom('input').hasValue('1234567890123');\n      });\n      (0, _qunit.test)('The non-numeric characters are escaped', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number={{this.number}} @onChange={{this.onChange}} @validates={{this.onValidation}} />\n        */\n        {\n          \"id\": \"6FmO4T8L\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",[30,0,[\\\"number\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasValue('1234567890');\n        await (0, _testHelpers.triggerEvent)('input', 'paste', {\n          clipboardData: {\n            getData: _sinon.default.stub().returns('1withletter0')\n          }\n        });\n        assert.dom('input').hasValue('123456789010');\n      });\n      (0, _qunit.test)('When selection is applied, it replaces the selection', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number={{this.number}} @onChange={{this.onChange}} @validates={{this.onValidation}} />\n        */\n        {\n          \"id\": \"6FmO4T8L\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",[30,0,[\\\"number\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('input').hasValue('1234567890');\n        let input = document.querySelector('input.ember-text-field');\n        input.setSelectionRange(4, 6);\n        await (0, _testHelpers.triggerEvent)('input', 'paste', {\n          clipboardData: {\n            getData: _sinon.default.stub().returns('0')\n          }\n        });\n        assert.dom('input').hasValue('123407890');\n      });\n    });\n    (0, _qunit.module)('@hasError parameter', () => {\n      (0, _qunit.test)('A red border is displayed if the parameter is true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @hasError={{true}}\n                                                      @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"+JxfRGmX\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@hasError\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.phone-number-input').hasClass('phone-number-input--error');\n      });\n      (0, _qunit.test)('No border is displayed if the parameter is not passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"v6OgIA+r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.phone-number-input').doesNotHaveClass('phone-number-input--error');\n      });\n    });\n    (0, _qunit.module)('@errorMessage parameter', () => {\n      (0, _qunit.test)('It displays the error message if the parameter is passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @errorMessage=\"This is an error\"\n                                                      @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"vfh758l0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@errorMessage\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",\\\"This is an error\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.font-color-error-500').hasText('This is an error');\n      });\n      (0, _qunit.test)('A red border is displayed if the parameter is true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @errorMessage=\"This is an error\"\n                                                      @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"vfh758l0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@errorMessage\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",\\\"This is an error\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.phone-number-input').hasClass('phone-number-input--error');\n      });\n      (0, _qunit.test)('It does not display the error message if the parameter is not passed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"v6OgIA+r\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.font-color-error-500').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('It throws an error if @prefix is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::PhoneNumberInput] The parameter @prefix of type string is mandatory');\n        });\n        this.onChange = () => {};\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @number=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"qWQBf+EO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n      (0, _qunit.test)('It throws an error if @number is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::PhoneNumberInput] The parameter @number of type string is mandatory');\n        });\n        this.onChange = () => {};\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @prefix=\"\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"aWkXs7hc\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@onChange\\\"],[\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n      (0, _qunit.test)('It throws an error if @onChange is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::PhoneNumberInput] The parameter @onChange of type function is mandatory');\n        });\n        this.onChange = () => {};\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PhoneNumberInput @number=\"\" @prefix=\"\" />\n        */\n        {\n          \"id\": \"wWzyHpIn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@number\\\",\\\"@prefix\\\"],[\\\"\\\",\\\"\\\"]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/phone-number-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/popover-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s-/popover', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders with basic arguments', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Popover @title='Title test' @arrowplacement='top' />\n      */\n      {\n        \"id\": \"GKmHuvfW\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\"],[\\\"Title test\\\",\\\"top\\\"]],null]],[],false,[\\\"o-s-s/popover\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(document.querySelector('.oss-popover')).hasClass('oss-popover--sm');\n      assert.dom(document.querySelector('.oss-popover__title')).hasText('Title test');\n    });\n    (0, _qunit.test)('The @subtitle param is properly rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Popover @title='Title test' @arrowplacement='top' @subtitle='This is a subtitle test' />\n      */\n      {\n        \"id\": \"wQHK53st\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\",\\\"@subtitle\\\"],[\\\"Title test\\\",\\\"top\\\",\\\"This is a subtitle test\\\"]],null]],[],false,[\\\"o-s-s/popover\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(document.querySelector('.oss-popover__subtitle')).hasText('This is a subtitle test');\n    });\n    (0, _qunit.module)('size validation', () => {\n      (0, _qunit.test)('When the @size param is \"SM\", it renders a small component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Popover @title='Title test' @arrowplacement='top' @size='sm' />\n        */\n        {\n          \"id\": \"U7gHVeAX\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\",\\\"@size\\\"],[\\\"Title test\\\",\\\"top\\\",\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/popover\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(document.querySelector('.oss-popover')).hasClass('oss-popover--sm');\n      });\n      (0, _qunit.test)('When the @size param is \"MD\", it renders a medium component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Popover @title='Title test' @arrowplacement='top' @size='md' />\n        */\n        {\n          \"id\": \"BIc1yUxi\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\",\\\"@size\\\"],[\\\"Title test\\\",\\\"top\\\",\\\"md\\\"]],null]],[],false,[\\\"o-s-s/popover\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(document.querySelector('.oss-popover')).hasClass('oss-popover--md');\n      });\n    });\n    (0, _qunit.module)('named-block content validation', () => {\n      (0, _qunit.test)('Illustration named-block content renders', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Popover @title='Title test' @arrowplacement='top'>\n                <:illustration>TEST1</:illustration>\n              </OSS::Popover>\n        */\n        {\n          \"id\": \"t7s4gwCQ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\"],[\\\"Title test\\\",\\\"top\\\"]],[[\\\"illustration\\\"],[[[[1,\\\"TEST1\\\"]],[]]]]]],[],false,[\\\"o-s-s/popover\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(document.querySelector('.oss-popover__illustration')).hasText('TEST1');\n      });\n      (0, _qunit.test)('Contextual actions named-block content renders', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Popover @title='Title test' @arrowplacement='top'>\n                <:contextual-actions>TEST2</:contextual-actions>\n              </OSS::Popover>\n        */\n        {\n          \"id\": \"jhyx5TQa\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\"],[\\\"Title test\\\",\\\"top\\\"]],[[\\\"contextual-actions\\\"],[[[[1,\\\"TEST2\\\"]],[]]]]]],[],false,[\\\"o-s-s/popover\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(document.querySelector('.oss-popover__contextualactions')).hasText('TEST2');\n      });\n      (0, _qunit.test)('Content named-block content renders', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Popover @title='Title test' @arrowplacement='top'>\n                <:content>TEST3</:content>\n              </OSS::Popover>\n        */\n        {\n          \"id\": \"nWmrCa+b\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@arrowplacement\\\"],[\\\"Title test\\\",\\\"top\\\"]],[[\\\"content\\\"],[[[[1,\\\"TEST3\\\"]],[]]]]]],[],false,[\\\"o-s-s/popover\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/popover-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(document.querySelector('.oss-popover__content')).hasText('TEST3');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/power-select-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/power-select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    const onSearch = _sinon.default.stub();\n    const onChange = _sinon.default.stub();\n    hooks.beforeEach(function () {\n      this.selectedItems = [];\n      this.items = [];\n      this.onSearch = onSearch;\n    });\n    (0, _qunit.module)('it renders', () => {\n      (0, _qunit.test)('with all required named blocks', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"6YBI3et/\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-power-select').exists({\n          count: 1\n        });\n        assert.dom('.upf-power-select__array-container').exists({\n          count: 1\n        });\n        assert.dom('.upf-power-select').hasNoAttribute('open');\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        assert.dom('.upf-power-select').hasAttribute('open');\n      });\n      (0, _qunit.test)('without a border when @borderless is true', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}} @borderless={{true}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"FDIKGC4H\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@borderless\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],true]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-power-select').hasClass('upf-power-select--borderless');\n      });\n      (0, _qunit.test)('custom empty state is properly rendered', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                  <:empty-state>\n                    <div class=\"foobar\">custom empty state</div>\n                  </:empty-state>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"G8ldjER/\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\",\\\"empty-state\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]],[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"foobar\\\"],[12],[1,\\\"custom empty state\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-power-select').exists({\n          count: 1\n        });\n        assert.dom('.upf-power-select__array-container').exists({\n          count: 1\n        });\n        assert.dom('.upf-power-select').hasNoAttribute('open');\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        assert.dom('.upf-power-select').hasAttribute('open');\n        assert.dom('.foobar').exists();\n        assert.dom('.foobar').hasText('custom empty state');\n      });\n    });\n    (0, _qunit.module)('with @selectedItems', () => {\n      (0, _qunit.test)('Passing @selectedItems parameter displays the items', async function (assert) {\n        this.selectedItems = ['value1', 'value2'];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    <span>{{selectedItem}}</span>\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"ciCjsVum\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[10,1],[12],[1,[30,1]],[13],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        const domTags = (0, _testHelpers.findAll)('.array-input-container span');\n        assert.dom(domTags[0]).hasText('value1');\n        assert.dom(domTags[1]).hasText('value2');\n      });\n      (0, _qunit.test)('Passing empty @selectedItems parameter displays nothing', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    <span id=\"selectedItemTest\">{{selectedItem}}</span>\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"WlZtGqhm\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[10,1],[14,1,\\\"selectedItemTest\\\"],[12],[1,[30,1]],[13],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.array-input-container #selectedItemTest').doesNotExist();\n      });\n      (0, _qunit.test)('Passing empty @selectedItems and @placeholder parameters displays placeholder', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}} @placeholder=\"placeholder\">\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"z6GdUTQS\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@placeholder\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],\\\"placeholder\\\"]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.array-input-container').hasText('placeholder');\n      });\n    });\n    (0, _qunit.module)('with @items', hooks => {\n      hooks.beforeEach(function () {\n        this.items = ['value1', 'value2'];\n      });\n      (0, _qunit.test)('Passing @items parameter displays the items in InfiniteSelect', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"6YBI3et/\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        const domTags = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n        assert.dom(domTags[0]).hasText('value1');\n        assert.dom(domTags[1]).hasText('value2');\n      });\n    });\n    (0, _qunit.module)('with @onChange', hooks => {\n      hooks.beforeEach(function () {\n        this.selectedItems = ['value1', 'value2'];\n        this.items = ['value1', 'value2'];\n        this.onChange = onChange;\n      });\n      (0, _qunit.test)('selecting item triggers onChange with selection operation', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}} @onChange={{this.onChange}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"ZpzizR2y\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@onChange\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        await (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n        assert.ok(this.onChange.calledWith('value1', 'selection'));\n      });\n    });\n    (0, _qunit.module)('with @searchPlaceholder', () => {\n      (0, _qunit.test)('Passing @items parameter displays the items in InfiniteSelect', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}} @searchPlaceholder='searchPlaceholder'>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"8CkXcASa\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@searchPlaceholder\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],\\\"searchPlaceholder\\\"]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        assert.dom('.upf-infinite-select input').hasAttribute('placeholder', 'searchPlaceholder');\n      });\n    });\n    (0, _qunit.module)('with @onSearch', () => {\n      (0, _qunit.test)('search is correctly called', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"6YBI3et/\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        await (0, _testHelpers.typeIn)('.upf-infinite-select input', 's');\n        assert.ok(this.onSearch.calledWith('s'));\n      });\n    });\n    (0, _qunit.module)('with @onBottomReached', hooks => {\n      hooks.beforeEach(function () {\n        this.items = ['value1', 'value2', 'value3'];\n        this.loadingMore = false;\n        this.onBottomReached = _sinon.default.stub().callsFake(() => {\n          this.set('loadingMore', true);\n        });\n      });\n      (0, _qunit.test)('search is correctly call', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <div style=\"height:150px\">\n                  <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}} @loadingMore={{this.loadingMore}}\n                                    @onSearch={{this.onSearch}} @onBottomReached={{this.onBottomReached}}>\n                    <:selected-item as |selectedItem|>\n                      {{selectedItem}}\n                    </:selected-item>\n                    <:option-item as |item|>\n                      {{item}}\n                    </:option-item>\n                  </OSS::PowerSelect>\n                </div>\n              \n        */\n        {\n          \"id\": \"PB1yVieS\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"height:150px\\\"],[12],[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@loadingMore\\\",\\\"@onSearch\\\",\\\"@onBottomReached\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"loadingMore\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onBottomReached\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1]],[1,\\\"\\\\n            \\\"]],[1]],[[[1,\\\"\\\\n              \\\"],[1,[30,2]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        await (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n        this.set('loadingMore', false);\n        await (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n        assert.ok(this.onBottomReached.calledTwice);\n      });\n    });\n    (0, _qunit.module)('with @addressableAs', hooks => {\n      hooks.beforeEach(function () {\n        this.items = ['value1', 'value2', 'value3'];\n      });\n      (0, _qunit.test)('the dropdown has the right class assigned to it', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <div style=\"height:150px\">\n                  <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}} @onSearch={{this.onSearch}} @addressableAs=\"foobar-select\">\n                    <:selected-item as |selectedItem|>\n                      {{selectedItem}}\n                    </:selected-item>\n                    <:option-item as |item|>\n                      {{item}}\n                    </:option-item>\n                  </OSS::PowerSelect>\n                </div>\n              \n        */\n        {\n          \"id\": \"ukgZeCsF\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"height:150px\\\"],[12],[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@addressableAs\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],\\\"foobar-select\\\"]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1]],[1,\\\"\\\\n            \\\"]],[1]],[[[1,\\\"\\\\n              \\\"],[1,[30,2]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-power-select__array-container');\n        assert.dom('.upf-infinite-select').exists();\n        assert.dom('.upf-infinite-select').hasClass('foobar-select__dropdown');\n      });\n    });\n    (0, _qunit.module)('with @feedbackMessage', () => {\n      async function renderComponentWithFeedbackMessage() {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                  @onSearch={{this.onSearch}} @feedbackMessage={{this.feedbackMessage}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"oQVp1Lq/\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@feedbackMessage\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"feedbackMessage\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n      }\n      (0, _qunit.module)('For \"error\" type', () => {\n        (0, _qunit.test)('Passing the error type sets the proper border class on the input container', async function (assert) {\n          this.feedbackMessage = {\n            type: 'error',\n            value: 'error message'\n          };\n          await renderComponentWithFeedbackMessage();\n          assert.dom('.upf-power-select .array-input-container').hasClass('array-input-container--error');\n        });\n        (0, _qunit.test)('Passing the error type along with a message will display the message', async function (assert) {\n          this.feedbackMessage = {\n            type: 'error',\n            value: 'error message'\n          };\n          await renderComponentWithFeedbackMessage();\n          assert.dom('[data-control-name=\"power-select-feedback-message\"]').hasText('error message');\n        });\n      });\n      (0, _qunit.module)('For \"warning\" type', () => {\n        (0, _qunit.test)('Passing the warning type sets the proper border class on the input container', async function (assert) {\n          this.feedbackMessage = {\n            type: 'warning',\n            value: 'warning message'\n          };\n          await renderComponentWithFeedbackMessage();\n          assert.dom('.upf-power-select .array-input-container').hasClass('array-input-container--warning');\n        });\n        (0, _qunit.test)('Passing the warning type along with a message will display the message', async function (assert) {\n          this.feedbackMessage = {\n            type: 'warning',\n            value: 'warning message'\n          };\n          await renderComponentWithFeedbackMessage();\n          assert.dom('[data-control-name=\"power-select-feedback-message\"]').hasText('warning message');\n        });\n      });\n      (0, _qunit.module)('For \"success\" type', () => {\n        (0, _qunit.test)('Passing the success type sets the proper border class on the input container', async function (assert) {\n          this.feedbackMessage = {\n            type: 'success',\n            value: 'success message'\n          };\n          await renderComponentWithFeedbackMessage();\n          assert.dom('.upf-power-select .array-input-container').hasClass('array-input-container--success');\n        });\n        (0, _qunit.test)('Passing the success type along with a message will display the message', async function (assert) {\n          this.feedbackMessage = {\n            type: 'success',\n            value: 'success message'\n          };\n          await renderComponentWithFeedbackMessage();\n          assert.dom('[data-control-name=\"power-select-feedback-message\"]').hasText('success message');\n        });\n      });\n      (0, _qunit.test)('Failing to pass the type will not display a border or a message', async function (assert) {\n        this.feedbackMessage = undefined;\n        await renderComponentWithFeedbackMessage();\n        assert.dom('.upf-power-select .array-input-container').doesNotHaveClass('array-input-container--error');\n        assert.dom('[data-control-name=\"power-select-feedback-message\"]').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('with @hasError', () => {\n      (0, _qunit.test)('Passing @hasError parameter sets the proper border class on the input container', async function (assert) {\n        this.selectedItems = ['value1', 'value2'];\n        this.items = ['value1', 'value2'];\n        this.hasError = true;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}} @hasError={{true}}\n                                  @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem}}\n                  </:selected-item>\n                  <:option-item as |item|>\n                    {{item}}\n                  </:option-item>\n                </OSS::PowerSelect />\n              \n        */\n        {\n          \"id\": \"3JRCTgGx\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@hasError\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],true,[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-power-select .array-input-container').hasClass('array-input-container--error');\n      });\n    });\n    (0, _qunit.module)('Error management', () => {\n      (0, _qunit.test)('without selected-item named block', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::PowerSelect] You must pass selected-item named block');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @onSearch={{this.onSearch}}/>\n              \n        */\n        {\n          \"id\": \"VPCYjfAq\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onSearch\\\"],[[30,0,[\\\"onSearch\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('without option-item named block', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::PowerSelect] You must pass option-item named block');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::PowerSelect @onSearch={{this.onSearch}}>\n                  <:selected-item as |selectedItem|>\n                    {{selectedItem.name}}\n                  </:selected-item>\n                </OSS::PowerSelect>\n              \n        */\n        {\n          \"id\": \"RTNrxf+6\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onSearch\\\"],[[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n          \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/power-select-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/progress-bar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/progress-bar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.checkedValue = 42;\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ProgressBar @value={{this.checkedValue}} />\n      */\n      {\n        \"id\": \"KZFzVx3f\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-progress-bar').exists();\n    });\n    (0, _qunit.module)('@value arg behaviour', function () {\n      (0, _qunit.test)('It renders the progress-bar--inner with the correct width when @value is specified', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} />\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').exists();\n        const innerBar = this.element.querySelector('.oss-progress-bar__inner');\n        const inlineStyle = innerBar.getAttribute('style');\n        assert.ok(inlineStyle?.includes(this.checkedValue), 'The inline style attribute is set to the proper value');\n      });\n      (0, _qunit.test)('It renders the progress-bar--inner with the correct width when @value is updated from one value to another', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} />\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').exists();\n        const innerBar = this.element.querySelector('.oss-progress-bar__inner');\n        let inlineStyle = innerBar.getAttribute('style');\n        assert.ok(inlineStyle?.includes(this.checkedValue), 'The inline style attribute is set to the proper value');\n        this.set('checkedValue', 100);\n        inlineStyle = innerBar.getAttribute('style');\n        assert.ok(inlineStyle?.includes('100'), 'The inline style attribute is set to the proper value');\n      });\n    });\n    (0, _qunit.module)('@size arg behaviour', function () {\n      (0, _qunit.test)('if the value is \"xs\", the progress bar height is the proper height', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @size=\"xs\" />\n        */\n        {\n          \"id\": \"8Ls0RfcW\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@size\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"xs\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').exists();\n        const innerBar = this.element.querySelector('.oss-progress-bar__inner');\n        assert.equal(innerBar.clientHeight, 1, 'Element has the correct height');\n      });\n      (0, _qunit.test)('if the value is \"sm\", the progress bar height is the proper height', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @size=\"sm\" />\n        */\n        {\n          \"id\": \"svG9srR7\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@size\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').exists();\n        const innerBar = this.element.querySelector('.oss-progress-bar__inner');\n        assert.equal(innerBar.clientHeight, 4, 'Element has the correct height');\n      });\n      (0, _qunit.test)('if the value is \"lg\", the progress bar height is the proper height', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @size=\"lg\" />\n        */\n        {\n          \"id\": \"5A7Wydmr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@size\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"lg\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').exists();\n        const innerBar = this.element.querySelector('.oss-progress-bar__inner');\n        assert.equal(innerBar.clientHeight, 10, 'Element has the correct height');\n      });\n      (0, _qunit.test)('if the value is unspecified, the progress bar height is the proper height', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} />\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').exists();\n        const innerBar = this.element.querySelector('.oss-progress-bar__inner');\n        assert.equal(innerBar.clientHeight, 10, 'Element has the correct height');\n      });\n    });\n    (0, _qunit.module)('@label arg behaviour', function () {\n      (0, _qunit.test)('if the value is specified, the label is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\"/>\n        */\n        {\n          \"id\": \"TySBaTNY\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar__label').exists();\n        assert.dom('.oss-progress-bar__label').hasText('Hello');\n      });\n      (0, _qunit.test)('if the value is not specified, the label is not displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}}/>\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar__label').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('@displayValue arg behaviour', function () {\n      (0, _qunit.test)('if the value is true, the value is displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\" @displayValue={{true}}/>\n        */\n        {\n          \"id\": \"Ngy9ohQL\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\",\\\"@displayValue\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\",true]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar__value').exists();\n        assert.dom('.oss-progress-bar__value').hasText(this.checkedValue + '%');\n      });\n      (0, _qunit.test)('if the value is false, the value is not displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\" @displayValue={{false}}/>\n        */\n        {\n          \"id\": \"7+iagOsM\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\",\\\"@displayValue\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\",false]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar__value').doesNotExist();\n      });\n      (0, _qunit.test)('if the value is unspecified, the value is not displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\" />\n        */\n        {\n          \"id\": \"TySBaTNY\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar__value').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('@skin arg behaviour', function () {\n      (0, _qunit.test)('if the value is \"warning\", the progress bar has the correct class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @skin=\"warning\" />\n        */\n        {\n          \"id\": \"YdHWrJsS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@skin\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"warning\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--warning');\n      });\n      (0, _qunit.test)('if the value is \"success\", the progress bar has the correct class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @skin=\"success\" />\n        */\n        {\n          \"id\": \"TK64izJq\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@skin\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"success\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--success');\n      });\n      (0, _qunit.test)('if the value is \"danger\", the progress bar has the correct class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @skin=\"danger\" />\n        */\n        {\n          \"id\": \"wXRB769H\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@skin\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"danger\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--danger');\n      });\n      (0, _qunit.test)('if the value is unspecified, the progress bar has the correct class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} />\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar');\n      });\n    });\n    (0, _qunit.module)('@coloredBackground arg behaviour', function () {\n      (0, _qunit.test)('if the value is true, the colored-background class is added', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @coloredBackground={{true}} />\n        */\n        {\n          \"id\": \"79RZdO53\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@coloredBackground\\\"],[[30,0,[\\\"checkedValue\\\"]],true]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--colored-background');\n      });\n      (0, _qunit.test)('if the value is false, the colored-background class is not added', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @coloredBackground={{false}} />\n        */\n        {\n          \"id\": \"d8FBxw4f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@coloredBackground\\\"],[[30,0,[\\\"checkedValue\\\"]],false]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').doesNotHaveClass('oss-progress-bar--colored-background');\n      });\n      (0, _qunit.test)('if the value is unspecified, the colored-background class is not added', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} />\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').doesNotHaveClass('oss-progress-bar--colored-background');\n      });\n    });\n    (0, _qunit.module)('@secondarySkin arg behaviour', function () {\n      (0, _qunit.test)('if the value is \"warning\", the progress bar has the correct secondary class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @secondarySkin=\"warning\" />\n        */\n        {\n          \"id\": \"GiQsSnk/\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@secondarySkin\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"warning\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--secondary-skin--warning');\n      });\n      (0, _qunit.test)('if the value is \"success\", the progress bar has the correct secondary class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @secondarySkin=\"success\" />\n        */\n        {\n          \"id\": \"rqpZDcnI\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@secondarySkin\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"success\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--secondary-skin--success');\n      });\n      (0, _qunit.test)('if the value is \"danger\", the progress bar has the correct secondary class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} @secondarySkin=\"danger\" />\n        */\n        {\n          \"id\": \"KvQxghcj\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@secondarySkin\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"danger\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').hasClass('oss-progress-bar--secondary-skin--danger');\n      });\n      (0, _qunit.test)('if the value is unspecified, the progress bar does not have a secondary class', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ProgressBar @value={{this.checkedValue}} />\n        */\n        {\n          \"id\": \"KZFzVx3f\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/progress-bar-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-progress-bar').doesNotHaveClass('oss-progress-bar--secondary-skin--warning');\n        assert.dom('.oss-progress-bar').doesNotHaveClass('oss-progress-bar--secondary-skin--success');\n        assert.dom('.oss-progress-bar').doesNotHaveClass('oss-progress-bar--secondary-skin--danger');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/pulsating-dot-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/pulsating-dot', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PulsatingDot />\n      */\n      {\n        \"id\": \"OA9hyAU4\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/pulsating-dot\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/pulsating-dot-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-pulsating-dot').exists();\n    });\n    (0, _qunit.test)('The default applied skin is primary', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::PulsatingDot />\n      */\n      {\n        \"id\": \"OA9hyAU4\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/pulsating-dot\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/pulsating-dot-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-pulsating-dot').hasClass('oss-pulsating-dot--primary');\n    });\n    ['primary', 'success', 'error', 'warning'].forEach(skin => {\n      (0, _qunit.test)(`it renders with skin ${skin}`, async function (assert) {\n        this.set('skin', skin);\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::PulsatingDot @skin={{this.skin}} />\n        */\n        {\n          \"id\": \"8g6H8+Gj\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\"],[[30,0,[\\\"skin\\\"]]]],null]],[],false,[\\\"o-s-s/pulsating-dot\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/pulsating-dot-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-pulsating-dot').hasClass(`oss-pulsating-dot--${skin}`);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/radio-button-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/test-helpers/dom/click\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _click, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@ember/test-helpers/dom/click\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/radio-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton />\n      */\n      {\n        \"id\": \"cQTxsU1F\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn').exists();\n    });\n    (0, _qunit.test)('It shows the selected state if the @selected parameter is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{true}} />\n      */\n      {\n        \"id\": \"0JVLeoYr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[true]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn--selected').exists();\n    });\n    (0, _qunit.test)('It shows the empty state if the @selected parameter is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{false}} />\n      */\n      {\n        \"id\": \"8sBd6kLu\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[false]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn').exists();\n      assert.dom('.oss-radio-btn--selected').doesNotExist();\n    });\n    (0, _qunit.test)('It shows the selected/disabled state if the @selected parameter is true and the @disabled parameter is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{true}} @disabled={{true}} />\n      */\n      {\n        \"id\": \"p7qfBShQ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@disabled\\\"],[true,true]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn--selected').exists();\n      assert.dom('.oss-radio-btn--disabled').exists();\n    });\n    (0, _qunit.test)('It shows the empty/disabled state if the @selected parameter is false and the @disabled parameter is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{false}} @disabled={{true}} />\n      */\n      {\n        \"id\": \"Ytwolqh2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@disabled\\\"],[false,true]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn').exists();\n      assert.dom('.oss-radio-btn--selected').doesNotExist();\n      assert.dom('.oss-radio-btn--disabled').exists();\n    });\n    (0, _qunit.test)('It triggers the onChange method on click when the @disabled parameter is false', async function (assert) {\n      this.onChange = _sinon.default.stub();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{false}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"1y7yssvf\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@onChange\\\"],[false,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn').exists();\n      await (0, _click.default)('.oss-radio-btn');\n      assert.true(this.onChange.calledOnceWithExactly(true));\n    });\n    (0, _qunit.test)('It triggers the onChange method on click when the @disabled parameter is true', async function (assert) {\n      this.onChange = _sinon.default.stub();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"qf/CV3tV\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-radio-btn').exists();\n      await (0, _click.default)('.oss-radio-btn');\n      assert.true(this.onChange.calledOnceWithExactly(false));\n    });\n    (0, _qunit.test)(\"It doesn't trigger the onChange method on click when the @disabled parameter is true\", async function (assert) {\n      this.onChange = _sinon.default.stub();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::RadioButton @selected={{false}} @disabled={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"GDTfck47\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@disabled\\\",\\\"@onChange\\\"],[false,true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/radio-button-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _click.default)('.oss-radio-btn');\n      assert.true(this.onChange.notCalled);\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/scrollable-panel-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/scrollable-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onBottomReached = _sinon.default.stub();\n    });\n    function scrollIntoView(elementId) {\n      document.querySelector(`#${elementId}`)?.scrollIntoView({\n        block: 'center'\n      });\n    }\n    const renderScrollableContent = (0, _templateFactory.createTemplateFactory)(\n    /*\n      \n      <div class=\"background-color-gray-50\" style=\"height:300px; width: 500px\">\n        <OSS::ScrollablePanel @disableShadows={{this.disableShadows}} @onBottomReached={{this.onBottomReached}}>\n          <div class=\"fx-col fx-gap-px-12 padding-px-12\">\n            <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" id=\"start-element\"/>\n            <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" />\n            <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" id=\"center-element\"/>\n            <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" />\n            <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" id=\"end-element\"/>\n          </div>\n        </OSS::ScrollablePanel>\n      </div>\n    \n    */\n    {\n      \"id\": \"ci14U2yn\",\n      \"block\": \"[[[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"background-color-gray-50\\\"],[14,5,\\\"height:300px; width: 500px\\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,0],null,[[\\\"@disableShadows\\\",\\\"@onBottomReached\\\"],[[30,0,[\\\"disableShadows\\\"]],[30,0,[\\\"onBottomReached\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"fx-col fx-gap-px-12 padding-px-12\\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[14,1,\\\"start-element\\\"],[12],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[12],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[14,1,\\\"center-element\\\"],[12],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[12],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[14,1,\\\"end-element\\\"],[12],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[]]]]],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"]],[],false,[\\\"o-s-s/scrollable-panel\\\"]]\",\n      \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/scrollable-panel-test.ts\",\n      \"isStrictMode\": false\n    });\n    (0, _qunit.test)('When the container is not scrollable, it does not display shadows', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"background-color-gray-50\" style=\"height:500px; width: 500px\">\n              <OSS::ScrollablePanel>\n                <div class=\"fx-col fx-gap-px-12 padding-px-12\">\n                  <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" id=\"start-element\"/>\n                  <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" />\n                  <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" id=\"center-element\"/>\n                  <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" />\n                  <div class=\"background-color-gray-200\" style=\"height: 50px; width: 100%;\" id=\"end-element\"/>\n                </div>\n              </OSS::ScrollablePanel>\n            </div>\n          \n      */\n      {\n        \"id\": \"AOZQf4pk\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"background-color-gray-50\\\"],[14,5,\\\"height:500px; width: 500px\\\"],[12],[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"fx-col fx-gap-px-12 padding-px-12\\\"],[12],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[14,1,\\\"start-element\\\"],[12],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[12],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[14,1,\\\"center-element\\\"],[12],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[12],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"background-color-gray-200\\\"],[14,5,\\\"height: 50px; width: 100%;\\\"],[14,1,\\\"end-element\\\"],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/scrollable-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/scrollable-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-scrollable-panel-content').exists();\n      assert.dom('.oss-scrollable-panel--shadow__top').doesNotExist();\n      assert.dom('.oss-scrollable-panel--shadow__bottom').doesNotExist();\n    });\n    (0, _qunit.module)('When the container is scrollable', () => {\n      (0, _qunit.test)('It has a shadow bottom per default', async function (assert) {\n        await (0, _testHelpers.render)(renderScrollableContent);\n        assert.dom('.oss-scrollable-panel-content').exists();\n        assert.dom('.oss-scrollable-panel--shadow__top').doesNotExist();\n        assert.dom('.oss-scrollable-panel--shadow__bottom').exists();\n      });\n      (0, _qunit.test)('When scrolling into last element, It only has a shadow top', async function (assert) {\n        await (0, _testHelpers.render)(renderScrollableContent);\n        scrollIntoView('end-element');\n        assert.dom('.oss-scrollable-panel-content').exists();\n        await (0, _testHelpers.waitFor)('.oss-scrollable-panel--shadow__top', {\n          timeout: 500\n        });\n        assert.dom('.oss-scrollable-panel--shadow__top').exists();\n        assert.dom('.oss-scrollable-panel--shadow__bottom').doesNotExist();\n      });\n      (0, _qunit.test)('When scrolling into center element, It has top and bottom shadows', async function (assert) {\n        await (0, _testHelpers.render)(renderScrollableContent);\n        scrollIntoView('center-element');\n        assert.dom('.oss-scrollable-panel-content').exists();\n        await (0, _testHelpers.waitFor)('.oss-scrollable-panel--shadow__top', {\n          timeout: 500\n        });\n        assert.dom('.oss-scrollable-panel--shadow__top').exists();\n        assert.dom('.oss-scrollable-panel--shadow__bottom').exists();\n      });\n      (0, _qunit.test)('When scrolling into first element, It only has a shadow bottom', async function (assert) {\n        await (0, _testHelpers.render)(renderScrollableContent);\n        scrollIntoView('start-element');\n        assert.dom('.oss-scrollable-panel-content').exists();\n        await (0, _testHelpers.waitFor)('.oss-scrollable-panel--shadow__bottom', {\n          timeout: 500\n        });\n        assert.dom('.oss-scrollable-panel--shadow__top').doesNotExist();\n        assert.dom('.oss-scrollable-panel--shadow__bottom').exists();\n      });\n    });\n    (0, _qunit.test)('When @disableShadows is enabled, the top & bottom shadows are not displayed', async function (assert) {\n      this.disableShadows = true;\n      await (0, _testHelpers.render)(renderScrollableContent);\n      scrollIntoView('center-element');\n      assert.dom('.oss-scrollable-panel-content').exists();\n      assert.dom('.oss-scrollable-panel--shadow__top').doesNotExist();\n      assert.dom('.oss-scrollable-panel--shadow__bottom').doesNotExist();\n    });\n    (0, _qunit.module)('with onBottomReached', function () {\n      (0, _qunit.test)('when scrolling to the bottom, it should trigger onBottomReach function', async function (assert) {\n        await (0, _testHelpers.render)(renderScrollableContent);\n        assert.ok(this.onBottomReached.notCalled);\n        await (0, _testHelpers.scrollTo)('.oss-scrollable-panel-content', 0, 1500);\n        assert.ok(this.onBottomReached.called);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/search-field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-intl/test-support\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _testSupport, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"ember-intl/test-support\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/search-field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = value => {\n        this.value = value;\n      };\n    });\n    (0, _qunit.test)('Search Field component is rendered with a placeholder', async function (assert) {\n      this.placeholder = 'This is a placeholder';\n      this.value = '';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SearchField @value={{this.value}} @placeholder={{this.placeholder}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"75xmp4yO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/search-field\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/search-field-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('placeholder', 'This is a placeholder');\n    });\n    (0, _qunit.test)('Input value is reset when the clear button is clicked', async function (assert) {\n      this.value = 'Test';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SearchField @value={{this.value}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"/mqKZfq7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/search-field\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/search-field-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[role=\"button\"]').exists();\n      await (0, _testHelpers.click)('[role=\"button\"]');\n      assert.strictEqual(this.value, '');\n    });\n    (0, _qunit.test)('onChange function is triggered on input change', async function (assert) {\n      this.value = '';\n      this.onChange = _sinon.default.stub();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SearchField @value={{this.value}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"/mqKZfq7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/search-field\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/search-field-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)('input', 'Test', {\n        delay: 0\n      });\n      assert.true(this.onChange.lastCall.calledWith('Test'));\n    });\n    (0, _qunit.test)('Clear button is not displayed when the input is empty', async function (assert) {\n      this.value = '';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SearchField @value={{this.value}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"/mqKZfq7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/search-field\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/search-field-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[role=\"button\"]').doesNotExist();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/select-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = _sinon.default.stub();\n      this.items = [{\n        name: 'foo',\n        label: 'First item'\n      }, {\n        name: 'bar',\n        label: 'Second item'\n      }];\n    });\n    (0, _qunit.test)('the index values from the @items array are available in the option named block', async function (assert) {\n      this.value = this.items[0];\n      this.checkedIndex = 0;\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                  <:option as |item index|>\n                    {{item.name}}\n                    <div class=\"index\">{{index}}</div>\n                  </:option>\n                </OSS::Select>\n              \n      */\n      {\n        \"id\": \"D/62utvW\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n              \\\"],[10,0],[14,0,\\\"index\\\"],[12],[1,[30,2]],[13],[1,\\\"\\\\n            \\\"]],[1,2]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\",\\\"index\\\"],false,[\\\"o-s-s/select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.upf-input div');\n      assert.dom('.index:nth-of-type(1)').hasText(this.checkedIndex.toString());\n    });\n    (0, _qunit.module)('value changes', function () {\n      (0, _qunit.test)('the onChange function is called with the selected item', async function (assert) {\n        this.value = this.items[0];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"PT32Z2Yu\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        await (0, _testHelpers.click)('.upf-infinite-select .upf-infinite-select__item:last-child');\n        assert.ok(this.onChange.calledOnceWithExactly(this.items[1]));\n      });\n    });\n    (0, _qunit.module)('items display', function () {\n      (0, _qunit.test)('the option block properly displays each item', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"PT32Z2Yu\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        assert.dom('.upf-infinite-select').exists();\n        assert.dom('.upf-infinite-select .upf-infinite-select__item').exists({\n          count: 2\n        });\n        assert.dom('.upf-infinite-select .upf-infinite-select__item:first-child').hasText('foo');\n        assert.dom('.upf-infinite-select .upf-infinite-select__item:last-child').hasText('bar');\n      });\n    });\n    (0, _qunit.module)('selected value display', function () {\n      (0, _qunit.test)('the default placeholder is displayed if the @value arg is null-ish', async function (assert) {\n        this.value = null;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"PT32Z2Yu\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-input').hasText('Select');\n      });\n      (0, _qunit.test)('the passed @placeholder arg is displayed if the @value arg is null-ish', async function (assert) {\n        this.value = null;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\">\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"E+Q/Zhdx\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-input').hasText('my placeholder');\n      });\n      (0, _qunit.test)(\"the current value's label attr is displayed\", async function (assert) {\n        this.value = this.items[0];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\">\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"E+Q/Zhdx\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-input').hasText('First item');\n      });\n      (0, _qunit.test)(\"the current value's is displayed with the targetLabel arg when passed\", async function (assert) {\n        this.value = this.items[0];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\" @targetLabel=\"name\">\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"Dwop3I5H\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\",\\\"@targetLabel\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\",\\\"name\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-input').hasText('foo');\n      });\n      (0, _qunit.test)(\"the current value's is displayed with the right class and active icon in the options\", async function (assert) {\n        this.value = this.items[0];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\" @targetLabel=\"name\">\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"Dwop3I5H\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\",\\\"@targetLabel\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\",\\\"name\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        assert.dom('.upf-infinite-select .upf-infinite-select__item:first-child .item-wrapper').hasClass('selected');\n        assert.dom('.upf-infinite-select .upf-infinite-select__item:first-child .item-wrapper i.far.fa-check').exists();\n      });\n      (0, _qunit.test)('the selected value is displayed using the selected named block if provided', async function (assert) {\n        this.value = this.items[0];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\">\n                    <:selected as |value|>\n                      Selected value: {{value.name}}\n                    </:selected>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"/SUAhC5x\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\"]],[[\\\"selected\\\",\\\"option\\\"],[[[[1,\\\"\\\\n              Selected value: \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]],[[[1,\\\"\\\\n              \\\"],[1,[30,2,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"]],[\\\"value\\\",\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-input').hasText('Selected value: foo');\n      });\n    });\n    (0, _qunit.module)('disabled state', function () {\n      (0, _qunit.test)('the dropdown does not open when the select is clicked', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @disabled={{true}}>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"tzi0+8CR\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@disabled\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],true]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        assert.dom('.upf-infinite-select').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('feedback states', function () {\n      (0, _qunit.module)('errorful state', function () {\n        (0, _qunit.test)('the right class is applied to the select container', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @errorMessage=\"error !\">\n                      <:option as |item|>\n                        {{item.name}}\n                      </:option>\n                    </OSS::Select>\n                  \n          */\n          {\n            \"id\": \"bsUZMa+s\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"error !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-select-container').hasClass('oss-select-container--errorful');\n        });\n        (0, _qunit.test)('the error message is displayed under the select field', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @errorMessage=\"error !\">\n                      <:option as |item|>\n                        {{item.name}}\n                      </:option>\n                    </OSS::Select>\n                  \n          */\n          {\n            \"id\": \"bsUZMa+s\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"error !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-select-container .upf-input + .font-color-error-500').hasText('error !');\n        });\n      });\n      (0, _qunit.module)('successful state', function () {\n        (0, _qunit.test)('the right class is applied to the select container', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @successMessage=\"good !\">\n                      <:option as |item|>\n                        {{item.name}}\n                      </:option>\n                    </OSS::Select>\n                  \n          */\n          {\n            \"id\": \"3MCCp/Z7\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@successMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"good !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-select-container').hasClass('oss-select-container--successful');\n        });\n        (0, _qunit.test)('the error message is displayed under the select field', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @successMessage=\"good !\">\n                      <:option as |item|>\n                        {{item.name}}\n                      </:option>\n                    </OSS::Select>\n                  \n          */\n          {\n            \"id\": \"3MCCp/Z7\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@successMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"good !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-select-container .upf-input + .font-color-success-500').hasText('good !');\n        });\n      });\n    });\n    (0, _qunit.module)('searching through the options', function () {\n      (0, _qunit.test)('the search is not displayed if no onSearch arg is provided', async function (assert) {\n        this.value = this.items[0];\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"PT32Z2Yu\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        assert.dom('.upf-infinite-select .upf-input').doesNotExist();\n      });\n      (0, _qunit.test)('the search is displayed if the @onSearch arg is provided', async function (assert) {\n        assert.expect(4);\n        this.value = this.items[0];\n        this.onSearch = keyword => {\n          assert.equal(keyword, 'F');\n          this.set('items', this.items.filter(item => item.name.toLowerCase().indexOf(keyword.toLowerCase()) >= 0));\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @onSearch={{this.onSearch}} @items={{this.items}} @value={{this.value}}>\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"xDHpPnRz\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@onSearch\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        assert.dom('.upf-infinite-select .upf-input').exists();\n        await (0, _testHelpers.typeIn)('.upf-infinite-select .upf-input', 'F');\n        assert.dom('.upf-infinite-select .upf-infinite-select__item').exists({\n          count: 1\n        });\n        assert.dom('.upf-infinite-select .upf-infinite-select__item').hasText('foo');\n      });\n    });\n    (0, _qunit.module)('with @addressableAs', () => {\n      (0, _qunit.test)('the dropdown has the right class assigned to it', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @addressableAs=\"foobar-select\">\n                    <:option as |item|>\n                      {{item.name}}\n                    </:option>\n                  </OSS::Select>\n                \n        */\n        {\n          \"id\": \"op+B8jIa\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@addressableAs\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"foobar-select\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.upf-input div');\n        assert.dom('.upf-infinite-select').exists();\n        assert.dom('.upf-infinite-select').hasClass('foobar-select__dropdown');\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if no @onChange arg is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Select] The parameter @onChange of type function is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Select />\n        */\n        {\n          \"id\": \"ObKNdEe8\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if the component is invoked with no option named blocked', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Select] You must pass option named block');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Select @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"L03qhPen\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/select-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/side-panel-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/side-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onClose = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}} />\n      */\n      {\n        \"id\": \"+z3m7huO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-side-panel').exists();\n    });\n    (0, _qunit.module)('Named-blocks', function () {\n      (0, _qunit.test)('The global named-block is properly displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}}>\n                    <:global>\n                      <p>This is the global content</p>\n                    </:global>\n                  </OSS::SidePanel>\n        */\n        {\n          \"id\": \"AruJHmjo\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],[[\\\"global\\\"],[[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the global content\\\"],[13],[1,\\\"\\\\n            \\\"]],[]]]]]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('p').hasText('This is the global content');\n      });\n      (0, _qunit.test)('The header named-block is properly displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}}>\n                    <:header>\n                      <p>This is the header</p>\n                    </:header>\n                  </OSS::SidePanel>\n        */\n        {\n          \"id\": \"EqL8cXg3\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],[[\\\"header\\\"],[[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the header\\\"],[13],[1,\\\"\\\\n            \\\"]],[]]]]]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__header').hasText('This is the header');\n      });\n      (0, _qunit.test)('The main named-block is properly displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}}>\n                    <:main>\n                      <p>This is the content</p>\n                    </:main>\n                  </OSS::SidePanel>\n        */\n        {\n          \"id\": \"2hlpJLWu\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],[[\\\"main\\\"],[[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n            \\\"]],[]]]]]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__main').hasText('This is the content');\n      });\n      (0, _qunit.test)('The footer named-block is properly displayed', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}}>\n                    <:footer>\n                      <p>This is the footer</p>\n                    </:footer>\n                  </OSS::SidePanel>\n        */\n        {\n          \"id\": \"OORmWzo3\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],[[\\\"footer\\\"],[[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the footer\\\"],[13],[1,\\\"\\\\n            \\\"]],[]]]]]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__footer').hasText('This is the footer');\n      });\n      (0, _qunit.test)('When noPadding is set to true, it set the default padding of each section to 0', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                  <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}}\n                                  @noPadding={{true}}>\n                    <:header>\n                      <p>This is the header</p>\n                    </:header>\n                    <:main>\n                      <p>This is the content</p>\n                    </:main>\n                    <:footer>\n                      <p>This is the footer</p>\n                    </:footer>\n                  </OSS::SidePanel>\n        */\n        {\n          \"id\": \"Ee2jU3w9\",\n          \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\",\\\"@noPadding\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]],true]],[[\\\"header\\\",\\\"main\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the header\\\"],[13],[1,\\\"\\\\n            \\\"]],[]],[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n            \\\"]],[]],[[[1,\\\"\\\\n              \\\"],[10,2],[12],[1,\\\"This is the footer\\\"],[13],[1,\\\"\\\\n            \\\"]],[]]]]]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__header').hasClass('padding-none');\n        assert.dom('.oss-side-panel__main').hasClass('padding-none');\n        assert.dom('.oss-side-panel__footer').hasClass('padding-none');\n      });\n    });\n    (0, _qunit.module)('The visibility of the side panel varies', function () {\n      (0, _qunit.test)('When @visible is truthy, the side panel is visible', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"/puGfUqg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel.oss-side-panel--visible').hasStyle({\n          opacity: '1',\n          visibility: 'visible'\n        });\n      });\n      (0, _qunit.test)('When @visible is falsy, the side panel is not visible', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{false}} @backdrop={{true}} @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"TVwGEF67\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",false,true,[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel').hasStyle({\n          opacity: '0',\n          visibility: 'hidden'\n        });\n      });\n    });\n    (0, _qunit.module)('The width of the side panel varies', function () {\n      (0, _qunit.test)('When @size is sm, the width is small', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"+z3m7huO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__content').hasStyle({\n          width: '480px'\n        });\n      });\n      (0, _qunit.test)('When @size is md, the width is medium', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"md\" @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"OQJuc5Im\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"md\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__content').hasStyle({\n          width: '540px'\n        });\n      });\n      (0, _qunit.test)('When @size is not defined, the default width is small', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"/puGfUqg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__content').hasStyle({\n          width: '480px'\n        });\n      });\n    });\n    (0, _qunit.module)('Clicking outside the side panel (or clicking on the background) triggers the @onClose callback', function () {\n      (0, _qunit.test)('When the backdrop is visible', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{true}} @size=\"sm\" @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"+z3m7huO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,true,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__backdrop').hasStyle({\n          backgroundColor: 'rgba(27, 30, 33, 0.376)'\n        });\n        await (0, _testHelpers.click)('.oss-side-panel__backdrop');\n        assert.ok(this.onClose.calledOnce, 'Clicked on the visible backdrop so the side panel closes.');\n      });\n      (0, _qunit.test)('When the backdrop is transparent', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel @title=\"Sidepanel\" @visible={{true}} @backdrop={{false}} @size=\"sm\" @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"cSVFTWtK\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@visible\\\",\\\"@backdrop\\\",\\\"@size\\\",\\\"@onClose\\\"],[\\\"Sidepanel\\\",true,false,\\\"sm\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-side-panel__backdrop.oss-side-panel__backdrop--transparent').hasStyle({\n          backgroundColor: 'rgba(0, 0, 0, 0)'\n        });\n        await (0, _testHelpers.click)('.oss-side-panel__backdrop');\n        assert.ok(this.onClose.calledOnce, 'Clicked on the transparent backdrop so the side panel closes.');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/side-panel/header-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/side-panel/header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onClose = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SidePanel::Header @title=\"Sidepanel header\" @onClose={{this.onClose}} />\n      */\n      {\n        \"id\": \"YCNpInp4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\"],[\\\"Sidepanel header\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel/header\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel/header-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-side-panel__header__content').exists();\n    });\n    (0, _qunit.test)('Clicking on the close button triggers the @onClose callback', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SidePanel::Header @title=\"Sidepanel header\" @onClose={{this.onClose}} />\n      */\n      {\n        \"id\": \"YCNpInp4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\"],[\\\"Sidepanel header\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel/header\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel/header-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.fa-times').exists();\n      await (0, _testHelpers.click)('.fa-times');\n      assert.ok(this.onClose.calledOnce, 'Clicked on the close button so the side panel closes.');\n    });\n    (0, _qunit.module)('Return arrow button', function (hooks) {\n      hooks.beforeEach(function () {\n        this.onReturn = _sinon.default.stub();\n      });\n      (0, _qunit.test)('When @onReturn is truthy, it displays the return arrow button', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel::Header @title=\"Sidepanel header\" @onClose={{this.onClose}} @onReturn={{this.onReturn}} />\n        */\n        {\n          \"id\": \"rdTkB9U1\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\",\\\"@onReturn\\\"],[\\\"Sidepanel header\\\",[30,0,[\\\"onClose\\\"]],[30,0,[\\\"onReturn\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel/header\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel/header-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.fa-arrow-left').exists();\n      });\n      (0, _qunit.test)('When @onReturn is falsy, it does not display the return arrow button', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel::Header @title=\"Sidepanel header\" @onClose={{this.onClose}} />\n        */\n        {\n          \"id\": \"YCNpInp4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\"],[\\\"Sidepanel header\\\",[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel/header\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel/header-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.fa-arrow-left').doesNotExist();\n      });\n      (0, _qunit.test)('When the return button is clicked, @onReturn is called once', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SidePanel::Header @title=\"Sidepanel header\" @onClose={{this.onClose}} @onReturn={{this.onReturn}} />\n        */\n        {\n          \"id\": \"rdTkB9U1\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\",\\\"@onReturn\\\"],[\\\"Sidepanel header\\\",[30,0,[\\\"onClose\\\"]],[30,0,[\\\"onReturn\\\"]]]],null]],[],false,[\\\"o-s-s/side-panel/header\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/side-panel/header-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.fa-arrow-left');\n        assert.ok(this.onReturn.calledOnce, 'Clicked on the return button so the side panel closes.');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/skeleton-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/skeleton', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Skeleton/>\n      */\n      {\n        \"id\": \"8G+ewZzN\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-skeleton-effect').exists();\n    });\n    (0, _qunit.module)('@height parameters', () => {\n      (0, _qunit.test)('Default height', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton/>\n        */\n        {\n          \"id\": \"8G+ewZzN\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-skeleton-effect').hasStyle({\n          height: '36px'\n        });\n      });\n      (0, _qunit.test)('The style height should correspond to parameter value', async function (assert) {\n        this.height = 400;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @height={{this.height}}/>\n        */\n        {\n          \"id\": \"EQdDlkjv\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@height\\\"],[[30,0,[\\\"height\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-skeleton-effect').hasStyle({\n          height: '400px'\n        });\n      });\n      (0, _qunit.test)('The style percentage height should correspond to parameter value', async function (assert) {\n        this.height = '100%';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <div style=\"height:250px\"><OSS::Skeleton @height={{this.height}}/></div>\n        */\n        {\n          \"id\": \"mw9prhyQ\",\n          \"block\": \"[[[10,0],[14,5,\\\"height:250px\\\"],[12],[8,[39,0],null,[[\\\"@height\\\"],[[30,0,[\\\"height\\\"]]]],null],[13]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-skeleton-effect').hasStyle({\n          height: '250px'\n        });\n      });\n    });\n    (0, _qunit.module)('@width parameters', () => {\n      (0, _qunit.test)('Default width', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton/>\n        */\n        {\n          \"id\": \"8G+ewZzN\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-skeleton-effect').hasStyle({\n          width: '36px'\n        });\n      });\n      (0, _qunit.test)('The style width should correspond to parameter value', async function (assert) {\n        this.width = 400;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @width={{this.width}}/>\n        */\n        {\n          \"id\": \"n9W2Z6z5\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[[30,0,[\\\"width\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-skeleton-effect').hasStyle({\n          width: '400px'\n        });\n      });\n      (0, _qunit.test)('The style percentage width should correspond to parameter value', async function (assert) {\n        this.width = '100%';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <div style=\"width:250px\"><OSS::Skeleton @width={{this.width}}/></div>\n        */\n        {\n          \"id\": \"Mk3S7zHG\",\n          \"block\": \"[[[10,0],[14,5,\\\"width:250px\\\"],[12],[8,[39,0],null,[[\\\"@width\\\"],[[30,0,[\\\"width\\\"]]]],null],[13]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-skeleton-effect').hasStyle({\n          width: '250px'\n        });\n      });\n    });\n    (0, _qunit.module)('@gap parameters', () => {\n      (0, _qunit.test)('Default gap', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @multiple={{2}} />\n        */\n        {\n          \"id\": \"e3rmOTcm\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\"],[2]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.fx-1').hasClass('fx-gap-px-9');\n      });\n      (0, _qunit.test)('The has class corresponding to gap', async function (assert) {\n        this.gap = 12;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @gap={{this.gap}} @multiple={{2}} />\n        */\n        {\n          \"id\": \"B6EDZiuu\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@gap\\\",\\\"@multiple\\\"],[[30,0,[\\\"gap\\\"]],2]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.fx-1').hasClass('fx-gap-px-12');\n      });\n    });\n    (0, _qunit.module)('@multiple parameters', () => {\n      (0, _qunit.test)('Default has one skeleton effect', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton/>\n        */\n        {\n          \"id\": \"8G+ewZzN\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let items = (0, _testHelpers.findAll)('.upf-skeleton-effect');\n        assert.ok(items.length === 1);\n      });\n      (0, _qunit.test)('The content has multiple skeleton effect', async function (assert) {\n        this.multiple = 4;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @multiple={{this.multiple}}/>\n        */\n        {\n          \"id\": \"m88JA9UQ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\"],[[30,0,[\\\"multiple\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let items = (0, _testHelpers.findAll)('.upf-skeleton-effect');\n        assert.ok(items.length === 4);\n      });\n    });\n    (0, _qunit.module)('@randomize parameters', hooks => {\n      hooks.beforeEach(function () {\n        this.multiple = 4;\n        this.width = 200;\n      });\n      (0, _qunit.test)('Default randomize is false', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @width={{this.width}}/>\n        */\n        {\n          \"id\": \"n9W2Z6z5\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[[30,0,[\\\"width\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let item = (0, _testHelpers.find)('.upf-skeleton-effect');\n        assert.ok(this.width == item?.offsetWidth);\n      });\n      (0, _qunit.test)('Randomize width is within a 15% range', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @multiple={{this.multiple}} @width={{this.width}} @randomize={{true}}/>\n        */\n        {\n          \"id\": \"tzIFplKr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\",\\\"@width\\\",\\\"@randomize\\\"],[[30,0,[\\\"multiple\\\"]],[30,0,[\\\"width\\\"]],true]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let item = (0, _testHelpers.find)('.upf-skeleton-effect');\n        assert.ok(item.offsetWidth <= 230 && item.offsetWidth >= 170);\n      });\n    });\n    (0, _qunit.test)('@direction default value is row', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Skeleton @multiple=\"3\" />\n      */\n      {\n        \"id\": \"k5oTU4vI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\"],[\\\"3\\\"]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.fx-1').hasClass(`fx-row`);\n    });\n    (0, _qunit.test)('@direction value is column if specified', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Skeleton @direction=\"column\" @multiple=\"2\" />\n      */\n      {\n        \"id\": \"G6S+iexL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@direction\\\",\\\"@multiple\\\"],[\\\"column\\\",\\\"2\\\"]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.fx-1').hasClass(`fx-col`);\n    });\n    (0, _qunit.module)('Extra attributes', () => {\n      (0, _qunit.test)('passing an extra class is applied to the component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton class=\"my-extra-class\" />\n        */\n        {\n          \"id\": \"mbIjNTeS\",\n          \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.my-extra-class').exists();\n      });\n      (0, _qunit.test)('passing data-control-name works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton data-control-name=\"layout-sidebar\" />\n        */\n        {\n          \"id\": \"utaVmdRx\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"layout-sidebar\\\"]],null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let inputWrapper = (0, _testHelpers.find)('.upf-skeleton-effect');\n        assert.equal(inputWrapper?.getAttribute('data-control-name'), 'layout-sidebar');\n      });\n    });\n    (0, _qunit.module)('Error management', () => {\n      (0, _qunit.test)('it throws an error if @direct is provided and does not match required values', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::Skeleton] The @direction argument should be a value of row,column,col');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Skeleton @direction=\"toto\"/>\n        */\n        {\n          \"id\": \"zMng0IOn\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@direction\\\"],[\\\"toto\\\"]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/skeleton-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/slider-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/slider', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.value = 10;\n      this.min = 0;\n      this.max = 100;\n      this.step = 1;\n      this.displayInputValue = true;\n      this.unit = 'percentage';\n      this.onChange = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"kJwFiQCH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-slider__container .oss-slider__range-container').exists();\n    });\n    (0, _qunit.test)('it renders the slider as disabled when @disabled is truthy', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @disabled={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"SgGWwzUz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@disabled\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-slider__container--disabled .oss-slider__range').isDisabled();\n    });\n    (0, _qunit.test)('it renders the number input as disabled when @disabled is truthy', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @disabled={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"SgGWwzUz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@disabled\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-slider__number-input input').isDisabled();\n    });\n    (0, _qunit.test)('it renders with a specific tooltip label when specified', async function (assert) {\n      this.tooltipLabel = 'this is a specific tooltip label';\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @tooltipLabel={{this.tooltipLabel}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @disabled={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"e/XISNKy\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@tooltipLabel\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@disabled\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"tooltipLabel\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-slider__tooltip').hasText(this.tooltipLabel);\n    });\n    (0, _qunit.module)('for the slider width', () => {\n      (0, _qunit.test)('it renders it properly', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"kJwFiQCH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        const element = this.element.querySelector('.oss-slider__range');\n        assert.dom(element).exists();\n        assert.strictEqual(element.style.getPropertyValue('--range-percentage'), '10%');\n      });\n      (0, _qunit.module)('with @step', () => {\n        (0, _qunit.test)('it renders it properly with the value rounded down', async function (assert) {\n          this.value = '14';\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Slider @step={{10}} @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n          */\n          {\n            \"id\": \"qUYo0VUy\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@step\\\",\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[10,[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n            \"isStrictMode\": false\n          }));\n          const element = this.element.querySelector('.oss-slider__range');\n          assert.dom(element).exists();\n          assert.strictEqual(element.style.getPropertyValue('--range-percentage'), '10%');\n        });\n        (0, _qunit.test)('it renders it properly with the value rounded up', async function (assert) {\n          this.value = '16';\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::Slider @step={{10}} @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n          */\n          {\n            \"id\": \"qUYo0VUy\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@step\\\",\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[10,[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n            \"isStrictMode\": false\n          }));\n          const element = this.element.querySelector('.oss-slider__range');\n          assert.dom(element).exists();\n          assert.strictEqual(element.style.getPropertyValue('--range-percentage'), '20%');\n        });\n      });\n    });\n    (0, _qunit.test)('the tooltip has the proper value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"kJwFiQCH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-slider__tooltip').hasText('10%');\n    });\n    (0, _qunit.test)('the tooltip is rendered without unit when @unit is not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"W7p+PbkJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-slider__tooltip').hasText('10');\n    });\n    (0, _qunit.module)('for @defaultValue', hooks => {\n      hooks.beforeEach(function () {\n        this.value = null;\n      });\n      (0, _qunit.test)('when it is defined, it renders the correct value & placeholder', async function (assert) {\n        this.defaultValue = '20';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @defaultValue={{this.defaultValue}} @displayInputValue={{this.displayInputValue}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"pjGx5Ab4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@defaultValue\\\",\\\"@displayInputValue\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"defaultValue\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__range').hasValue('20');\n        assert.dom('.oss-slider__number-input input').hasValue('');\n        assert.dom('.oss-slider__number-input input').hasAttribute('placeholder', '20');\n      });\n      (0, _qunit.test)('when it is undefined, it renders the correct value & placeholder', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"W7p+PbkJ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__range').hasValue('50');\n        assert.dom('.oss-slider__number-input input').hasValue('');\n        assert.dom('.oss-slider__number-input input').hasAttribute('placeholder', '50');\n      });\n    });\n    (0, _qunit.module)('for @inputOptions', hooks => {\n      hooks.beforeEach(function () {\n        this.value = null;\n      });\n      (0, _qunit.test)(\"when the min is defined, the user can't set value under the minimum\", async function (assert) {\n        this.inputOptions = {\n          min: 20\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @inputOptions={{this.inputOptions}} @displayInputValue={{this.displayInputValue}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"88fM5TYk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@inputOptions\\\",\\\"@displayInputValue\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"inputOptions\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.fillIn)('.oss-slider__number-input input', '10');\n        assert.ok(this.onChange.calledWith(20));\n      });\n      (0, _qunit.test)(\"when the min is defined, the user can't set value under the minimum\", async function (assert) {\n        this.inputOptions = {\n          max: 20\n        };\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @inputOptions={{this.inputOptions}} @displayInputValue={{this.displayInputValue}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"88fM5TYk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@inputOptions\\\",\\\"@displayInputValue\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"inputOptions\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.fillIn)('.oss-slider__number-input input', '30');\n        assert.ok(this.onChange.calledWith(20));\n      });\n    });\n    (0, _qunit.test)('the @onChange method is called with the proper value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"kJwFiQCH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.fillIn)('.oss-slider__number-input input', '36');\n      assert.ok(this.onChange.calledWith(36));\n    });\n    (0, _qunit.module)('value number input', function () {\n      (0, _qunit.test)('it renders the number input when @displayInputValue is truthy', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"kJwFiQCH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__number-input').exists();\n      });\n      (0, _qunit.test)('it renders the slider with a value of 0 when @value is not a number', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"kJwFiQCH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.fillIn)('.oss-slider__number-input input', '');\n        assert.dom('.oss-slider__number-input').exists().hasText('');\n        const element = this.element.querySelector('.oss-slider__range');\n        assert.dom(element).exists();\n        assert.strictEqual(element.style.getPropertyValue('--range-percentage'), '0%');\n      });\n      (0, _qunit.test)('it does not render the number input when @displayInputValue is falsy', async function (assert) {\n        this.displayInputValue = false;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"kJwFiQCH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__number-input').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('Unit container', function () {\n      (0, _qunit.test)('it does not render the unit container if @unit is undefined', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} />\n        */\n        {\n          \"id\": \"Wm1zvo+E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__unit-container').doesNotExist();\n      });\n      (0, _qunit.test)('it does not render the unit container if @displayInputValue is falsy', async function (assert) {\n        this.displayInputValue = false;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"kJwFiQCH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__unit-container').doesNotExist();\n      });\n      (0, _qunit.test)('it renders the unit container with the proper unit when @unit is defined', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{this.displayInputValue}} @unit={{this.unit}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"kJwFiQCH\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"displayInputValue\\\"]],[30,0,[\\\"unit\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-slider__number-input .fa-percent').exists();\n      });\n    });\n    (0, _qunit.module)('slider option args', function () {\n      (0, _qunit.test)('it renders the slider with a minimum value when @min is provided', async function (assert) {\n        this.min = 30;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{true}} @min={{this.min}} @max={{this.max}} @step={{this.step}} @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"6/FnGORp\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@min\\\",\\\"@max\\\",\\\"@step\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],true,[30,0,[\\\"min\\\"]],[30,0,[\\\"max\\\"]],[30,0,[\\\"step\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.fillIn)('.oss-slider__number-input input', '30');\n        assert.equal(this.min, this.value);\n        const element = this.element.querySelector('.oss-slider__range');\n        assert.strictEqual(element.style.getPropertyValue('--range-percentage'), '0%');\n      });\n      (0, _qunit.test)('it renders the slider with a maximum value when @min is provided', async function (assert) {\n        this.max = 1000;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Slider @value={{this.value}} @displayInputValue={{true}} @min={{this.min}} @max={{this.max}} @step={{this.step}} @unit=\"percentage\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"vAjyBru4\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@displayInputValue\\\",\\\"@min\\\",\\\"@max\\\",\\\"@step\\\",\\\"@unit\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],true,[30,0,[\\\"min\\\"]],[30,0,[\\\"max\\\"]],[30,0,[\\\"step\\\"]],\\\"percentage\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/slider\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/slider-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.fillIn)('.oss-slider__number-input input', '1000');\n        const element = this.element.querySelector('.oss-slider__range');\n        assert.strictEqual(element.style.getPropertyValue('--range-percentage'), '100%');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/social-post-badge-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  const ICONS_MATCHING = {\n    article: '.fab.fa-wordpress',\n    facebook_status: '.fab.fa-facebook-f',\n    instagram_media: '.fab.fa-instagram',\n    tiktok_video: '.fab.fa-tiktok',\n    story: '.far.fa-circle-notch',\n    tweet: '.fab.fa-x-twitter',\n    pin: '.fab.fa-pinterest',\n    youtube_video: '.fab.fa-youtube',\n    twitch_stream: '.fab.fa-twitch'\n  };\n  const IMG_MATCHING = {\n    instagram_reel: 'instagram-reel.svg',\n    youtube_short: 'youtube-short.svg'\n  };\n  (0, _qunit.module)('Integration | Component | o-s-s/social-post-badge', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.postType = 'pin';\n      this.plain = false;\n      this.selected = false;\n      this.onToggle = () => {\n        this.plain = !this.plain;\n        this.selected = !this.selected;\n      };\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n      */\n      {\n        \"id\": \"Cs38LvDS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-social-post-badge').exists();\n    });\n    Object.keys(ICONS_MATCHING).forEach(media => {\n      (0, _qunit.test)(`for ${media}, it renders the correct icon`, async function (assert) {\n        this.postType = media;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"Cs38LvDS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(`.oss-social-post-badge i${ICONS_MATCHING[media]}`).exists();\n      });\n    });\n    Object.keys(IMG_MATCHING).forEach(media => {\n      (0, _qunit.test)(`for ${media}, it renders the correct image`, async function (assert) {\n        this.postType = media;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"Cs38LvDS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-social-post-badge img').hasAttribute('src', `/@upfluence/oss-components/assets/icons/${IMG_MATCHING[media]}`);\n      });\n    });\n    (0, _qunit.module)('@plain', () => {\n      (0, _qunit.test)('When @plain is not set class is not added', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"I+gLuD/u\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-social-post-badge').hasNoClass('oss-social-post-badge--plain');\n      });\n      (0, _qunit.test)('When @plain is true class is added', async function (assert) {\n        this.plain = true;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"Cs38LvDS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-social-post-badge').hasClass('oss-social-post-badge--plain');\n      });\n    });\n    (0, _qunit.module)('@selected', () => {\n      (0, _qunit.test)('When @selected is not set class is not added', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"HfEqwFcS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-social-post-badge').hasNoClass('oss-social-post-badge--selected');\n      });\n      (0, _qunit.test)('When @selected is true class is added', async function (assert) {\n        this.selected = true;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"Cs38LvDS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-social-post-badge').hasClass('oss-social-post-badge--selected');\n      });\n    });\n    (0, _qunit.module)('When clicking on an item', () => {\n      (0, _qunit.test)('Then the @onToggle method is triggered', async function (assert) {\n        this.postType = 'facebook_status';\n        this.onToggle = _sinon.default.spy();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"Cs38LvDS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-social-post-badge');\n        assert.ok(this.onToggle.calledWith('facebook_status'));\n      });\n    });\n    (0, _qunit.module)('error management', () => {\n      (0, _qunit.test)('it throws an error if @selectedToggle is not provided', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::SocialPostBadge] The @postType parameter of type String is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"2qs28jxY\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if @postType is not a value of SocialPostType', async function (assert) {\n        this.postType = 'toto';\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::SocialPostBadge] The @postType parameter should be a value of SocialPostType');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n        */\n        {\n          \"id\": \"Cs38LvDS\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/social-post-badge-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/split-modal-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/split-modal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.closeModal = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      this.set('closeModal', _sinon.default.stub());\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SplitModal @close={{this.closeModal}} />\n      */\n      {\n        \"id\": \"ZuYIMZKb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.split-modal').exists();\n    });\n    (0, _qunit.test)('The cross button at the top right of the modal closes the modal', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SplitModal @close={{this.closeModal}} />\n      */\n      {\n        \"id\": \"ZuYIMZKb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.fa-times');\n      assert.ok(this.closeModal.calledOnce);\n    });\n    (0, _qunit.test)('The content named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::SplitModal @close={{this.closeModal}}>\n              <:content>\n                <p>This is the content</p>\n              </:content>\n            </OSS::SplitModal>\n      */\n      {\n        \"id\": \"LJKcwIJ6\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog--content').hasText('This is the content');\n    });\n    (0, _qunit.test)('The footer named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::SplitModal @close={{this.closeModal}}>\n              <:footer>\n                footer content\n              </:footer>\n            </OSS::SplitModal>\n      */\n      {\n        \"id\": \"PIohdi+d\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"footer\\\"],[[[[1,\\\"\\\\n          footer content\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-modal-dialog footer').hasText('footer content');\n    });\n    (0, _qunit.test)('The preview named-block is properly displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <OSS::SplitModal @close={{this.closeModal}}>\n              <:preview>\n                preview content\n              </:preview>\n            </OSS::SplitModal>\n      */\n      {\n        \"id\": \"Hc5+hdbT\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"preview\\\"],[[[[1,\\\"\\\\n          preview content\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.split-modal__preview').hasText('preview content');\n    });\n    (0, _qunit.test)('When the escape button is triggered, the modal is closed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::SplitModal @close={{this.closeModal}}></OSS::SplitModal>\n      */\n      {\n        \"id\": \"UMaxA6C/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerKeyEvent)('.oss-modal-dialog', 'keyup', 27);\n      assert.true(this.closeModal.calledOnce);\n    });\n    (0, _qunit.module)('Clicking outside', function () {\n      (0, _qunit.test)('It triggers the close action', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SplitModal @close={{this.closeModal}}></OSS::SplitModal>\n        */\n        {\n          \"id\": \"UMaxA6C/\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.closeModal.notCalled);\n        await (0, _testHelpers.click)('.oss-modal-dialog-backdrop');\n        assert.ok(this.closeModal.calledOnce);\n      });\n      (0, _qunit.test)('If the disableClickOutside parameter is truthy, it does not trigger the close action', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SplitModal @close={{this.closeModal}} @disableClickOutside={{true}}></OSS::SplitModal>\n        */\n        {\n          \"id\": \"oeabTqOw\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\",\\\"@disableClickOutside\\\"],[[30,0,[\\\"closeModal\\\"]],true]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(this.closeModal.notCalled);\n        await (0, _testHelpers.click)('.oss-modal-dialog-backdrop');\n        assert.ok(this.closeModal.notCalled);\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('The component throws an error if the close parameter is not passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::SplitModal] The close function is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::SplitModal />\n        */\n        {\n          \"id\": \"uSQFSOEr\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/split-modal-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/star-rating-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/star-rating\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _starRating, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/components/o-s-s/star-rating\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/star-rating', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::StarRating @rating={{3}} @totalStars={{5}} />\n      */\n      {\n        \"id\": \"by7JWcv1\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\"],[3,5]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/star-rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.star-rating').exists();\n    });\n    for (const starColor in _starRating.StarColor) {\n      (0, _qunit.test)('Passing @activeColor, @passiveColor & @activeStyle applies the correct classes to the component', async function (assert) {\n        this.activeColor = starColor;\n        this.passiveColor = starColor;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::StarRating @rating={{5}} @totalStars={{8}}\n                                                @activeColor={{this.activeColor}}\n                                                @passiveStyle='regular'\n                                                @passiveColor={{this.passiveColor}} />\n        */\n        {\n          \"id\": \"las3PimQ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\",\\\"@activeColor\\\",\\\"@passiveStyle\\\",\\\"@passiveColor\\\"],[5,8,[30,0,[\\\"activeColor\\\"]],\\\"regular\\\",[30,0,[\\\"passiveColor\\\"]]]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/star-rating-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.fas').hasClass(`color-${starColor}`);\n        assert.dom('.far').hasClass(`color-${starColor}`);\n      });\n    }\n    (0, _qunit.test)('The number of stars displayed is consistent with the provided @rating', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::StarRating @rating={{3}} @totalStars={{8}} @passiveStyle='regular'\n                                            @activeColor={{this.activeColor}}\n                                            @passiveColor={{this.passiveColor}} />\n      */\n      {\n        \"id\": \"AWYeniZB\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\",\\\"@passiveStyle\\\",\\\"@activeColor\\\",\\\"@passiveColor\\\"],[3,8,\\\"regular\\\",[30,0,[\\\"activeColor\\\"]],[30,0,[\\\"passiveColor\\\"]]]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/star-rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.fas.fa-star.color-yellow').exists({\n        count: 3\n      });\n    });\n    (0, _qunit.test)('When @onChange parameter is passed, the method is called when a click is made on a star', async function (assert) {\n      this.onChange = _sinon.default.stub();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::StarRating @rating={{3}} @totalStars={{8}} @passiveStyle='regular'\n                                            @activeColor={{this.activeColor}}\n                                            @passiveColor={{this.passiveColor}}\n                                            @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"VEXBfCoW\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\",\\\"@passiveStyle\\\",\\\"@activeColor\\\",\\\"@passiveColor\\\",\\\"@onChange\\\"],[3,8,\\\"regular\\\",[30,0,[\\\"activeColor\\\"]],[30,0,[\\\"passiveColor\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/star-rating-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.fa-star:nth-of-type(4)');\n      assert.true(this.onChange.calledOnceWithExactly(4));\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('failing to pass @rating throws an error', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::StarRating] @rating argument is mandatory and must be a number');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::StarRating @totalStars={{5}} />\n        */\n        {\n          \"id\": \"+9lJ8bvR\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@totalStars\\\"],[5]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/star-rating-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('failing to pass @totalStart throws an error', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::StarRating] @totalStars argument is mandatory and must be a number');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::StarRating @rating={{5}} />\n        */\n        {\n          \"id\": \"IAGwII3O\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\"],[5]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/star-rating-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/tag-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/tag\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _tag, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/components/o-s-s/tag\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/tag', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Tag @label='test' />\n      */\n      {\n        \"id\": \"GVNxoePS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-tag').exists();\n    });\n    (0, _qunit.test)('it renders the proper label when @label is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Tag @label=\"Test\" />\n      */\n      {\n        \"id\": \"EEjkGOUp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-tag').exists({\n        count: 1\n      });\n      assert.dom('.upf-tag').hasText('Test');\n    });\n    (0, _qunit.test)('it renders the proper icon when @icon is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Tag @icon=\"far fa-thumbs-up\" />\n      */\n      {\n        \"id\": \"dMTcX4VR\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-thumbs-up\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-tag').exists({\n        count: 1\n      });\n      assert.dom('.upf-tag i').hasClass('fa-thumbs-up');\n    });\n    (0, _qunit.test)('it renders the proper suffix icon when @suffixIcon is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Tag @icon=\"far fa-thumbs-up\" @suffixIcon=\"far fa-arrow-trend-up\" />\n      */\n      {\n        \"id\": \"PAHsX9z1\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@suffixIcon\\\"],[\\\"far fa-thumbs-up\\\",\\\"far fa-arrow-trend-up\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-tag i').exists({\n        count: 2\n      });\n      assert.dom('.upf-tag i:first-child').hasClass('fa-thumbs-up');\n      assert.dom('.upf-tag i:last-child').hasClass('fa-arrow-trend-up');\n    });\n    (0, _qunit.module)('@plain', () => {\n      (0, _qunit.test)('the right class is applied on the tag', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Tag @icon=\"far fa-thumbs-up\" @plain={{true}} />\n        */\n        {\n          \"id\": \"Oo1Z4yBU\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@plain\\\"],[\\\"far fa-thumbs-up\\\",true]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-tag').hasClass('upf-tag--plain');\n      });\n    });\n    (0, _qunit.module)('@hasEllipsis', () => {\n      (0, _qunit.test)('When the param is true then the ellipsis is shown', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Tag @label='Test with a huge label sentence' @hasEllipsis='true' />\n        */\n        {\n          \"id\": \"xSy2UeLC\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@hasEllipsis\\\"],[\\\"Test with a huge label sentence\\\",\\\"true\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-tag').exists({\n          count: 1\n        });\n        assert.dom('.upf-tag span').hasStyle({\n          maxWidth: '80px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        });\n      });\n      (0, _qunit.test)('When the param is false then the ellipsis is shown', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Tag @label='Test with a huge label sentence' />\n        */\n        {\n          \"id\": \"Vq8P7YXF\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Test with a huge label sentence\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-tag').exists({\n          count: 1\n        });\n        assert.dom('.upf-tag span').doesNotExist();\n        assert.dom('.upf-tag').hasText('Test with a huge label sentence');\n      });\n    });\n    (0, _qunit.module)('@htmlSafe', () => {\n      (0, _qunit.test)('Setting the param to true allows html to be rendered in the @label', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Tag @label='<div class=\"custom-html\">Text content</div>' @htmlSafe={{true}} />\n        */\n        {\n          \"id\": \"praHzhI0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@htmlSafe\\\"],[\\\"<div class=\\\\\\\"custom-html\\\\\\\">Text content</div>\\\",true]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-tag .custom-html').hasText('Text content');\n      });\n      (0, _qunit.test)('When the param is falsy, html content is rendered as basic string', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Tag @label='<div class=\"custom-html\">Text content</div>' />\n        */\n        {\n          \"id\": \"/22BdB3k\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"<div class=\\\\\\\"custom-html\\\\\\\">Text content</div>\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-tag .custom-html').doesNotExist();\n        assert.dom('.upf-tag').hasText('<div class=\"custom-html\">Text content</div>');\n      });\n    });\n    Object.keys(_tag.SkinDefinition).forEach(skin => {\n      (0, _qunit.test)(`it sets the right class when using a supported skin: ${skin}`, async function (assert) {\n        this.skin = skin;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::Tag @skin={{this.skin}} @label=\"Test Skin\" />\n        */\n        {\n          \"id\": \"5lw5M0c/\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[[30,0,[\\\"skin\\\"]],\\\"Test Skin\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-tag').exists();\n        assert.dom('.upf-tag').hasClass(`upf-tag--${_tag.SkinDefinition[this.skin]}`);\n      });\n    });\n    (0, _qunit.test)('it properly sets up the xs size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Tag @skin={{this.skin}} @label=\"Test Skin\" @size=\"xs\" />\n      */\n      {\n        \"id\": \"gn5gy+1o\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\",\\\"@size\\\"],[[30,0,[\\\"skin\\\"]],\\\"Test Skin\\\",\\\"xs\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-tag').exists();\n      assert.dom('.upf-tag').hasClass('upf-tag--xs');\n    });\n    (0, _qunit.test)('it fails if @label and @icon are missing', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [component][OSS::Tag] You must pass either a @label or an @icon argument.');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::Tag />\n      */\n      {\n        \"id\": \"5R7RxC5I\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/tag-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/text-area-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/text-area', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.value = 'Data';\n      this.textareaSelector = '.oss-textarea-container  .oss-textarea';\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TextArea @label='test' />\n      */\n      {\n        \"id\": \"DPMltvEh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-textarea-container').exists();\n    });\n    (0, _qunit.module)('@resize', function () {\n      (0, _qunit.test)('Default has no class resize', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea />\n        */\n        {\n          \"id\": \"Hw2OU7Sd\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-v');\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-h');\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-none');\n      });\n      (0, _qunit.test)('When resize is vertical should have class resize-v', async function (assert) {\n        this.resize = 'vertical';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea @resize={{this.resize}}/>\n        */\n        {\n          \"id\": \"lYnkb64E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(this.textareaSelector).hasClass('oss-textarea--resize-v');\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-h');\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-none');\n      });\n      (0, _qunit.test)('When resize is horizontal should have class resize-h', async function (assert) {\n        this.resize = 'horizontal';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea @resize={{this.resize}}/>\n        */\n        {\n          \"id\": \"lYnkb64E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-v');\n        assert.dom(this.textareaSelector).hasClass('oss-textarea--resize-h');\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-none');\n      });\n      (0, _qunit.test)('When resize is none should have class resize-none', async function (assert) {\n        this.resize = 'none';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea @resize={{this.resize}}/>\n        */\n        {\n          \"id\": \"lYnkb64E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-v');\n        assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-h');\n        assert.dom(this.textareaSelector).hasClass('oss-textarea--resize-none');\n      });\n    });\n    (0, _qunit.module)('@rows', function () {\n      (0, _qunit.test)('Default height', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea />\n        */\n        {\n          \"id\": \"Hw2OU7Sd\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.equal(document.querySelector(this.textareaSelector).offsetHeight, 52);\n      });\n      (0, _qunit.test)('Row change height', async function (assert) {\n        this.rows = 2;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea @rows={{this.rows}}/>\n        */\n        {\n          \"id\": \"miYg1Lxx\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@rows\\\"],[[30,0,[\\\"rows\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        const twoRowHeight = document.querySelector(this.textareaSelector).offsetHeight;\n        assert.ok(twoRowHeight > 36);\n        await this.set('rows', 8);\n        const heightRowHeight = document.querySelector(this.textareaSelector).offsetHeight;\n        assert.ok(heightRowHeight > twoRowHeight);\n      });\n    });\n    (0, _qunit.test)('When the field is updated, the @onChange method is called', async function (assert) {\n      this.onChange = _sinon.default.spy();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TextArea @value={{this.value}} @onChange={{this.onChange}}/>\n      */\n      {\n        \"id\": \"Z+bMN0vQ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.typeIn)(this.textareaSelector, 'b');\n      assert.ok(this.onChange.calledOnceWithExactly('Datab'));\n    });\n    (0, _qunit.module)('Extra attributes', () => {\n      (0, _qunit.test)('passing an extra class is applied to the component', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea class=\"my-extra-class\" />\n        */\n        {\n          \"id\": \"7FEXKtip\",\n          \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.my-extra-class').exists();\n      });\n      (0, _qunit.test)('passing data-control-name works', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea data-control-name=\"description-input\" />\n        */\n        {\n          \"id\": \"eP7HXLDR\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"description-input\\\"]],null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        let inputWrapper = document.querySelector('.oss-textarea-container');\n        assert.equal(inputWrapper?.getAttribute('data-control-name'), 'description-input');\n      });\n    });\n    (0, _qunit.module)('error management', () => {\n      (0, _qunit.test)('it throws an error if @resize is not a correct value', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::TextArea] The @resize parameter should be a value of resize');\n        });\n        this.resize = 'NotACorrectValue';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TextArea @resize={{this.resize}} />\n        */\n        {\n          \"id\": \"lYnkb64E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/text-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/togglable-section-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/object\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _object, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"@ember/object\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/togglable-section', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.iconUrl = 'https://fr.wikipedia.org/wiki/Fichier:How_to_use_icon.svg';\n      this.title = 'Fake title';\n      this.subtitle = 'Some subtitle contents. Some subtitle contents. Some subtitle contents.';\n      this.toggled = false;\n      this.onChange = value => {\n        (0, _object.set)(this, 'toggled', value);\n      };\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                  @iconUrl={{this.iconUrl}} @toggled={{this.toggled}}\n                                                  @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"XS9TTW/N\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.togglable-section').exists();\n    });\n    (0, _qunit.test)('It throws an error if the @title param is not passed', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [OSS::TogglableSection] The @title parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @subtitle={{this.subtitle}}\n                                                       @iconUrl={{this.iconUrl}} @toggled={{this.toggled}}\n                                                       @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"5NW5HEz3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.test)('It throws an error if the @toggled param is not passed', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [OSS::TogglableSection] The @toggled parameter is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                       @iconUrl={{this.iconUrl}}\n                                                       @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"/FcaqkvR\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.test)('It throws an error if the @onChange function is not passed', async function (assert) {\n      (0, _testHelpers.setupOnerror)(err => {\n        assert.equal(err.message, 'Assertion Failed: [OSS::TogglableSection] The @onChange function is mandatory');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                       @iconUrl={{this.iconUrl}} @toggled={{this.toggled}} />\n      */\n      {\n        \"id\": \"HBF3PmKZ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n    });\n    (0, _qunit.test)('It displays no image if @iconUrl param is not passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                       @toggled={{this.toggled}}\n                                                       @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"5YKBnoTE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('img').doesNotExist();\n    });\n    (0, _qunit.test)('It displays a font-awesome icon if the @icon parameter is filled in', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title=\"title\" @icon=\"far fa-hourglass\" @onChange={{this.onChange}} @toggled={{false}} />\n      */\n      {\n        \"id\": \"gIqxuYft\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@icon\\\",\\\"@onChange\\\",\\\"@toggled\\\"],[\\\"title\\\",\\\"far fa-hourglass\\\",[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.far.fa-hourglass').exists();\n    });\n    (0, _qunit.test)('It displays a default badge with an icon if @badgeIcon is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title=\"title\" @badgeIcon=\"far fa-hourglass\" @onChange={{this.onChange}} @toggled={{false}} />\n      */\n      {\n        \"id\": \"qFSsRhR1\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@badgeIcon\\\",\\\"@onChange\\\",\\\"@toggled\\\"],[\\\"title\\\",\\\"far fa-hourglass\\\",[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-badge .far.fa-hourglass').exists();\n    });\n    (0, _qunit.module)('Toggle behavior', () => {\n      async function renderComponent() {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                      @iconUrl={{this.iconUrl}} @toggled={{this.toggled}}\n                                                      @onChange={{this.onChange}}>\n                                <:contents>\n                                  <div>contents named block</div>\n                                </:contents>\n                              </OSS::TogglableSection>\n        */\n        {\n          \"id\": \"jOS/1BDv\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"contents\\\"],[[[[1,\\\"\\\\n                          \\\"],[10,0],[12],[1,\\\"contents named block\\\"],[13],[1,\\\"\\\\n                        \\\"]],[]]]]]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n      }\n      (0, _qunit.test)('When the toggle is enabled, the named-block contents are displayed', async function (assert) {\n        await renderComponent();\n        assert.dom('.togglable-section').doesNotContainText('contents named block');\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.dom('.togglable-section').hasTextContaining('contents named block');\n      });\n      (0, _qunit.test)('When the toggle is enabled, the header part turns grey', async function (assert) {\n        await renderComponent();\n        assert.dom('.inner-header').doesNotHaveClass('background-color-gray-50');\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.dom('.inner-header').hasClass('background-color-gray-50');\n      });\n      (0, _qunit.test)('When the toggle is disabled, the named-block contents are displayed', async function (assert) {\n        this.toggled = true;\n        await renderComponent();\n        assert.dom('.togglable-section').hasTextContaining('contents named block');\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.dom('.togglable-section').doesNotContainText('contents named block');\n      });\n      (0, _qunit.test)('When the toggle is clicked, the @onChange method is called', async function (assert) {\n        this.onChange = _sinon.default.stub();\n        await renderComponent();\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.true(this.onChange.calledOnceWithExactly(true));\n      });\n    });\n    (0, _qunit.module)('Size behavior', () => {\n      (0, _qunit.test)('If the @size param is not passed, the default size is md', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}}>\n                  <:contents>\n                    <div>contents named block</div>\n                  </:contents>\n                </OSS::TogglableSection>\n        */\n        {\n          \"id\": \"8psQNTYz\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"contents\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[12],[1,\\\"contents named block\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.togglable-section .header-block').hasClass('padding-px-18');\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.dom('.togglable-section .content-block').hasClass('padding-px-18');\n      });\n      (0, _qunit.test)('If the @size param is set to sm, the size is sm', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}} @size=\"sm\">\n                  <:contents>\n                    <div>contents named block</div>\n                  </:contents>\n                </OSS::TogglableSection>\n        */\n        {\n          \"id\": \"CMxVr6bI\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\",\\\"@size\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]],\\\"sm\\\"]],[[\\\"contents\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[12],[1,\\\"contents named block\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.togglable-section .header-block').hasClass('padding-px-12');\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.dom('.togglable-section .content-block').hasClass('padding-px-12');\n      });\n      (0, _qunit.test)('If the @size param is set to md, the size is md', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}} @size=\"md\">\n                  <:contents>\n                    <div>contents named block</div>\n                  </:contents>\n                </OSS::TogglableSection>\n        */\n        {\n          \"id\": \"bTi1nl3o\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\",\\\"@size\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]],\\\"md\\\"]],[[\\\"contents\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[12],[1,\\\"contents named block\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.togglable-section .header-block').hasClass('padding-px-18');\n        await (0, _testHelpers.click)('.upf-toggle');\n        assert.dom('.togglable-section .content-block').hasClass('padding-px-18');\n      });\n    });\n    (0, _qunit.module)('@Disabled behaviour', () => {\n      (0, _qunit.test)('If @disabled is truthy, the toggle is disabled', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}} @disabled={{true}} />\n        */\n        {\n          \"id\": \"Pz2dJFmd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\",\\\"@disabled\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]],true]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-toggle').hasClass('upf-toggle--disabled');\n      });\n      (0, _qunit.test)('If @disabled is falsy, the toggle is enabled', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}} @disabled={{false}} />\n        */\n        {\n          \"id\": \"LpmeZJoU\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\",\\\"@disabled\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-toggle').doesNotHaveClass('upf-toggle--disabled');\n      });\n      (0, _qunit.test)('If @disabled is truthy, the toggle can still be active', async function (assert) {\n        this.toggled = true;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}} @disabled={{true}} />\n        */\n        {\n          \"id\": \"Pz2dJFmd\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\",\\\"@disabled\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]],true]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.upf-toggle').hasClass('upf-toggle--disabled');\n        assert.dom('.upf-toggle').hasClass('upf-toggle--toggled');\n      });\n    });\n    (0, _qunit.test)('When `header-actions` named block is passed, the content is rendered in the header', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::TogglableSection @title={{this.title}} @toggled={{this.toggled}} @onChange={{this.onChange}} @disabled={{true}} >\n                  <:header-actions>\n                    <div data-control-name=\"action-named-block-content\" />\n                  </:header-actions>\n                </OSS::TogglableSection>\n      */\n      {\n        \"id\": \"zayH7jHX\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@toggled\\\",\\\"@onChange\\\",\\\"@disabled\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]],true]],[[\\\"header-actions\\\"],[[[[1,\\\"\\\\n              \\\"],[10,0],[14,\\\"data-control-name\\\",\\\"action-named-block-content\\\"],[12],[13],[1,\\\"\\\\n            \\\"]],[]]]]]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/togglable-section-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.togglable-section .header-block [data-control-name=\"action-named-block-content\"]').exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/toggle-buttons-test\", [\"qunit\", \"ember-qunit\", \"@ember/object\", \"@ember/test-helpers\", \"@ember/test-helpers/settled\", \"@ember/test-helpers/setup-onerror\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _object, _testHelpers, _settled, _setupOnerror, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/object\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/settled\",0,\"@ember/test-helpers/setup-onerror\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/toggle-buttons', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.selectedToggle = 'first';\n      this.onSelection = value => {\n        (0, _object.set)(this, 'selectedToggle', value);\n      };\n      this.toggles = [{\n        value: 'first',\n        label: 'First'\n      }, {\n        value: 'second',\n        label: 'Second',\n        icon: 'far fa-2'\n      }];\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n      */\n      {\n        \"id\": \"4zYkewO0\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-toggle-buttons-container').exists();\n    });\n    (0, _qunit.test)('the right class is applied when the @disabled arg is truthy', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}} @disabled={{true}}/>\n      */\n      {\n        \"id\": \"BzTze5Li\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\",\\\"@disabled\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]],true]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-toggle-buttons-container').exists();\n      assert.dom('.oss-toggle-buttons-container').hasClass('oss-toggle-buttons-container--disabled');\n    });\n    (0, _qunit.test)('the toggle icon is displayed when provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n      */\n      {\n        \"id\": \"4zYkewO0\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-toggle-buttons-btn:first-child i.far').doesNotExist();\n      assert.dom('.oss-toggle-buttons-btn:last-child i.far').exists();\n      assert.dom('.oss-toggle-buttons-btn:last-child i.far').hasClass('fa-2');\n    });\n    (0, _qunit.module)('If @selectedToggle is passed', function () {\n      (0, _qunit.test)('If the selectedToggle matches an entry from the toggles, then the toggle is set to selected', async function (assert) {\n        this.selectedToggle = 'second';\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"4zYkewO0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-toggle-buttons-btn--selected').hasText('Second');\n      });\n    });\n    (0, _qunit.module)('When clicking on an item', () => {\n      (0, _qunit.test)('the toggle is selected', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"4zYkewO0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-toggle-buttons-btn:first-child');\n        assert.dom('.oss-toggle-buttons-btn--selected').hasText('First');\n        await (0, _testHelpers.click)('.oss-toggle-buttons-btn:last-child');\n        assert.dom('.oss-toggle-buttons-btn--selected').hasText('Second');\n      });\n      (0, _qunit.test)('the @onSelection method is not triggered if the item is already selected', async function (assert) {\n        this.onSelectionStub = _sinon.default.stub();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @onSelection={{this.onSelectionStub}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"F4TJ4o5S\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelectionStub\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-toggle-buttons-btn:first-child');\n        assert.ok(this.onSelectionStub.notCalled);\n      });\n      (0, _qunit.test)('the @onSelection method is not triggered if the component is disabled', async function (assert) {\n        this.onSelectionStub = _sinon.default.stub();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @onSelection={{this.onSelectionStub}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}} @disabled={{true}} />\n        */\n        {\n          \"id\": \"AcYeVB5x\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\",\\\"@disabled\\\"],[[30,0,[\\\"onSelectionStub\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]],true]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-toggle-buttons-btn:first-child');\n        assert.ok(this.onSelectionStub.notCalled);\n      });\n      (0, _qunit.test)('the @onSelection method is triggered with the selected value', async function (assert) {\n        this.onSelection = _sinon.default.spy();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"4zYkewO0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-toggle-buttons-btn:last-child');\n        assert.ok(this.onSelection.calledWith('second'));\n      });\n    });\n    (0, _qunit.module)('Error management', () => {\n      (0, _qunit.test)('it throws an error if @toggles is not provided', async function (assert) {\n        (0, _setupOnerror.default)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @toggles parameter of type Toggle[] is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @onSelection={{this.onSelection}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"uBS5BSIx\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n      (0, _qunit.test)('it throws an error if @onSelection is not provided', async function (assert) {\n        (0, _setupOnerror.default)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @onSelection parameter of type function is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"/0i7s+RT\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n      (0, _qunit.test)('it throws an error if @selectedToggle is not provided', async function (assert) {\n        (0, _setupOnerror.default)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @selectedToggle parameter of type string or null is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @toggles={{this.toggles}} @onSelection={{this.onSelection}}  />\n        */\n        {\n          \"id\": \"uuJ4YkbU\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@toggles\\\",\\\"@onSelection\\\"],[[30,0,[\\\"toggles\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n      (0, _qunit.test)('it throws an error if @selectedToggle is not a value of toggles', async function (assert) {\n        this.selectedToggle = 'toto';\n        (0, _setupOnerror.default)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @selectedToggle parameter should be null or a value of toggles');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleButtons @toggles={{this.toggles}} @onSelection={{this.onSelection}} @selectedToggle={{this.selectedToggle}}/>\n        */\n        {\n          \"id\": \"XOxhFc89\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@toggles\\\",\\\"@onSelection\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"toggles\\\"]],[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-buttons-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _settled.default)();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/toggle-switch-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/toggle-switch', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it applies the right class on the toggle switch depending on the value', async function (assert) {\n      this.value = false;\n      this.onChange = v => {\n        this.set('value', v);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ToggleSwitch @value={{this.value}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"uQ3ZlA52\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-switch-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.upf-toggle').hasNoClass('upf-toggle--toggled');\n      await (0, _testHelpers.click)('.upf-toggle');\n      assert.dom('.upf-toggle').hasClass('upf-toggle--toggled');\n    });\n    (0, _qunit.test)('it triggers the onChange action when clicking the button', async function (assert) {\n      this.onChange = v => {\n        assert.equal(v, false);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::ToggleSwitch @value={{true}} @onChange={{this.onChange}} />\n      */\n      {\n        \"id\": \"lRqJ2gZr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-switch-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.upf-toggle');\n      assert.expect(1);\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if no onChange action is passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleSwitch] Please provide an onChange action');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleSwitch />\n        */\n        {\n          \"id\": \"+mWK6ji9\",\n          \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-switch-test.js\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if no value is passed', async function (assert) {\n        this.onChange = () => {};\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleSwitch] Please provide a boolean @value. @value is undefined');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleSwitch @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"WlnTZKk+\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-switch-test.js\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if passed value is not a boolean', async function (assert) {\n        this.onChange = () => {};\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleSwitch] Please provide a boolean @value. @value is string');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::ToggleSwitch @value=\"true\" @onChange={{this.onChange}} />\n        */\n        {\n          \"id\": \"xCHHCepE\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[\\\"true\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/toggle-switch-test.js\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/upload-area-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-intl/test-support\", \"sinon\", \"@upfluence/oss-components/test-support/services/uploader\", \"@upfluence/oss-components/test-support\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _testSupport, _sinon, _uploader, _testSupport2, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"ember-intl/test-support\",0,\"sinon\",0,\"@upfluence/oss-components/test-support/services/uploader\",0,\"@upfluence/oss-components/test-support\"eaimeta@70e063a35619d71f\n  const file = new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], '1px.png', {\n    type: 'image/png'\n  });\n  (0, _qunit.module)('Integration | Component | o-s-s/upload-area', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _testSupport2.setupToast)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.register('service:uploader', _uploader.default);\n      this.mockUploader = this.owner.lookup('service:uploader');\n      this.validationRules = [{\n        type: 'filesize',\n        value: '1MB'\n      }];\n      this.size = null;\n      this.subtitle = 'JPG, PNG, PDF (Max 800x400px - 2MB)';\n      this.onUploadSuccess = _sinon.default.stub();\n      this.onFileDeletion = _sinon.default.stub();\n    });\n    (0, _qunit.module)('rendering', function () {\n      (0, _qunit.module)('browse action', function () {\n        (0, _qunit.test)('the browse text is contained in a link', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link').exists();\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link').hasText('browse');\n        });\n        (0, _qunit.test)('clicking on browse text opens the hidden file input', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area-container input[type=\"file\"]').exists();\n          const fileInput = document.querySelector('.oss-upload-area-container input[type=\"file\"]');\n          const fileInputClickStub = _sinon.default.stub(fileInput, 'click');\n          await (0, _testHelpers.click)('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link');\n          assert.ok(fileInputClickStub.calledOnce);\n        });\n      });\n      (0, _qunit.module)('size', function () {\n        (0, _qunit.test)('it renders in the default size when no size arg is provided', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area').hasClass('oss-upload-area--md');\n        });\n        (0, _qunit.test)('it renders in the default size when no valid size is provided', async function (assert) {\n          this.size = 'foo';\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area').hasClass('oss-upload-area--md');\n        });\n        (0, _qunit.test)('it renders in the provided size when it is a valid one', async function (assert) {\n          this.size = 'lg';\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area').hasClass('oss-upload-area--lg');\n        });\n      });\n      (0, _qunit.module)('subtitle', function () {\n        (0, _qunit.test)('it renders only the title when no subtitle is provided', async function (assert) {\n          this.subtitle = null;\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3').hasText('Drop your file here, or browse');\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .font-color-gray-500').doesNotExist();\n        });\n        (0, _qunit.test)('it renders the subtitle when provided', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3').hasText('Drop your file here, or browse');\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .font-color-gray-500').exists();\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .font-color-gray-500').hasText(this.subtitle);\n        });\n      });\n      (0, _qunit.module)('disabled mode', function () {\n        (0, _qunit.test)('the right class is applied on the component', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @disabled={{true}} @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"7OzGkoU1\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@disabled\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],true,[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area').hasClass('oss-upload-area--disabled');\n        });\n        (0, _qunit.test)('the browse word is not actionable', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @disabled={{true}} @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"7OzGkoU1\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@disabled\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],true,[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link').doesNotExist();\n        });\n      });\n    });\n    (0, _qunit.module)('drag and drop support', function () {\n      (0, _qunit.module)('disabled mode', function () {\n        (0, _qunit.test)('dragging a file over the component does not do nothing', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @disabled={{true}} @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"7OzGkoU1\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@disabled\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],true,[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'dragenter');\n          assert.dom('.oss-upload-area').hasNoClass('oss-upload-area--dragging');\n        });\n      });\n      (0, _qunit.module)('active mode', function (hooks) {\n        hooks.beforeEach(function () {\n          this.file = file;\n        });\n        (0, _qunit.test)('dragging a file over the component applies the right class', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'dragenter');\n          assert.dom('.oss-upload-area').hasClass('oss-upload-area--dragging');\n        });\n        (0, _qunit.test)('dropped file is validated', async function (assert) {\n          _sinon.default.spy(this.mockUploader, 'validate');\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n            dataTransfer: {\n              files: [this.file]\n            }\n          });\n          assert.ok(this.mockUploader.validate.calledWithExactly({\n            file: this.file,\n            privacy: 'private',\n            scope: 'anonymous'\n          }, this.validationRules));\n        });\n        (0, _qunit.test)('error toasts are displayed if the dropped file does not pass the validation rules', async function (assert) {\n          this.validationRules = [{\n            type: 'filesize',\n            value: '1B'\n          }, {\n            type: 'filetype',\n            value: ['pdf']\n          }];\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n            dataTransfer: {\n              files: [this.file]\n            }\n          });\n          assert.ok(this.toastErrorStub.calledWith(this.intl.t(`oss-components.upload-area.errors.filetype.description`), this.intl.t(`oss-components.upload-area.errors.filetype.title`)));\n          assert.ok(this.toastErrorStub.calledWith(this.intl.t('oss-components.upload-area.errors.filesize.description', {\n            max_filesize: '1B'\n          }), this.intl.t('oss-components.upload-area.errors.filesize.title')));\n        });\n        (0, _qunit.test)('if onDryRun is passed, the uploaded file is passed to it if validated and no upload item is displayed', async function (assert) {\n          this.onDryRun = _sinon.default.stub();\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} @onDryRun={{this.onDryRun}} />\n                  \n          */\n          {\n            \"id\": \"hnyirku5\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\",\\\"@onDryRun\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onDryRun\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n            dataTransfer: {\n              files: [this.file]\n            }\n          });\n          assert.dom('.oss-upload-item').doesNotExist();\n          assert.dom('.oss-upload-area').exists();\n          assert.ok(this.onDryRun.calledOnceWithExactly(_sinon.default.match(file => file instanceof File)));\n        });\n        (0, _qunit.test)('the uploaded file is displayed if the dropped file passes the validation', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n            dataTransfer: {\n              files: [this.file]\n            }\n          });\n          assert.dom('.oss-upload-item').exists();\n          assert.dom('.oss-upload-area').doesNotExist();\n        });\n        (0, _qunit.test)('clicking on the remove button in the upload item moves back to the upload state', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} @onFileDeletion={{this.onFileDeletion}} />\n                  \n          */\n          {\n            \"id\": \"nciud8FG\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\",\\\"@onFileDeletion\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onFileDeletion\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n            dataTransfer: {\n              files: [this.file]\n            }\n          });\n          await (0, _testHelpers.waitFor)('.oss-upload-item [data-control-name=\"upload-item-remove-button\"]');\n          await (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-remove-button\"]');\n          assert.dom('.oss-upload-item').doesNotExist();\n          assert.dom('.oss-upload-area').exists();\n          assert.ok(this.onFileDeletion.calledOnce);\n        });\n        (0, _qunit.test)('clicking on the edit button in the upload item opens the hidden file input', async function (assert) {\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadArea\n                      @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                      @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"5tJ4y9Ce\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n            dataTransfer: {\n              files: [this.file]\n            }\n          });\n          const fileInput = document.querySelector('.oss-upload-area-container input[type=\"file\"]');\n          const fileInputClickStub = _sinon.default.stub(fileInput, 'click');\n          await (0, _testHelpers.waitFor)('.oss-upload-item [data-control-name=\"upload-item-edit-button\"]');\n          await (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-edit-button\"]');\n          assert.ok(fileInputClickStub.calledOnce);\n        });\n      });\n    });\n    (0, _qunit.module)('displaying an existing file', function (hooks) {\n      hooks.beforeEach(function () {\n        this.artifact = {\n          filename: 'foo.png',\n          url: 'https://oss-components.org/foo.png',\n          content_type: 'image/png'\n        };\n      });\n      (0, _qunit.test)('the file is displayed using an upload-item', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadArea\n                  @uploader={{this.mockUploader}} @artifact={{this.artifact}} @rules={{this.validationRules}} @size={{this.size}}\n                  @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"LXq0+Q1J\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@artifact\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"artifact\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-upload-area').doesNotExist();\n        assert.dom('.oss-upload-item').exists();\n        assert.dom('.oss-upload-item [data-control-name=\"upload-item-filename\"]').hasText('foo.png');\n      });\n      (0, _qunit.test)('clicking on the remove button in the upload item moves back to the upload state', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadArea\n                  @uploader={{this.mockUploader}} @artifact={{this.artifact}} @rules={{this.validationRules}} @size={{this.size}}\n                  @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} @onFileDeletion={{this.onFileDeletion}} />\n              \n        */\n        {\n          \"id\": \"7IvwecIp\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@artifact\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\",\\\"@onFileDeletion\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"artifact\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onFileDeletion\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-remove-button\"]');\n        assert.dom('.oss-upload-item').doesNotExist();\n        assert.dom('.oss-upload-area').exists();\n        assert.ok(this.onFileDeletion.calledOnce);\n      });\n      (0, _qunit.test)('clicking on the edit button in the upload item opens the hidden file input', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadArea\n                  @uploader={{this.mockUploader}} @artifact={{this.artifact}} @rules={{this.validationRules}} @size={{this.size}}\n                  @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"LXq0+Q1J\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@artifact\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"artifact\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        const fileInput = document.querySelector('.oss-upload-area-container input[type=\"file\"]');\n        const fileInputClickStub = _sinon.default.stub(fileInput, 'click');\n        await (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-edit-button\"]');\n        assert.ok(fileInputClickStub.calledOnce);\n      });\n    });\n    (0, _qunit.module)('allow multiple files', function () {\n      (0, _qunit.test)('it allows the user to upload more than one file', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadArea\n                  @uploader={{this.mockUploader}} @multiple={{true}} @rules={{this.validationRules}}\n                  @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"EnHKdy1N\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@multiple\\\",\\\"@rules\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],true,[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n          dataTransfer: {\n            files: [file]\n          }\n        });\n        await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n          dataTransfer: {\n            files: [file]\n          }\n        });\n        assert.dom('.oss-upload-area').exists();\n        assert.dom('.oss-upload-item').exists({\n          count: 2\n        });\n      });\n      (0, _qunit.test)('the user can remove a specific uploaded item', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadArea\n                  @uploader={{this.mockUploader}} @multiple={{true}} @rules={{this.validationRules}}\n                  @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"EnHKdy1N\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@multiple\\\",\\\"@rules\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],true,[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-area-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n          dataTransfer: {\n            files: [file]\n          }\n        });\n        await (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n          dataTransfer: {\n            files: [file]\n          }\n        });\n        assert.dom('.oss-upload-item').exists({\n          count: 2\n        });\n        await (0, _testHelpers.waitFor)('.oss-upload-item:first-child [data-control-name=\"upload-item-remove-button\"]');\n        await (0, _testHelpers.click)('.oss-upload-item:first-child [data-control-name=\"upload-item-remove-button\"]');\n        assert.dom('.oss-upload-item').exists({\n          count: 1\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/upload-item-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"sinon\", \"@upfluence/oss-components/test-support/services/uploader\", \"@upfluence/oss-components/types/uploader\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _sinon, _uploader, _uploader2, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\",0,\"@upfluence/oss-components/test-support/services/uploader\",0,\"@upfluence/oss-components/types/uploader\"eaimeta@70e063a35619d71f\n  const buildFile = (name = '1px.png', type = 'image/png') => {\n    return new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], name, {\n      type\n    });\n  };\n  (0, _qunit.module)('Integration | Component | o-s-s/upload-item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.register('service:uploader', _uploader.default);\n      this.uploader = this.owner.lookup('service:uploader');\n      this.file = {\n        filename: 'foo.png',\n        url: 'https://oss-components.org/foo.png',\n        content_type: 'image/png'\n      };\n      this.validationRules = [{\n        type: 'filesize',\n        value: '1MB'\n      }];\n      this.scope = 'anonymous';\n      this.privacy = _uploader2.FilePrivacy.PUBLIC;\n      this.onEdition = _sinon.default.stub();\n      this.onFileDeletion = _sinon.default.stub();\n      this.onUploadSuccess = _sinon.default.stub();\n    });\n    (0, _qunit.module)('provided file is a FileArtifact', function () {\n      [{\n        contentType: 'image/png',\n        expected: 'fa-image'\n      }, {\n        contentType: 'image/jpeg',\n        expected: 'fa-image'\n      }, {\n        contentType: 'video/mov',\n        expected: 'fa-file-video'\n      }, {\n        contentType: 'application/pdf',\n        expected: 'fa-file-pdf'\n      }, {\n        contentType: null,\n        expected: 'fa-file-alt'\n      }, {\n        contentType: 'foo',\n        expected: 'fa-file-alt'\n      }].forEach(spec => {\n        (0, _qunit.test)(`a badge with a matching icon is used when the file content type is: ${spec.contentType || 'empty'}`, async function (assert) {\n          this.file.content_type = spec.contentType;\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadItem\n                      @uploader={{this.uploader}} @file={{this.file}}\n                      @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                      @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                      @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"i1WjPun3\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-badge i').hasClass('far');\n          assert.dom('.upf-badge i').hasClass(spec.expected);\n        });\n      });\n      (0, _qunit.test)('its name is rendered properly', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"upload-item-filename\"]').hasText('foo.png');\n      });\n      (0, _qunit.test)('its size is rendered properly if present', async function (assert) {\n        this.file.size = 100;\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"upload-item-filesize\"]').hasText('100 B');\n      });\n      (0, _qunit.test)('its size is not displayed if missing', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"upload-item-filesize]').doesNotExist();\n      });\n      (0, _qunit.test)('clicking the view button opens the file url', async function (assert) {\n        const windowOpenStub = _sinon.default.stub(window, 'open');\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"upload-item-view-button\"]');\n        assert.ok(windowOpenStub.calledOnceWithExactly(this.file.url, '_blank'));\n        windowOpenStub.restore();\n      });\n    });\n    (0, _qunit.module)('provided file is a native File object', function (hooks) {\n      hooks.beforeEach(function () {\n        this.file = buildFile();\n      });\n      [{\n        contentType: 'image/png',\n        expected: 'fa-image'\n      }, {\n        contentType: 'image/jpeg',\n        expected: 'fa-image'\n      }, {\n        contentType: 'video/mov',\n        expected: 'fa-file-video'\n      }, {\n        contentType: 'application/pdf',\n        expected: 'fa-file-pdf'\n      }, {\n        contentType: 'foo',\n        expected: 'fa-file-alt'\n      }].forEach(spec => {\n        (0, _qunit.test)(`a badge with a matching icon is used when the file content type is: ${spec.contentType || 'empty'}`, async function (assert) {\n          this.file = buildFile('my-file', spec.contentType);\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            \n                    <OSS::UploadItem\n                      @uploader={{this.uploader}} @file={{this.file}}\n                      @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                      @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                      @onUploadSuccess={{this.onUploadSuccess}} />\n                  \n          */\n          {\n            \"id\": \"i1WjPun3\",\n            \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n            \"isStrictMode\": false\n          }));\n          assert.dom('.upf-badge i').hasClass('far');\n          assert.dom('.upf-badge i').hasClass(spec.expected);\n        });\n      });\n      (0, _qunit.test)('its name is rendered properly', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"upload-item-filename\"]').hasText('1px.png');\n      });\n      (0, _qunit.test)('its size is rendered properly if present', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('[data-control-name=\"upload-item-filesize\"]').hasText('96 B');\n      });\n      (0, _qunit.test)('the file is immediately uploaded', async function (assert) {\n        const uploadStub = _sinon.default.stub(this.uploader, 'upload');\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.ok(uploadStub.calledOnceWithExactly(\n        // Partial match because the onSuccess, onFailure, and onProgress are component methods, hence not being\n        // accessible from the tests.\n        _sinon.default.match({\n          file: this.file,\n          privacy: this.privacy,\n          scope: this.scope\n        }), this.validationRules));\n      });\n      (0, _qunit.test)('it enters error mode if the upload failed', async function (assert) {\n        this.uploader.mode = 'failure';\n        _sinon.default.spy(this.uploader, 'upload');\n        this.onUploadFailure = _sinon.default.stub();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} @onUploadFailure={{this.onUploadFailure}} />\n              \n        */\n        {\n          \"id\": \"xbe7IViw\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\",\\\"@onUploadFailure\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onUploadFailure\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.waitFor)('.oss-upload-item.oss-upload-item--errored');\n        assert.dom('.oss-upload-item').hasClass('oss-upload-item--errored');\n        assert.dom('.oss-upload-item [data-control-name=\"upload-item-try-again-button\"]').exists();\n        assert.dom('.oss-upload-item [data-control-name=\"upload-item-try-again-button\"]').hasText('Try again');\n        await (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-try-again-button\"]');\n        assert.ok(this.uploader.upload.calledWithExactly(\n        // Partial match because the onSuccess, onFailure, and onProgress are component methods, hence not being\n        // accessible from the tests.\n        _sinon.default.match({\n          file: this.file,\n          privacy: this.privacy,\n          scope: this.scope\n        }), this.validationRules));\n        assert.true(this.onUploadFailure.calledOnceWithExactly({\n          payload: {}\n        }));\n      });\n    });\n    (0, _qunit.module)('common actions', function () {\n      (0, _qunit.test)('clicking the edit button triggers the onEdition action', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"upload-item-edit-button\"]');\n        assert.ok(this.onEdition.calledOnce);\n      });\n      (0, _qunit.test)('clicking the remove button triggers the onDeletion action', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <OSS::UploadItem\n                  @uploader={{this.uploader}} @file={{this.file}}\n                  @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                  @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                  @onUploadSuccess={{this.onUploadSuccess}} />\n              \n        */\n        {\n          \"id\": \"M0ZtCxHJ\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/upload-item-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('[data-control-name=\"upload-item-remove-button\"]');\n        assert.ok(this.onFileDeletion.calledOnce);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/url-input-test\", [\"qunit\", \"ember-qunit\", \"ember-intl/test-support\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/fill-in\", \"@ember/test-helpers/dom/type-in\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testSupport, _testHelpers, _fillIn, _typeIn, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"ember-intl/test-support\",0,\"@ember/test-helpers\",0,\"@ember/test-helpers/dom/fill-in\",0,\"@ember/test-helpers/dom/type-in\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | o-s-s/url-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _testSupport.setupIntl)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <OSS::UrlInput @prefix=\"https://\" />\n      */\n      {\n        \"id\": \"2ecs47pD\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\"],[\\\"https://\\\"]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/url-input-test.ts\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.oss-input-group').exists();\n    });\n    (0, _qunit.module)('With @validationRegex parameter', () => {\n      (0, _qunit.test)('When the text matches the Regex, the onChange function has the newValue and the isValid parameter is set to true', async function (assert) {\n        this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n        this.value = '';\n        this.onChange = _sinon.default.stub();\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                              @onChange={{this.onChange}} @value={{this.value}}\n                                              @validationRegex={{this.subdomainRegex}} />\n        */\n        {\n          \"id\": \"+tgJxxML\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/url-input-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _fillIn.default)('input', 'fakedomai');\n        await (0, _typeIn.default)('input', 'n');\n        assert.true(this.onChange.calledOnceWithExactly('fakedomain', true));\n      });\n      (0, _qunit.module)(\"When the text doesn't match the Regex\", () => {\n        (0, _qunit.test)('The onChange function has the newValue and the isValid parameter is set to false', async function (assert) {\n          this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n          this.value = '';\n          this.onChange = _sinon.default.stub();\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                @onChange={{this.onChange}} @value={{this.value}}\n                                                @validationRegex={{this.subdomainRegex}} />\n          */\n          {\n            \"id\": \"+tgJxxML\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/url-input-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _typeIn.default)('input', 'a');\n          assert.true(this.onChange.calledOnceWithExactly('a', false));\n        });\n        (0, _qunit.test)('If no error message has been specified by the parent, a default one is displayed', async function (assert) {\n          this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n          this.value = '';\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                @onChange={{this.onChange}} @value={{this.value}}\n                                                @validationRegex={{this.subdomainRegex}} />\n          */\n          {\n            \"id\": \"+tgJxxML\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/url-input-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _typeIn.default)('input', 'a');\n          assert.dom('.text-color-error').hasText('This is not a valid URL.');\n        });\n        (0, _qunit.test)('If an error message has been specified by the parent, it is displayed', async function (assert) {\n          this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n          this.value = '';\n          await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                @onChange={{this.onChange}} @value={{this.value}}\n                                                @errorMessage=\"This is a custom error message.\"\n                                                @validationRegex={{this.subdomainRegex}} />\n          */\n          {\n            \"id\": \"0ll6eq1w\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@errorMessage\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],\\\"This is a custom error message.\\\",[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n            \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/components/o-s-s/url-input-test.ts\",\n            \"isStrictMode\": false\n          }));\n          await (0, _typeIn.default)('input', 'a');\n          assert.dom('.text-color-error').hasText('This is a custom error message.');\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/helpers/form-field-feedback-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Helper | form-field-feedback', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.formManager = this.owner.lookup('service:form-manager');\n      this.formInstance = this.formManager.getInstance('test-form');\n    });\n    (0, _qunit.module)('when the form instance has no errors for the field', function () {\n      (0, _qunit.test)('it renders no error message if none is found', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @value=\"foo\" @feedbackMessage={{form-field-feedback this.formInstance.id \"name\"}} />\n        */\n        {\n          \"id\": \"KsaOpvog\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@feedbackMessage\\\"],[\\\"foo\\\",[28,[37,1],[[30,0,[\\\"formInstance\\\",\\\"id\\\"]],\\\"name\\\"],null]]],null]],[],false,[\\\"o-s-s/input-container\\\",\\\"form-field-feedback\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/form-field-feedback-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container + .font-color-error-500').doesNotExist();\n      });\n      (0, _qunit.test)('it renders no error message if the required params are omitted', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                {{! template-lint-disable no-implicit-this }}\n                <OSS::InputContainer @value=\"foo\" @feedbackMessage={{form-field-feedback}} />\n              \n        */\n        {\n          \"id\": \"P0hxnZfO\",\n          \"block\": \"[[[1,\\\"\\\\n\\\"],[1,\\\"        \\\"],[8,[39,0],null,[[\\\"@value\\\",\\\"@feedbackMessage\\\"],[\\\"foo\\\",[99,1,[\\\"@feedbackMessage\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/input-container\\\",\\\"form-field-feedback\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/form-field-feedback-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container + .font-color-error-500').doesNotExist();\n      });\n    });\n    (0, _qunit.module)('when the tracking plan manager builder has errors for the field', function (hooks) {\n      hooks.beforeEach(function () {\n        this.formManager.formFeedbacks = Object.freeze({\n          [this.formInstance.id]: {\n            name: {\n              kind: 'foo',\n              message: {\n                type: 'error',\n                value: 'there were an error on the name field'\n              }\n            }\n          }\n        });\n      });\n      (0, _qunit.test)('it renders the error message', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <OSS::InputContainer @value=\"foo\" @feedbackMessage={{form-field-feedback this.formInstance.id \"name\"}} />\n        */\n        {\n          \"id\": \"KsaOpvog\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@feedbackMessage\\\"],[\\\"foo\\\",[28,[37,1],[[30,0,[\\\"formInstance\\\",\\\"id\\\"]],\\\"name\\\"],null]]],null]],[],false,[\\\"o-s-s/input-container\\\",\\\"form-field-feedback\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/form-field-feedback-test.ts\",\n          \"isStrictMode\": false\n        }));\n        assert.dom('.oss-input-container + .font-color-error-500').exists();\n        assert.dom('.oss-input-container + .font-color-error-500').hasText('there were an error on the name field');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/helpers/redirect-to-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Helper | redirect-to', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.url = 'https://github.com/upfluence/oss-components';\n    });\n    (0, _qunit.test)('it redirects to the url on the current tab if not target is passed', async function (assert) {\n      this.redirectStub = _sinon.default.stub(window, 'open');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <div {{on \"click\" (redirect-to url=this.url)}}>link</div>\n      */\n      {\n        \"id\": \"e24AxJ/d\",\n        \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"url\\\"],[[30,0,[\\\"url\\\"]]]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/redirect-to-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('div');\n      assert.ok(this.redirectStub.calledOnceWithExactly(this.url, '_self'));\n      _sinon.default.restore();\n    });\n    (0, _qunit.test)('it redirects to the url on the provided target', async function (assert) {\n      this.redirectStub = _sinon.default.stub(window, 'open');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <div {{on \"click\" (redirect-to url=this.url target=\"_blank\")}}>link</div>\n      */\n      {\n        \"id\": \"OsNY9YvN\",\n        \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"url\\\",\\\"target\\\"],[[30,0,[\\\"url\\\"]],\\\"_blank\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/redirect-to-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('div');\n      assert.ok(this.redirectStub.calledOnceWithExactly(this.url, '_blank'));\n      _sinon.default.restore();\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if the url argument is missing', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [helper][OSS::redirect-to] url argument is mandatory.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <div {{on \"click\" (redirect-to)}}>link</div>\n        */\n        {\n          \"id\": \"7PNhjOkz\",\n          \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,null]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/redirect-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if the target is not a valid one', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [helper][OSS::redirect-to] the target argument must be a valid one: https://www.w3schools.com/tags/att_a_target.asp.');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <div {{on \"click\" (redirect-to url=this.url target=\"_foo\")}}>link</div>\n        */\n        {\n          \"id\": \"/wWML6ry\",\n          \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"url\\\",\\\"target\\\"],[[30,0,[\\\"url\\\"]],\\\"_foo\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/redirect-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/helpers/stop-propagation-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-cli-htmlbars\",0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Helper | stop-propagation', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.nativeStopPropagation = Event.prototype.stopPropagation;\n    });\n    hooks.afterEach(function () {\n      Event.prototype.stopPropagation = this.nativeStopPropagation;\n    });\n    (0, _qunit.test)('it renders', async function (assert) {\n      Event.prototype.stopPropagation = () => {\n        assert.ok(true);\n      };\n      this.onClick = (arg, event) => {\n        assert.equal(arg, 'foo');\n        assert.ok(event instanceof MouseEvent);\n      };\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button {{on \"click\" (stop-propagation (fn this.onClick \"foo\"))}}>stop propagation</button>\n      */\n      {\n        \"id\": \"1jf6xKDi\",\n        \"block\": \"[[[11,\\\"button\\\"],[4,[38,0],[\\\"click\\\",[28,[37,1],[[28,[37,2],[[30,0,[\\\"onClick\\\"]],\\\"foo\\\"],null]],null]],null],[12],[1,\\\"stop propagation\\\"],[13]],[],false,[\\\"on\\\",\\\"stop-propagation\\\",\\\"fn\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/stop-propagation-test.ts\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button');\n      assert.expect(3);\n    });\n  });\n});","define(\"dummy/tests/integration/helpers/transition-to-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Helper | transition-to', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      const router = this.owner.lookup('service:router');\n      this.transitionToStub = _sinon.default.stub(router, 'transitionTo');\n    });\n    (0, _qunit.module)('only a route has been passed', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route only', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to route=\"foo\")}}>link</a>\n        */\n        {\n          \"id\": \"nhJ6h//e\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\"],[\\\"foo\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('a');\n        assert.ok(this.transitionToStub.calledWithExactly('foo', {\n          queryParams: {}\n        }));\n      });\n    });\n    (0, _qunit.module)('a model has been passed to the transition', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route only', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to route=\"foo\" model=\"1\")}}>link</a>\n        */\n        {\n          \"id\": \"1UVEA5Ni\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"model\\\"],[\\\"foo\\\",\\\"1\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('a');\n        assert.ok(this.transitionToStub.calledWithExactly('foo', '1', {\n          queryParams: {}\n        }));\n      });\n    });\n    (0, _qunit.module)('multiple models have been passed to the transition', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route only', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to route=\"foo\" models=(array 'fizz' 'buzz'))}}>link</a>\n        */\n        {\n          \"id\": \"Zlyj2tGf\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"models\\\"],[\\\"foo\\\",[28,[37,2],[\\\"fizz\\\",\\\"buzz\\\"],null]]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\",\\\"array\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('a');\n        assert.ok(this.transitionToStub.calledWithExactly('foo', 'fizz', 'buzz', {\n          queryParams: {}\n        }));\n      });\n    });\n    (0, _qunit.module)('with queryParams', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route and queryParams', async function (assert) {\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to route=\"foo\" queryParams=(hash myParam=\"bruh\"))}}>link</a>\n        */\n        {\n          \"id\": \"y1ty57b9\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"queryParams\\\"],[\\\"foo\\\",[28,[37,2],null,[[\\\"myParam\\\"],[\\\"bruh\\\"]]]]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\",\\\"hash\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)('a');\n        assert.ok(this.transitionToStub.calledWithExactly('foo', {\n          queryParams: {\n            myParam: 'bruh'\n          }\n        }));\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if the route argument is missing', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [helper][OSS::transition-to] route argument is mandatory');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to)}}>link</a>\n        */\n        {\n          \"id\": \"c0aaXEtO\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,null]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if both models and model arguments are passed', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [helper][OSS::transition-to] only one of model or models argument must be provided');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to route=\"foo\" models=(array '1' '2') model='3')}}>link</a>\n        */\n        {\n          \"id\": \"oliuYXR+\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"models\\\",\\\"model\\\"],[\\\"foo\\\",[28,[37,2],[\\\"1\\\",\\\"2\\\"],null],\\\"3\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\",\\\"array\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n      (0, _qunit.test)('it throws an error if queryParams argument is passed but is not an object', async function (assert) {\n        (0, _testHelpers.setupOnerror)(err => {\n          assert.equal(err.message, 'Assertion Failed: [helper][OSS::transition-to] queryParams argument must be an object');\n        });\n        await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <a {{on \"click\" (transition-to route=\"foo\" queryParams='string')}}>link</a>\n        */\n        {\n          \"id\": \"4j9GJYRp\",\n          \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"queryParams\\\"],[\\\"foo\\\",\\\"string\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n          \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/helpers/transition-to-test.ts\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/modifiers/attach-element-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Modifiers | modifiers/attach-element', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('the attached element has no floating-related style when not using the modifier', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"reference-element\">\n              I am the reference!\n            </div>\n      \n            <div class=\"attached-element\">\n              I am floaaaaaating !\n            </div>\n          \n      */\n      {\n        \"id\": \"zdaQtUa4\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"reference-element\\\"],[12],[1,\\\"\\\\n        I am the reference!\\\\n      \\\"],[13],[1,\\\"\\\\n\\\\n      \\\"],[10,0],[14,0,\\\"attached-element\\\"],[12],[1,\\\"\\\\n        I am floaaaaaating !\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/modifiers/attach-element-test.ts\",\n        \"isStrictMode\": false\n      }));\n      const attachedElement = (0, _testHelpers.find)('.attached-element');\n      const attachedElementStyles = Object.fromEntries(attachedElement.attributeStyleMap.entries());\n      assert.deepEqual(Object.keys(attachedElementStyles), []);\n    });\n    (0, _qunit.test)('attached element is properly rendered w/ the right floating-ui positioning style', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div class=\"reference-element\">\n              I am the reference!\n            </div>\n      \n            <div class=\"attached-element\" {{attach-element to=\".reference-element\"}}>\n              I am floaaaaaating !\n            </div>\n          \n      */\n      {\n        \"id\": \"CIt7cH5I\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"reference-element\\\"],[12],[1,\\\"\\\\n        I am the reference!\\\\n      \\\"],[13],[1,\\\"\\\\n\\\\n      \\\"],[11,0],[24,0,\\\"attached-element\\\"],[4,[38,0],null,[[\\\"to\\\"],[\\\".reference-element\\\"]]],[12],[1,\\\"\\\\n        I am floaaaaaating !\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"attach-element\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/modifiers/attach-element-test.ts\",\n        \"isStrictMode\": false\n      }));\n      const attachedElement = (0, _testHelpers.find)('.attached-element');\n      const attachedElementStyles = Object.fromEntries(attachedElement.attributeStyleMap.entries());\n      assert.deepEqual(Object.keys(attachedElementStyles), ['max-width', 'min-width', 'width', 'left', 'top', 'visibility']);\n    });\n  });\n});","define(\"dummy/tests/integration/modifiers/register-form-field-test\", [\"@ember/test-helpers\", \"ember-qunit\", \"qunit\", \"sinon\", \"@ember/template-factory\"], function (_testHelpers, _emberQunit, _qunit, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\",0,\"ember-qunit\",0,\"qunit\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Modifiers | modifiers/register-form-field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.formManager = this.owner.lookup('service:form-manager');\n      this.formInstance = this.formManager.getInstance('test-form');\n      this.validator = _sinon.default.stub();\n      this.validateOnBlur = true;\n    });\n    (0, _qunit.test)('a data-form-field-id attribute is added to the element', async function (assert) {\n      await renderComponent();\n      assert.dom('.oss-input-container').hasAttribute('data-form-field-id', 'name');\n    });\n    (0, _qunit.module)('validateOnBlur behaviour', function () {\n      (0, _qunit.test)('when validateOnBlur=true the validator is called when the blur event is triggered', async function (assert) {\n        await renderComponent();\n        await (0, _testHelpers.focus)('input');\n        await (0, _testHelpers.blur)('input');\n        assert.ok(this.validator.calledOnce);\n      });\n      (0, _qunit.test)('when validateOnBlur=false the validator is not called when the blur event is triggered', async function (assert) {\n        this.validateOnBlur = false;\n        await renderComponent();\n        await (0, _testHelpers.focus)('input');\n        await (0, _testHelpers.blur)('input');\n        assert.ok(this.validator.notCalled);\n      });\n      (0, _qunit.test)('when validateOnBlur arg is not provided the validator is called when the blur event is triggered', async function (assert) {\n        this.validateOnBlur = undefined;\n        await renderComponent();\n        await (0, _testHelpers.focus)('input');\n        await (0, _testHelpers.blur)('input');\n        assert.ok(this.validator.calledOnce);\n      });\n    });\n    async function renderComponent() {\n      return await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <OSS::InputContainer @value=\"foo\" {{register-form-field form=this.formInstance.id fieldId=\"name\" validator=this.validator validateOnBlur=this.validateOnBlur}} />\n            \n      */\n      {\n        \"id\": \"UsUNNM91\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[4,[38,1],null,[[\\\"form\\\",\\\"fieldId\\\",\\\"validator\\\",\\\"validateOnBlur\\\"],[[30,0,[\\\"formInstance\\\",\\\"id\\\"]],\\\"name\\\",[30,0,[\\\"validator\\\"]],[30,0,[\\\"validateOnBlur\\\"]]]]]],[[\\\"@value\\\"],[\\\"foo\\\"]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/input-container\\\",\\\"register-form-field\\\"]]\",\n        \"moduleName\": \"/home/runner/work/oss-components/oss-components/dummy/tests/integration/modifiers/register-form-field-test.ts\",\n        \"isStrictMode\": false\n      }));\n    }\n  });\n});","define(\"dummy/tests/test-helper\", [\"dummy/app\", \"dummy/config/environment\", \"@ember/test-helpers\", \"qunit\", \"qunit-dom\", \"ember-qunit\", \"@upfluence/oss-components/test-support/register-assertions\", \"ember-cli-code-coverage/test-support\"], function (_app, _environment, _testHelpers, QUnit, _qunitDom, _emberQunit, _registerAssertions, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"dummy/app\",0,\"dummy/config/environment\",0,\"@ember/test-helpers\",0,\"qunit\",0,\"qunit-dom\",0,\"ember-qunit\",0,\"qunit-dom\",0,\"@upfluence/oss-components/test-support/register-assertions\",0,\"ember-cli-code-coverage/test-support\"eaimeta@70e063a35619d71f\n  // @ts-nocheck\n  (0, _registerAssertions.default)(QUnit.assert);\n  (0, _qunitDom.setup)(QUnit.assert);\n  QUnit.done(async function () {\n    (0, _testSupport.forceModulesToBeLoaded)((_, moduleName) => {\n      return !moduleName.endsWith('.stories');\n    });\n    await (0, _testSupport.sendCoverage)();\n  });\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"dummy/tests/unit/services/base-uploader-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Service | base-uploader', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    hooks.beforeEach(function () {\n      this.service = this.owner.lookup('service:base-uploader');\n    });\n    (0, _qunit.test)('it exists', function (assert) {\n      assert.ok(this.service);\n    });\n    (0, _qunit.module)('#validate method', function (hooks) {\n      hooks.beforeEach(function () {\n        this.request = {\n          file: new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], '1px.png', {\n            type: 'image/png'\n          }),\n          privacy: 'private',\n          scope: 'anonymous'\n        };\n      });\n      (0, _qunit.test)('it passes if no validation is provided', function (assert) {\n        this.validationRules = [];\n        assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n          passes: true,\n          validations: []\n        });\n      });\n      (0, _qunit.test)('it filters out rules with empty values and passes', function (assert) {\n        this.validationRules = [{\n          type: 'filetype',\n          value: []\n        }, {\n          type: 'filesize',\n          value: null\n        }];\n        assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n          passes: true,\n          validations: []\n        });\n      });\n      (0, _qunit.module)('FileType validator', function () {\n        (0, _qunit.test)(\"it does not pass if the file's type is not one of the allowed ones\", function (assert) {\n          this.validationRules = [{\n            type: 'filetype',\n            value: ['pdf']\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: false,\n            validations: [{\n              passes: false,\n              rule: {\n                type: 'filetype',\n                value: ['pdf']\n              }\n            }]\n          });\n        });\n        (0, _qunit.test)(\"it passes if the file's type is one of the allowed ones\", function (assert) {\n          this.validationRules = [{\n            type: 'filetype',\n            value: ['png']\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: true,\n            validations: [{\n              passes: true,\n              rule: {\n                type: 'filetype',\n                value: ['png']\n              }\n            }]\n          });\n        });\n        (0, _qunit.test)(\"it passes if the file's type matches one of a templated filetype\", function (assert) {\n          this.validationRules = [{\n            type: 'filetype',\n            value: ['image']\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: true,\n            validations: [{\n              passes: true,\n              rule: {\n                type: 'filetype',\n                value: ['png', 'jpg', 'jpeg']\n              }\n            }]\n          });\n        });\n      });\n      (0, _qunit.module)('FileSize validator', function () {\n        (0, _qunit.test)('it does not pass if the file is heavier than the maximum allowed', function (assert) {\n          this.validationRules = [{\n            type: 'filesize',\n            value: '1B'\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: false,\n            validations: [{\n              passes: false,\n              rule: {\n                type: 'filesize',\n                value: '1B'\n              }\n            }]\n          });\n        });\n        (0, _qunit.test)('it passes if the file is heavier than the maximum allowed', function (assert) {\n          this.validationRules = [{\n            type: 'filesize',\n            value: '10MB'\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: true,\n            validations: [{\n              passes: true,\n              rule: {\n                type: 'filesize',\n                value: '10MB'\n              }\n            }]\n          });\n        });\n      });\n    });\n    (0, _qunit.test)('calling the `url` getter throws throws a NotImplemented error', function (assert) {\n      try {\n        this.service.url;\n      } catch (err) {\n        assert.equal(err.message, '[@upfluence/oss-components::uploader] NotImpemented: Please extend this service and inherit this method.');\n      }\n      assert.expect(1);\n    });\n    (0, _qunit.test)('calling the upload method throws a NotImplemented error', function (assert) {\n      try {\n        this.service.upload({\n          file: new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], '1px.png', {\n            type: 'image/png'\n          }),\n          privacy: 'private',\n          scope: 'anonymous'\n        }, []);\n      } catch (err) {\n        assert.equal(err.message, '[@upfluence/oss-components::uploader] NotImpemented: Please extend this service and inherit this method.');\n      }\n    });\n  });\n});","define(\"dummy/tests/unit/services/form-manager-test\", [\"qunit\", \"ember-qunit\", \"sinon\"], function (_qunit, _emberQunit, _sinon) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"sinon\"eaimeta@70e063a35619d71f\n  const FAKE_UUID = '1234-5678-9101-1121-3141-';\n  (0, _qunit.module)('Unit | Service | form-manager', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    hooks.beforeEach(function () {\n      this.randomUUIDStub = _sinon.default.stub(window.crypto, 'randomUUID').returns(FAKE_UUID);\n      this.service = this.owner.lookup('service:form-manager');\n    });\n    hooks.afterEach(function () {\n      this.randomUUIDStub.restore();\n    });\n    (0, _qunit.module)('#generateId', function () {\n      (0, _qunit.test)('it generates a unique ID', function (assert) {\n        assert.equal(this.service.generateId(), FAKE_UUID);\n      });\n    });\n    (0, _qunit.module)('#getInstance', function () {\n      (0, _qunit.test)('it returns a form instance', function (assert) {\n        const instance = this.service.getInstance('test');\n        assert.equal(instance.id, 'test');\n        ['validateForm', 'validateField', 'getErrors', 'clearErrors'].forEach(method => {\n          assert.equal(typeof instance[method], 'function');\n        });\n      });\n    });\n    (0, _qunit.module)('#registerField', function () {\n      (0, _qunit.test)('it properly registers a field with a validator', function (assert) {\n        const id = this.service.generateId();\n        const field = 'testField';\n        const validator = _sinon.default.stub();\n        this.service.registerField(id, field, validator);\n        assert.equal(this.service.formValidators[id][field], validator);\n      });\n    });\n    (0, _qunit.module)('#unregisterField', function () {\n      (0, _qunit.test)('it properly unregisters a field', function (assert) {\n        this.service.registerField('test', 'testField', _sinon.default.stub());\n        this.service.unregisterField('test', 'testField');\n        assert.equal(this.service.formValidators['test']['testField'], undefined);\n      });\n    });\n    (0, _qunit.module)('Form instance methods', function (hooks) {\n      hooks.beforeEach(function () {\n        this.formInstance = this.service.getInstance('test');\n      });\n      (0, _qunit.module)('#validateField', function () {\n        (0, _qunit.test)('the feedbacks are properly populated if any', function (assert) {\n          const field = 'testField';\n          const validator = _sinon.default.stub().returns({\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          });\n          this.service.registerField('test', field, validator);\n          assert.equal(this.formInstance.validateField(field), false);\n          assert.deepEqual(this.service.formFeedbacks['test'][field], {\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          });\n        });\n        (0, _qunit.test)('it returns true if there is no error feedback', function (assert) {\n          const field = 'testField';\n          const validator = _sinon.default.stub().returns({\n            kind: 'be_cautious',\n            message: {\n              type: 'warning',\n              value: 'warning'\n            }\n          });\n          this.service.registerField('test', field, validator);\n          assert.equal(this.formInstance.validateField(field), true);\n          assert.deepEqual(this.service.formFeedbacks['test'][field], {\n            kind: 'be_cautious',\n            message: {\n              type: 'warning',\n              value: 'warning'\n            }\n          });\n        });\n        (0, _qunit.test)('no feedback is populated if there is none', function (assert) {\n          const field = 'testField';\n          const validator = _sinon.default.stub().returns(undefined);\n          this.service.registerField('test', field, validator);\n          assert.equal(this.formInstance.validateField(field), true);\n          assert.equal(this.service.formFeedbacks['test'], undefined);\n        });\n      });\n      (0, _qunit.module)('#validateForm', function () {\n        (0, _qunit.test)('the feedbacks are properly populated if any', function (assert) {\n          const field = 'testField';\n          const validator = _sinon.default.stub().returns({\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          });\n          this.service.registerField('test', field, validator);\n          assert.equal(this.formInstance.validateForm(), false);\n          assert.deepEqual(this.service.formFeedbacks['test'][field], {\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          });\n        });\n        (0, _qunit.test)('it returns true if there is no error feedback', function (assert) {\n          const field = 'testField';\n          const validator = _sinon.default.stub().returns({\n            kind: 'be_cautious',\n            message: {\n              type: 'warning',\n              value: 'warning'\n            }\n          });\n          this.service.registerField('test', field, validator);\n          assert.equal(this.formInstance.validateForm(), true);\n          assert.deepEqual(this.service.formFeedbacks['test'][field], {\n            kind: 'be_cautious',\n            message: {\n              type: 'warning',\n              value: 'warning'\n            }\n          });\n        });\n        (0, _qunit.test)('no feedback is populated if there is none', function (assert) {\n          const field = 'testField';\n          const validator = _sinon.default.stub().returns(undefined);\n          this.service.registerField('test', field, validator);\n          assert.equal(this.formInstance.validateForm(), true);\n          assert.equal(this.service.formFeedbacks['test'], undefined);\n        });\n      });\n      (0, _qunit.module)('#getErrors', function () {\n        (0, _qunit.test)('it returns all error feedbacks if any', function (assert) {\n          this.service.registerField('test', 'testField', _sinon.default.stub().returns({\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          }));\n          this.service.registerField('test', 'testField2', _sinon.default.stub().returns({\n            kind: 'be_cautious',\n            message: {\n              type: 'warning',\n              value: 'warning'\n            }\n          }));\n          this.formInstance.validateForm();\n          assert.deepEqual(this.formInstance.getErrors(), {\n            testField: {\n              kind: 'blank',\n              message: {\n                type: 'error',\n                value: 'Error'\n              }\n            }\n          });\n        });\n      });\n      (0, _qunit.module)('#clearErrors', function (hooks) {\n        hooks.beforeEach(function () {\n          this.service.registerField('test', 'testField', _sinon.default.stub().returns({\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          }));\n          this.formInstance.validateForm();\n        });\n        (0, _qunit.test)('it clears the error feedbacks', function (assert) {\n          assert.deepEqual(this.formInstance.getErrors(), {\n            testField: {\n              kind: 'blank',\n              message: {\n                type: 'error',\n                value: 'Error'\n              }\n            }\n          });\n          this.formInstance.clearErrors('testField');\n          assert.deepEqual(this.formInstance.getErrors(), {});\n        });\n      });\n      (0, _qunit.module)('#setFieldFeedback', function () {\n        (0, _qunit.test)('it sets the feedback for a field', function (assert) {\n          const field = 'testField';\n          const feedback = {\n            kind: 'blank',\n            message: {\n              type: 'error',\n              value: 'Error'\n            }\n          };\n          this.formInstance.setFieldFeedback(field, feedback);\n          assert.deepEqual(this.service.formFeedbacks['test'][field], feedback);\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/unit/services/toast-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/services/toast\"], function (_qunit, _emberQunit, _testHelpers, _toast) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@upfluence/oss-components/services/toast\"eaimeta@70e063a35619d71f\n  const TOAST_TYPES = ['info', 'success', 'warning', 'error'];\n  (0, _qunit.module)('Unit | Service | toast', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    hooks.beforeEach(function () {\n      this.service = this.owner.lookup('service:toast');\n    });\n    (0, _qunit.test)('it exists', function (assert) {\n      assert.ok(this.service);\n      assert.ok(this.service instanceof _toast.default);\n      assert.ok(typeof this.service.info === 'function');\n      assert.ok(typeof this.service.success === 'function');\n      assert.ok(typeof this.service.warning === 'function');\n      assert.ok(typeof this.service.error === 'function');\n    });\n    (0, _qunit.module)('public methods', function () {\n      TOAST_TYPES.forEach(type => {\n        (0, _qunit.test)(`${type}`, async function (assert) {\n          const toast = this.service[type](`Message of ${type}`, `Title ${type}`, {\n            timeout: 100\n          });\n          assert.dom(toast).exists();\n          assert.dom(toast).hasClass(`toast--${type}`);\n          assert.dom(toast).hasClass(`toast--visible`);\n          assert.dom(toast.querySelector('.subtitle')).hasText(`Message of ${type}`);\n          assert.dom(toast.querySelector('.title')).hasText(`Title ${type}`);\n        });\n      });\n    });\n    (0, _qunit.test)('it should close the toast when clicking on the button', async function (assert) {\n      const toast = this.service.error('Message', 'Title', {\n        timeout: 100\n      });\n      const buttonElement = toast.querySelector('button');\n      assert.dom(buttonElement).exists({\n        count: 1\n      });\n      await (0, _testHelpers.click)(buttonElement);\n      const animation = toast.getAnimations().filter(animation => animation.id === 'destroy')[0];\n      await animation.finished;\n      assert.true(toast.parentElement === null);\n    });\n    (0, _qunit.test)('the onclick function is called when the toast is clicked', async function (assert) {\n      const toast = this.service.error('Message', 'Title', {\n        timeout: 100,\n        onclick: event => {\n          assert.equal(event.type, 'click');\n        }\n      });\n      await (0, _testHelpers.click)(toast);\n      assert.expect(1);\n    });\n    (0, _qunit.module)('badge options', function () {\n      (0, _qunit.test)('it should display icon', async function (assert) {\n        const toast = this.service.error('Message', 'Title', {\n          timeout: 100,\n          badge: {\n            icon: 'fab fa-jedi-order'\n          }\n        });\n        const badge = toast.querySelector('.upf-badge i');\n        assert.dom(badge).hasClass('fab');\n        assert.dom(badge).hasClass('fa-jedi-order');\n      });\n      (0, _qunit.test)('it should display img', async function (assert) {\n        const url = '/assets/images/upfluence-white-logo.svg';\n        const toast = this.service.error('Message', 'Title', {\n          timeout: 100,\n          badge: {\n            image: url\n          }\n        });\n        const badge = toast.querySelector('.upf-badge img');\n        assert.dom(badge).hasAttribute('src', url);\n      });\n      (0, _qunit.test)('it should display text', async function (assert) {\n        const toast = this.service.error('Message', 'Title', {\n          timeout: 100,\n          badge: {\n            text: '1'\n          }\n        });\n        const badge = toast.querySelector('.upf-badge span');\n        assert.dom(badge).hasText('1');\n      });\n    });\n  });\n});","define(\"dummy/tests/unit/utils/upf-local-storage-test\", [\"dummy/utils/upf-local-storage\", \"qunit\"], function (_upfLocalStorage, _qunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"dummy/utils/upf-local-storage\",0,\"qunit\"eaimeta@70e063a35619d71f\n  const TEST_KEY = 'testKey';\n  const DEFAULT_PREFIX = '_upf.';\n  const CUSTOM_PREFIX = 'workflow';\n  const TEST_VALUE = 'testValue';\n  const TEST_OBJECT = {\n    attr: TEST_VALUE\n  };\n  const TEST_OBJECT_UPDATE = {\n    attr2: TEST_VALUE\n  };\n  const ERROR_TYPE_STRING = '[value] parameter MUST be of type :string';\n  const ERROR_TYPE_OBJECT = '[object] parameter MUST be of type :object';\n  (0, _qunit.module)('Unit | Utility | UPFLocalStorage', function (hooks) {\n    hooks.beforeEach(function () {\n      localStorage.clear();\n    });\n    (0, _qunit.test)('it can be instanciated', function (assert) {\n      let upfStorage = new _upfLocalStorage.default();\n      assert.ok(upfStorage);\n    });\n    (0, _qunit.module)('Prefix', function () {\n      (0, _qunit.test)('Saving content without specifying a prefix will use the default \".upf_\" prefix', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.equal(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('Setting a custom prefix on the Ctor will save content with the set prefix', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.equal(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: saveObject', function () {\n      (0, _qunit.test)('saveObject() sets the default prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        const localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT, localStorageParsedObject);\n      });\n      (0, _qunit.test)('saveObject() sets the custom prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        const localStorageParsedObject = JSON.parse(localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT, localStorageParsedObject);\n      });\n      (0, _qunit.test)('saveObject() throws an error if the object parameter is not an object', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        assert.throws(() => {\n          upfStorage.saveObject(TEST_KEY, TEST_VALUE);\n        }, ERROR_TYPE_OBJECT);\n      });\n      (0, _qunit.test)('saveObject() saves an object in the localStorage as a stringified JSON', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        const localStorageStringifiedObject = localStorage.getItem(DEFAULT_PREFIX + TEST_KEY);\n        assert.deepEqual(JSON.stringify(TEST_OBJECT), localStorageStringifiedObject);\n      });\n    });\n    (0, _qunit.module)('Method: updateObject', function () {\n      (0, _qunit.test)('updateObject() sets the default prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        const localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT_UPDATE, localStorageParsedObject);\n      });\n      (0, _qunit.test)('updateObject() sets the custom prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        const localStorageParsedObject = JSON.parse(localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT_UPDATE, localStorageParsedObject);\n      });\n      (0, _qunit.test)('updateObject() throws an error if the object parameter is not an object', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        assert.throws(() => {\n          upfStorage.updateObject(TEST_KEY, TEST_VALUE);\n        }, ERROR_TYPE_OBJECT);\n      });\n      (0, _qunit.test)('updateObject() adds content to the existing object', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        const localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual({\n          ...TEST_OBJECT,\n          ...TEST_OBJECT_UPDATE\n        }, localStorageParsedObject);\n      });\n      (0, _qunit.test)('updateObject() creates the Object if there is no previous value', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        const localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT_UPDATE, localStorageParsedObject);\n      });\n    });\n    (0, _qunit.module)('Method: getObject', function () {\n      (0, _qunit.test)('getObject() returns an empty object if the key is not found', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        assert.deepEqual({}, upfStorage.getObject(TEST_KEY));\n      });\n      (0, _qunit.test)('getObject() returns an object with the proper contents', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        assert.deepEqual(TEST_OBJECT, upfStorage.getObject(TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: saveItem', function () {\n      (0, _qunit.test)('saveItem() throws an error if the object parameter is not a string', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        assert.throws(() => {\n          upfStorage.saveItem(TEST_KEY, 1337);\n        }, ERROR_TYPE_STRING);\n      });\n      (0, _qunit.test)('saveItem() sets the default prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('saveItem() sets the custom prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('saveItem() saves the proper value in the localStorage', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: updateItem', function () {\n      (0, _qunit.test)('updateItem() throws an error if the object parameter is not a string', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        assert.throws(() => {\n          upfStorage.updateItem(TEST_KEY, 1337);\n        }, ERROR_TYPE_STRING);\n      });\n      (0, _qunit.test)('updateItem() sets the default prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('updateItem() sets the custom prefix key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('updateItem() overwrites any previous key and saves the value', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE + TEST_VALUE);\n        assert.deepEqual(TEST_VALUE + TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: getItem', function () {\n      (0, _qunit.test)('getItem() returns null if no key is found', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        assert.equal(null, upfStorage.getItem(TEST_KEY));\n      });\n      (0, _qunit.test)('getItem() returns the proper value if the key is found', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.equal(TEST_VALUE, upfStorage.getItem(TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: delete', function () {\n      (0, _qunit.test)('delete() uses the default prefix when removing a key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        upfStorage.delete(TEST_KEY);\n        assert.equal(null, upfStorage.getItem(TEST_KEY));\n      });\n      (0, _qunit.test)('delete() uses the custom prefix when removing a key', function (assert) {\n        let upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        upfStorage.delete(TEST_KEY);\n        assert.equal(null, upfStorage.getItem(TEST_KEY));\n      });\n    });\n  });\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnrrjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhzjjratvnznxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjpnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrgvVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChrahPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrxtvhhvhppGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdplNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}