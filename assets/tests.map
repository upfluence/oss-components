{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/integration/components/modifiers/enable-tooltip-test.js","dummy/tests/integration/components/modifiers/on-bottom-reached-test.js","dummy/tests/integration/components/modifiers/scroll-shadow-test.js","dummy/tests/integration/components/o-s-s/access-panel-test.js","dummy/tests/integration/components/o-s-s/alert-test.js","dummy/tests/integration/components/o-s-s/array-input-test.js","dummy/tests/integration/components/o-s-s/attribute/base-test.js","dummy/tests/integration/components/o-s-s/attribute/country-test.js","dummy/tests/integration/components/o-s-s/attribute/phone-number-test.js","dummy/tests/integration/components/o-s-s/attribute/rating-test.js","dummy/tests/integration/components/o-s-s/attribute/removable-text-test.js","dummy/tests/integration/components/o-s-s/attribute/revealable-email-test.js","dummy/tests/integration/components/o-s-s/attribute/tag-array-test.js","dummy/tests/integration/components/o-s-s/attribute/text-test.js","dummy/tests/integration/components/o-s-s/attributes-panel-test.js","dummy/tests/integration/components/o-s-s/avatar-test.js","dummy/tests/integration/components/o-s-s/badge-test.js","dummy/tests/integration/components/o-s-s/banner-test.js","dummy/tests/integration/components/o-s-s/button-dropdown-test.js","dummy/tests/integration/components/o-s-s/button-test.js","dummy/tests/integration/components/o-s-s/checkbox-test.js","dummy/tests/integration/components/o-s-s/chip-test.js","dummy/tests/integration/components/o-s-s/code-block-test.js","dummy/tests/integration/components/o-s-s/content-panel-test.js","dummy/tests/integration/components/o-s-s/copy-test.js","dummy/tests/integration/components/o-s-s/country-selector-test.js","dummy/tests/integration/components/o-s-s/currency-input-test.js","dummy/tests/integration/components/o-s-s/email-input-test.js","dummy/tests/integration/components/o-s-s/icon-test.js","dummy/tests/integration/components/o-s-s/illustration-test.js","dummy/tests/integration/components/o-s-s/infinite-select-test.js","dummy/tests/integration/components/o-s-s/input-container-test.js","dummy/tests/integration/components/o-s-s/input-group-test.js","dummy/tests/integration/components/o-s-s/layout/sidebar-test.js","dummy/tests/integration/components/o-s-s/layout/sidebar/item-test.js","dummy/tests/integration/components/o-s-s/link-test.js","dummy/tests/integration/components/o-s-s/modal-dialog-test.js","dummy/tests/integration/components/o-s-s/modal-test.js","dummy/tests/integration/components/o-s-s/nav-tab-test.js","dummy/tests/integration/components/o-s-s/number-input-test.js","dummy/tests/integration/components/o-s-s/panel-row-test.js","dummy/tests/integration/components/o-s-s/panel-test.js","dummy/tests/integration/components/o-s-s/password-input-test.js","dummy/tests/integration/components/o-s-s/phone-number-input-test.js","dummy/tests/integration/components/o-s-s/power-select-test.js","dummy/tests/integration/components/o-s-s/progress-bar-test.js","dummy/tests/integration/components/o-s-s/radio-button-test.js","dummy/tests/integration/components/o-s-s/select-test.js","dummy/tests/integration/components/o-s-s/skeleton-test.js","dummy/tests/integration/components/o-s-s/social-post-badge-test.js","dummy/tests/integration/components/o-s-s/split-modal-test.js","dummy/tests/integration/components/o-s-s/star-rating-test.js","dummy/tests/integration/components/o-s-s/tag-test.js","dummy/tests/integration/components/o-s-s/text-area-test.js","dummy/tests/integration/components/o-s-s/togglable-section-test.js","dummy/tests/integration/components/o-s-s/toggle-buttons-test.js","dummy/tests/integration/components/o-s-s/toggle-switch-test.js","dummy/tests/integration/components/o-s-s/upload-area-test.js","dummy/tests/integration/components/o-s-s/upload-item-test.js","dummy/tests/integration/components/o-s-s/url-input-test.js","dummy/tests/integration/helpers/redirect-to-test.js","dummy/tests/integration/helpers/stop-propagation-test.js","dummy/tests/integration/helpers/transition-to-test.js","dummy/tests/test-helper.js","dummy/tests/unit/services/base-uploader-test.js","dummy/tests/unit/services/toast-test.js","dummy/tests/unit/utils/upf-local-storage-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dummy/tests/integration/components/modifiers/enable-tooltip-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var PLACEMENTS = [undefined, 'top', 'bottom', 'left', 'right'];\n  (0, _qunit.module)('Integration | Component | modifiers/enable-tooltip', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.title = 'Title';\n    });\n\n    function renderTooltip() {\n      return _renderTooltip.apply(this, arguments);\n    }\n\n    function _renderTooltip() {\n      _renderTooltip = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <div class=\"test-container\" style=\"height: 20px; width: 40px\"\n                           {{enable-tooltip title=this.title subtitle=this.subtitle placement=this.placement icon=this.icon trigger=this.trigger html=this.html}}>\n                      </div>\n                    \n                */\n                {\n                  \"id\": \"JKPpd0PX\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[11,0],[24,0,\\\"test-container\\\"],[24,5,\\\"height: 20px; width: 40px\\\"],[4,[38,0],null,[[\\\"title\\\",\\\"subtitle\\\",\\\"placement\\\",\\\"icon\\\",\\\"trigger\\\",\\\"html\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"placement\\\"]],[30,0,[\\\"icon\\\"]],[30,0,[\\\"trigger\\\"]],[30,0,[\\\"html\\\"]]]]],[12],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"enable-tooltip\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n      return _renderTooltip.apply(this, arguments);\n    }\n\n    (0, _qunit.test)(\"it doesn't render when the title is empty\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.title = '';\n                _context.next = 3;\n                return renderTooltip();\n\n              case 3:\n                _context.next = 5;\n                return assert.tooltip('.test-container').doesNotExist();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the correct title', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return renderTooltip();\n\n              case 2:\n                _context2.next = 4;\n                return assert.tooltip('.test-container').hasTitle(this.title);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('icon attribute', function () {\n      (0, _qunit.test)('it renders the correct icon', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.icon = 'far fa-wine-glass-alt';\n                  _context3.next = 3;\n                  return renderTooltip();\n\n                case 3:\n                  _context3.next = 5;\n                  return assert.tooltip('.test-container').hasIcon(this.icon);\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"it doesn't render the icon\", /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return renderTooltip();\n\n                case 2:\n                  _context4.next = 4;\n                  return assert.tooltip('.test-container').doesNotHaveIcon();\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('subtitle attribute', function () {\n      (0, _qunit.test)('it renders the correct subtitle', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.subtitle = 'subtitle';\n                  _context5.next = 3;\n                  return renderTooltip();\n\n                case 3:\n                  _context5.next = 5;\n                  return assert.tooltip('.test-container').hasSubtitle(this.subtitle);\n\n                case 5:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"it doesn't render the subtitle\", /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return renderTooltip();\n\n                case 2:\n                  _context6.next = 4;\n                  return assert.tooltip('.test-container').doesNotHaveSubtitle();\n\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('placement attribute', function () {\n      PLACEMENTS.forEach(function (placement) {\n        (0, _qunit.test)(\"it renders the correct placement \".concat(placement), /*#__PURE__*/function () {\n          var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    this.placement = placement;\n                    _context7.next = 3;\n                    return renderTooltip();\n\n                  case 3:\n                    _context7.next = 5;\n                    return assert.tooltip('.test-container').hasPlacement(placement || 'bottom');\n\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7, this);\n          }));\n\n          return function (_x7) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('trigger attribute', function () {\n      (0, _qunit.test)('it renders when hovering and focusing the element with undefined trigger', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return renderTooltip();\n\n                case 2:\n                  _context8.next = 4;\n                  return assert.tooltip('.test-container').exists();\n\n                case 4:\n                  _context8.next = 6;\n                  return assert.tooltip('.test-container').exists('focusin');\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders when hovering the element', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  this.trigger = 'hover';\n                  _context9.next = 3;\n                  return renderTooltip();\n\n                case 3:\n                  _context9.next = 5;\n                  return assert.tooltip('.test-container').exists();\n\n                case 5:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders when focusing the element', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.trigger = 'focus';\n                  _context10.next = 3;\n                  return renderTooltip();\n\n                case 3:\n                  _context10.next = 5;\n                  return assert.tooltip('.test-container').exists('focusin');\n\n                case 5:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('html attribute', function () {\n      (0, _qunit.test)(\"it doesn't render the html safe by default\", /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return renderTooltip();\n\n                case 2:\n                  _context11.next = 4;\n                  return assert.tooltip('.test-container').isNotHtmlSafe();\n\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders the html safe when the value is true', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  this.html = true;\n                  _context12.next = 3;\n                  return renderTooltip();\n\n                case 3:\n                  _context12.next = 5;\n                  return assert.tooltip('.test-container').isHtmlSafe();\n\n                case 5:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, this);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"it doesn't render the html safe when the value is false\", /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  this.html = false;\n                  _context13.next = 3;\n                  return renderTooltip();\n\n                case 3:\n                  _context13.next = 5;\n                  return assert.tooltip('.test-container').isNotHtmlSafe();\n\n                case 5:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13, this);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/modifiers/on-bottom-reached-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | modifiers/on-bottom-reached', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it triggers the callback when the bottom of the div is reached', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.bottomReached = function () {\n                  assert.ok(true, 'Entered the bottom reached callback');\n                };\n\n                _context.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <div class=\"scrollable\" style=\"background: red; height: 100px; overflow: scroll\"\n                           {{on-bottom-reached this.bottomReached}}>\n                        <div style=\"height: 250px\">hello</div>\n                      </div>\n                    \n                */\n                {\n                  \"id\": \"OxfzSyPd\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[11,0],[24,0,\\\"scrollable\\\"],[24,5,\\\"background: red; height: 100px; overflow: scroll\\\"],[4,[38,0],[[30,0,[\\\"bottomReached\\\"]]],null],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"height: 250px\\\"],[12],[1,\\\"hello\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"on-bottom-reached\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context.next = 5;\n                return (0, _testHelpers.scrollTo)('.scrollable', 0, document.querySelector('.scrollable').scrollHeight - document.querySelector('.scrollable').clientHeight);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/modifiers/scroll-shadow-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  (0, _qunit.module)('Integration | Component | modifiers/scroll-shadow', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    var itemNumbers = new Array(6).fill(null).map(function (_, i) {\n      return i;\n    });\n\n    var ResizeObserverMock = /*#__PURE__*/function () {\n      function ResizeObserverMock() {\n        _classCallCheck(this, ResizeObserverMock);\n      }\n\n      _createClass(ResizeObserverMock, [{\n        key: \"observe\",\n        value: function observe() {}\n      }, {\n        key: \"unobserve\",\n        value: function unobserve() {}\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {}\n      }]);\n\n      return ResizeObserverMock;\n    }();\n\n    (0, _qunit.module)('when container has scrollbar', function (hooks) {\n      hooks.beforeEach(function () {\n        this.itemNumbers = itemNumbers;\n      });\n      (0, _qunit.test)('it should have scroll shadow class', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <div style=\"position: relative\">\n                            <div class=\"items-container\" style=\"max-height: 80px;overflow: auto;\" {{scroll-shadow}}>\n                              {{#each this.itemNumbers as |itemNumber|}}\n                                <div>Item {{itemNumber}}</div>\n                              {{/each}}\n                            </div>\n                          </div>\n                        \n                  */\n                  {\n                    \"id\": \"u/4JtUpp\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n          \\\"],[11,0],[24,0,\\\"items-container\\\"],[24,5,\\\"max-height: 80px;overflow: auto;\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"              \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context.next = 4;\n                  return (0, _testHelpers.waitFor)('.scroll-shadow', {\n                    timeout: 2000\n                  });\n\n                case 4:\n                  assert.dom('.items-container').hasClass('scroll-shadow');\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.module)('when using color', function () {\n        (0, _qunit.test)('with default color', /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <div style=\"position: relative\">\n                                <div class=\"items-container\" style=\"max-height: 80px;overflow: auto;\" {{scroll-shadow}}>\n                                  {{#each this.itemNumbers as |itemNumber|}}\n                                    <div>Item {{itemNumber}}</div>\n                                  {{/each}}\n                                </div>\n                              </div>\n                            \n                    */\n                    {\n                      \"id\": \"aRPLgN49\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n            \\\"],[11,0],[24,0,\\\"items-container\\\"],[24,5,\\\"max-height: 80px;overflow: auto;\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"                \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context2.next = 4;\n                    return (0, _testHelpers.waitFor)('.scroll-shadow--default', {\n                      timeout: 2000\n                    });\n\n                  case 4:\n                    assert.dom('.items-container').hasClass('scroll-shadow--default');\n\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('with field color', /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <div style=\"position: relative\">\n                                <div class=\"items-container\" style=\"max-height: 80px;overflow: auto;\" {{scroll-shadow color=\"field\"}}>\n                                  {{#each this.itemNumbers as |itemNumber|}}\n                                    <div>Item {{itemNumber}}</div>\n                                  {{/each}}\n                                </div>\n                              </div>\n                            \n                    */\n                    {\n                      \"id\": \"FGpOXZ62\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n            \\\"],[11,0],[24,0,\\\"items-container\\\"],[24,5,\\\"max-height: 80px;overflow: auto;\\\"],[4,[38,0],null,[[\\\"color\\\"],[\\\"field\\\"]]],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"                \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context3.next = 4;\n                    return (0, _testHelpers.waitFor)('.scroll-shadow--field', {\n                      timeout: 2000\n                    });\n\n                  case 4:\n                    assert.dom('.items-container').hasClass('scroll-shadow--field');\n\n                  case 5:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('when container has not scrollbar', function (hooks) {\n      hooks.beforeEach(function () {\n        this.itemNumbers = itemNumbers;\n      });\n      (0, _qunit.test)('it should not have scroll shadow classes', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <div style=\"position: relative\">\n                            <div class=\"items-container\" {{scroll-shadow}}>\n                              {{#each this.itemNumbers as |itemNumber|}}\n                                <div>Item {{itemNumber}}</div>\n                              {{/each}}\n                            </div>\n                          </div>\n                        \n                  */\n                  {\n                    \"id\": \"tbeVa5c5\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n          \\\"],[11,0],[24,0,\\\"items-container\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"              \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.items-container').doesNotHaveClass('scroll-shadow');\n                  assert.dom('.items-container').doesNotHaveClass('scroll-shadow--white');\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('when container change scrollbar dynamically', function (hooks) {\n      hooks.beforeEach(function () {\n        this.itemNumbers = itemNumbers;\n      });\n      (0, _qunit.test)('it should call ResizeObserver', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          var resizeObserverStub, container;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  resizeObserverStub = _sinon.default.stub(ResizeObserverMock.prototype, 'observe');\n                  window.ResizeObserver = ResizeObserverMock;\n                  _context5.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <div style=\"position: relative\">\n                            <div class=\"items-container\" {{scroll-shadow}}>\n                              {{#each this.itemNumbers as |itemNumber|}}\n                                <div>Item {{itemNumber}}</div>\n                              {{/each}}\n                            </div>\n                          </div>\n                        \n                  */\n                  {\n                    \"id\": \"tbeVa5c5\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"position: relative\\\"],[12],[1,\\\"\\\\n          \\\"],[11,0],[24,0,\\\"items-container\\\"],[4,[38,0],null,null],[12],[1,\\\"\\\\n\\\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\\\"itemNumbers\\\"]]],null]],null],null,[[[1,\\\"              \\\"],[10,0],[12],[1,\\\"Item \\\"],[1,[30,1]],[13],[1,\\\"\\\\n\\\"]],[1]],null],[1,\\\"          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"itemNumber\\\"],false,[\\\"scroll-shadow\\\",\\\"each\\\",\\\"-track-array\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  container = document.querySelector('.items-container');\n                  container.style.maxHeight = '80px';\n                  container.style.overflow = 'auto';\n                  assert.ok(resizeObserverStub.calledOnce);\n\n                case 8:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/access-panel-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/object\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon, _object) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/access-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.records = [{\n        label: 'foo'\n      }, {\n        label: 'bar'\n      }];\n      this.loading = false;\n      this.initialLoad = false;\n      this.loadMore = _sinon.default.stub();\n      this.onSearch = _sinon.default.stub();\n      this.onClose = _sinon.default.stub();\n    });\n\n    function renderComponent() {\n      return _renderComponent.apply(this, arguments);\n    }\n\n    function _renderComponent() {\n      _renderComponent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::AccessPanel\n                          @records={{this.records}} @loading={{this.loading}} @initialLoad={{this.initialLoad}}\n                          @onBottomReached={{this.loadMore}} @onSearch={{this.onSearch}} @onClose={{this.onClose}}>\n                            <:header>Header</:header>\n                            <:columns>Columns</:columns>\n                            <:row as |record|>row display: {{record.label}}</:row>\n                            <:empty-state><div class=\"empty-state\">empty state</div></:empty-state>\n                            <:no-results><div class=\"no-results\">no search results</div></:no-results>\n                          </OSS::AccessPanel>\n                      \n                */\n                {\n                  \"id\": \"tyc4en3+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@records\\\",\\\"@loading\\\",\\\"@initialLoad\\\",\\\"@onBottomReached\\\",\\\"@onSearch\\\",\\\"@onClose\\\"],[[30,0,[\\\"records\\\"]],[30,0,[\\\"loading\\\"]],[30,0,[\\\"initialLoad\\\"]],[30,0,[\\\"loadMore\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onClose\\\"]]]],[[\\\"header\\\",\\\"columns\\\",\\\"row\\\",\\\"empty-state\\\",\\\"no-results\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Columns\\\"]],[]],[[[1,\\\"row display: \\\"],[1,[30,1,[\\\"label\\\"]]]],[1]],[[[10,0],[14,0,\\\"empty-state\\\"],[12],[1,\\\"empty state\\\"],[13]],[]],[[[10,0],[14,0,\\\"no-results\\\"],[12],[1,\\\"no search results\\\"],[13]],[]]]]],[1,\\\"\\\\n      \\\"]],[\\\"record\\\"],false,[\\\"o-s-s/access-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n      return _renderComponent.apply(this, arguments);\n    }\n\n    (0, _qunit.test)('it renders the right empty state when no records are found and there is no ongoing search', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.records = [];\n                _context.next = 3;\n                return renderComponent();\n\n              case 3:\n                assert.dom('.empty-state').exists();\n                assert.dom('.empty-state').hasText('empty state');\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the initial loading state is correctly displayed', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.initialLoad = true;\n                _context2.next = 4;\n                return renderComponent();\n\n              case 4:\n                assert.dom('.oss-access-panel-container__row').exists({\n                  count: 12\n                });\n                assert.dom('.oss-access-panel-container__row .upf-skeleton-effect').exists({\n                  count: 24\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the initial loading state is correctly displayed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.loading = true;\n                this.initialLoad = false;\n                _context3.next = 4;\n                return renderComponent();\n\n              case 4:\n                assert.dom('.oss-access-panel-container__row').exists({\n                  count: 5\n                });\n                assert.dom('.oss-access-panel-container__row .upf-skeleton-effect').exists({\n                  count: 6\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The header named block is correctly filled', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return renderComponent();\n\n              case 2:\n                assert.dom('.oss-access-panel-container__header').exists();\n                assert.dom('.oss-access-panel-container__header').hasText('Header');\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The columns named block is correctly filled', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return renderComponent();\n\n              case 2:\n                assert.dom('.oss-access-panel-container__rows-header').exists();\n                assert.dom('.oss-access-panel-container__rows-header').hasText('Columns');\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The records are correctly displayed using the row named block', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return renderComponent();\n\n              case 2:\n                assert.dom('.oss-access-panel-container__row').exists({\n                  count: 2\n                });\n                assert.dom('.oss-access-panel-container__row:first-child').hasText('row display: foo');\n                assert.dom('.oss-access-panel-container__row:last-child').hasText('row display: bar');\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Search', function () {\n      (0, _qunit.test)('it calls the onSearch arg when a keyword is typed', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return renderComponent();\n\n                case 2:\n                  _context7.next = 4;\n                  return (0, _testHelpers.fillIn)('.oss-input-container input', 'fo');\n\n                case 4:\n                  _context7.next = 6;\n                  return (0, _testHelpers.typeIn)('.oss-input-container input', 'o', {\n                    delay: 0\n                  });\n\n                case 6:\n                  assert.ok(this.onSearch.calledOnceWithExactly('foo'));\n\n                case 7:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders the right empty state when no records are found and there is an ongoing search', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          var _this = this;\n\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.onSearch = _sinon.default.stub().callsFake(function () {\n                    (0, _object.set)(_this, 'records', []);\n                  });\n                  _context8.next = 3;\n                  return renderComponent();\n\n                case 3:\n                  _context8.next = 5;\n                  return (0, _testHelpers.fillIn)('.oss-input-container input', 'fo');\n\n                case 5:\n                  _context8.next = 7;\n                  return (0, _testHelpers.typeIn)('.oss-input-container input', 'o', {\n                    delay: 0\n                  });\n\n                case 7:\n                  assert.dom('.no-results').exists();\n                  assert.dom('.no-results').hasText('no search results');\n\n                case 9:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/alert-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var ALERT_SKINS = ['success', 'error', 'info', 'warning'];\n  var ICONS = {\n    success: 'fa-check-circle',\n    error: 'fa-exclamation-triangle',\n    info: 'fa-info-circle',\n    warning: 'fa-exclamation-circle'\n  };\n  (0, _qunit.module)('Integration | Component | o-s-s/alert', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Alert @skin=\"success\" />\n                */\n                {\n                  \"id\": \"Rf8aFhs+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\"],[\\\"success\\\"]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-alert').exists({\n                  count: 1\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it sets info as default if no skin is specified', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Alert />\n                */\n                {\n                  \"id\": \"B81+XB/i\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-alert').hasClass('upf-alert--info');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    ALERT_SKINS.forEach(function (skin) {\n      (0, _qunit.test)(\"it renders \".concat(skin, \" skin correctly\"), /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.skin = skin;\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Alert @skin={{this.skin}} @title={{concat \"Title \" this.skin}} @subtitle={{concat \"Subitle \" this.skin}} />\n                  */\n                  {\n                    \"id\": \"xXQJE3ce\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@title\\\",\\\"@subtitle\\\"],[[30,0,[\\\"skin\\\"]],[28,[37,1],[\\\"Title \\\",[30,0,[\\\"skin\\\"]]],null],[28,[37,1],[\\\"Subitle \\\",[30,0,[\\\"skin\\\"]]],null]]],null]],[],false,[\\\"o-s-s/alert\\\",\\\"concat\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-alert .icon i').hasClass('far');\n                  assert.dom('.upf-alert .icon i').hasClass(\"\".concat(ICONS[skin]));\n                  assert.dom('.upf-alert .title').hasText(\"Title \".concat(skin));\n                  assert.dom('.upf-alert .subtitle').hasText(\"Subitle \".concat(skin));\n\n                case 7:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@plain parameter', function () {\n      (0, _qunit.test)('if true, the background-color is grey', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Alert @plain={{true}} />\n                  */\n                  {\n                    \"id\": \"o265rDzd\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[true]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-alert .main-container').hasClass('main-container--plain');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if false, the background-color is white', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Alert @plain={{false}} />\n                  */\n                  {\n                    \"id\": \"iXRifVDn\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[false]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-alert .main-container').hasNoClass('main-container--plain');\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if undefined, the background-color is grey', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Alert />\n                  */\n                  {\n                    \"id\": \"B81+XB/i\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-alert .main-container').hasClass('main-container--plain');\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@closable parameter', function () {\n      (0, _qunit.test)('if true, display the cross icon which delete alert when you click on it', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <div><OSS::Alert @closable={{true}} /></div>\n                  */\n                  {\n                    \"id\": \"sHff+x31\",\n                    \"block\": \"[[[10,0],[12],[8,[39,0],null,[[\\\"@closable\\\"],[true]],null],[13]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-alert').exists();\n                  assert.dom('.upf-alert .main-container .fx-col i').exists();\n                  assert.dom('.upf-alert .main-container .fx-col i').hasClass('fa-times');\n                  _context7.next = 7;\n                  return (0, _testHelpers.click)('.upf-alert .main-container .fx-col i');\n\n                case 7:\n                  assert.dom('.upf-alert').doesNotExist();\n\n                case 8:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if false, the cross icon is not displayed', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Alert @closable={{false}} />\n                  */\n                  {\n                    \"id\": \"ZNVkWojl\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@closable\\\"],[false]],null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-alert').exists();\n                  assert.dom('.upf-alert .main-container .fx-col i').doesNotExist();\n\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if undefined, the cross icon is not displayed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Alert />\n                  */\n                  {\n                    \"id\": \"B81+XB/i\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-alert').exists();\n                  assert.dom('.upf-alert .main-container .fx-col i').doesNotExist();\n\n                case 4:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('clicking the cross icon also calls the onClose argument provided', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.onClose = _sinon.default.stub();\n                  _context10.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <div><OSS::Alert @closable={{true}} @onClose={{this.onClose}} /></div>\n                  */\n                  {\n                    \"id\": \"GS869ZsB\",\n                    \"block\": \"[[[10,0],[12],[8,[39,0],null,[[\\\"@closable\\\",\\\"@onClose\\\"],[true,[30,0,[\\\"onClose\\\"]]]],null],[13]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context10.next = 5;\n                  return (0, _testHelpers.click)('.upf-alert .main-container .fx-col i');\n\n                case 5:\n                  assert.ok(this.onClose.calledOnce);\n                  assert.dom('.upf-alert').doesNotExist();\n\n                case 7:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('it renders the extra-content named block', /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Alert><:extra-content><div>Hello</div></:extra-content></OSS::Alert>\n                */\n                {\n                  \"id\": \"mW7BpVRZ\",\n                  \"block\": \"[[[8,[39,0],null,null,[[\\\"extra-content\\\"],[[[[10,0],[12],[1,\\\"Hello\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/alert\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-alert .text-container div').hasText('Hello');\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x11) {\n        return _ref12.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/array-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | OSS::ArrayInput', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    var onChange = _sinon.default.stub();\n\n    var validator = _sinon.default.stub();\n\n    function fillInputAndValidate() {\n      return _fillInputAndValidate.apply(this, arguments);\n    }\n\n    function _fillInputAndValidate() {\n      _fillInputAndValidate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var keyword,\n            input,\n            _args13 = arguments;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                keyword = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : 'keyword';\n                _context13.next = 3;\n                return (0, _testHelpers.fillIn)('.array-input-container input', keyword);\n\n              case 3:\n                input = (0, _testHelpers.find)('.array-input-container input');\n                _context13.next = 6;\n                return (0, _testHelpers.triggerKeyEvent)(input, 'keydown', 'Enter', {\n                  code: 'Enter'\n                });\n\n              case 6:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n      return _fillInputAndValidate.apply(this, arguments);\n    }\n\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ArrayInput />\n                */\n                {\n                  \"id\": \"xSmTQTjQ\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.array-input-container').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@values parameter', function (hooks) {\n      hooks.beforeEach(function () {\n        this.loadedValues = ['value1', 'value2'];\n      });\n      (0, _qunit.test)('Passing @values parameter displays the items', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          var domTags;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @values={{this.loadedValues}} />\n                  */\n                  {\n                    \"id\": \"1OKbgUgG\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\"],[[30,0,[\\\"loadedValues\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context2.next = 4;\n                  return (0, _testHelpers.findAll)('.upf-chip');\n\n                case 4:\n                  domTags = _context2.sent;\n                  assert.dom(domTags[0]).hasText('value1');\n                  assert.dom(domTags[1]).hasText('value2');\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('WHEN @onChange function is set', function (hooks) {\n      hooks.beforeEach(function () {\n        this.onChange = onChange;\n      });\n      (0, _qunit.test)('it is triggered on keyword addition', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"GUtRzzWL\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context3.next = 4;\n                  return fillInputAndValidate();\n\n                case 4:\n                  assert.ok(onChange.calledWith(['keyword']));\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it is triggered on keyword deletion', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"GUtRzzWL\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context4.next = 4;\n                  return fillInputAndValidate();\n\n                case 4:\n                  assert.ok(onChange.calledWith(['keyword']));\n                  _context4.next = 7;\n                  return (0, _testHelpers.click)('.upf-chip i');\n\n                case 7:\n                  assert.dom('.upf-chip').doesNotExist();\n                  assert.ok(onChange.calledWith([]));\n\n                case 9:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it is triggered on keyword edition', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"GUtRzzWL\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context5.next = 4;\n                  return fillInputAndValidate();\n\n                case 4:\n                  assert.ok(onChange.calledWith(['keyword']));\n                  _context5.next = 7;\n                  return (0, _testHelpers.triggerKeyEvent)('.array-input-container input', 'keydown', 'Backspace', {\n                    code: 'Backspace'\n                  });\n\n                case 7:\n                  assert.dom('.upf-chip').doesNotExist();\n                  assert.ok(onChange.calledWith([]));\n\n                case 9:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('WHEN @onValidator function is set', function (hooks) {\n      hooks.beforeEach(function () {\n        this.validator = validator;\n      });\n      (0, _qunit.test)('it is triggered on keyword addition', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @validator={{this.validator}} />\n                  */\n                  {\n                    \"id\": \"ijchKe5r\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@validator\\\"],[[30,0,[\\\"validator\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context6.next = 4;\n                  return fillInputAndValidate('hashtag');\n\n                case 4:\n                  assert.ok(validator.calledWith('hashtag'));\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('WHEN the validator is truthy, the value is added as a tag', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  validator.returns(true);\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @validator={{this.validator}} />\n                  */\n                  {\n                    \"id\": \"ijchKe5r\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@validator\\\"],[[30,0,[\\\"validator\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context7.next = 5;\n                  return fillInputAndValidate('hashtag');\n\n                case 5:\n                  assert.ok(validator.calledWith('hashtag'));\n                  assert.ok(validator.returned(true));\n                  assert.dom('.upf-chip').exists();\n                  assert.dom('.upf-chip').hasText('hashtag');\n\n                case 9:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('WHEN the validator is falsy, the value is not added', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  validator.returns(false);\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @validator={{this.validator}} />\n                  */\n                  {\n                    \"id\": \"ijchKe5r\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@validator\\\"],[[30,0,[\\\"validator\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context8.next = 5;\n                  return fillInputAndValidate('hashtag');\n\n                case 5:\n                  assert.ok(validator.calledWith('hashtag'));\n                  assert.ok(validator.returned(false));\n                  assert.dom('.upf-chip').doesNotExist();\n\n                case 8:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('WHEN the user presses on the Backspace key', function () {\n      (0, _qunit.test)('If there are no tags, nothing happens', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput />\n                  */\n                  {\n                    \"id\": \"xSmTQTjQ\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _testHelpers.triggerKeyEvent)('.array-input-container input', 'keydown', 'Backspace', {\n                    code: 'Backspace'\n                  });\n\n                case 4:\n                  assert.dom('.upf-chip').doesNotExist();\n                  assert.dom('.array-input-container').exists();\n                  assert.dom('.array-input-container input').exists();\n\n                case 7:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If there are tags, the last one is removed and is passed to edit mode', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          var domTags;\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.loadedValues = ['value1', 'value2'];\n                  _context10.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @values={{this.loadedValues}} />\n                  */\n                  {\n                    \"id\": \"1OKbgUgG\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\"],[[30,0,[\\\"loadedValues\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  domTags = (0, _testHelpers.findAll)('.upf-chip');\n                  assert.equal(domTags.length, 2);\n                  assert.dom(domTags[1]).hasText('value2');\n                  _context10.next = 8;\n                  return (0, _testHelpers.triggerKeyEvent)('.array-input-container input', 'keydown', 'Backspace', {\n                    code: 'Backspace'\n                  });\n\n                case 8:\n                  domTags = (0, _testHelpers.findAll)('.upf-chip');\n                  assert.equal(domTags.length, 1);\n                  assert.dom('.array-input-container input').hasValue('value2');\n\n                case 11:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Keyboard validation', function () {\n      (0, _qunit.test)('entries are validated when one of the extra keyboard trigger is hit', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          var input;\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ArrayInput @keyboardTriggers={{array \" \"}} />\n                  */\n                  {\n                    \"id\": \"qUmYcC4G\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@keyboardTriggers\\\"],[[28,[37,1],[\\\" \\\"],null]]],null]],[],false,[\\\"o-s-s/array-input\\\",\\\"array\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context11.next = 4;\n                  return (0, _testHelpers.fillIn)('.array-input-container input', 'foobar');\n\n                case 4:\n                  input = (0, _testHelpers.find)('.array-input-container input');\n                  _context11.next = 7;\n                  return (0, _testHelpers.triggerKeyEvent)(input, 'keydown', ' ');\n\n                case 7:\n                  assert.dom('.upf-chip').exists();\n                  assert.dom('.upf-chip').hasText('foobar');\n\n                case 9:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('Clicking on the remove icon suppresses the target entry', /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n        var domTagsRemove;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this.loadedValues = ['value1', 'value2'];\n                _context12.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ArrayInput @values={{this.loadedValues}} />\n                */\n                {\n                  \"id\": \"1OKbgUgG\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\"],[[30,0,[\\\"loadedValues\\\"]]]],null]],[],false,[\\\"o-s-s/array-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                domTagsRemove = (0, _testHelpers.findAll)('.upf-chip');\n                assert.equal(domTagsRemove.length, 2);\n                _context12.next = 7;\n                return (0, _testHelpers.click)('.upf-chip i');\n\n              case 7:\n                domTagsRemove = (0, _testHelpers.findAll)('.upf-chip');\n                assert.equal(domTagsRemove.length, 1);\n                assert.dom('.upf-chip').hasText('value2');\n\n              case 10:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      return function (_x12) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/base-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/trigger-event\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _triggerEvent) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('It renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Base />\n                */\n                {\n                  \"id\": \"UzucRl2B\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The splattributes argument is set on the component', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Base data-control-name=\"testing-splattributes\" />\n                */\n                {\n                  \"id\": \"t3DdgSwR\",\n                  \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"testing-splattributes\\\"]],null,null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"testing-splattributes\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It displays the label named-block when passed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Base @value=\"bananas\">\n                                      <:label><span>this is the label named-block</span></:label>\n                                     </OSS::Attribute::Base>\n                */\n                {\n                  \"id\": \"+MMbo5y9\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"bananas\\\"]],[[\\\"label\\\"],[[[[10,1],[12],[1,\\\"this is the label named-block\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute .oss-attribute__label').hasText('this is the label named-block');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Value handling', function () {\n      (0, _qunit.test)('It displays the value when passed', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Base @value=\"bananas\" />\n                  */\n                  {\n                    \"id\": \"YftPsAKb\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"bananas\\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-attribute .oss-attribute__value').hasText('bananas');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It displays the value named-block when passed', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Base @value=\"bananas\">\n                                         <:value>\n                                           <div class=\"fx-row fx-xalign-center fx-gap-px-6\">\n                                             {{@value}}\n                                             <OSS::Icon @icon=\"fa-lock\" />\n                                           </div>\n                                         </:value>\n                                       </OSS::Attribute::Base>\n                  */\n                  {\n                    \"id\": \"HiAGBeVl\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"bananas\\\"]],[[\\\"value\\\"],[[[[1,\\\"\\\\n                         \\\"],[10,0],[14,0,\\\"fx-row fx-xalign-center fx-gap-px-6\\\"],[12],[1,\\\"\\\\n                           \\\"],[1,[30,1]],[1,\\\"\\\\n                           \\\"],[8,[39,1],null,[[\\\"@icon\\\"],[\\\"fa-lock\\\"]],null],[1,\\\"\\\\n                         \\\"],[13],[1,\\\"\\\\n                       \\\"]],[]]]]]],[\\\"@value\\\"],false,[\\\"o-s-s/attribute/base\\\",\\\"o-s-s/icon\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-attribute .oss-attribute__value .fa-lock').exists();\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Copy button behaviour', function () {\n      (0, _qunit.test)('The text is copyable by default if a value is passed', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Base @label=\"label\" @value=\"value\" />\n                  */\n                  {\n                    \"id\": \"O8Tq2n76\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"label\\\",\\\"value\\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context6.next = 4;\n                  return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  assert.dom('.oss-attribute__copy').exists();\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The text is not copyable if the value is blank', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Base @label=\"label\" @value=\"   \" />\n                  */\n                  {\n                    \"id\": \"r9oeclF6\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"label\\\",\\\"   \\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context7.next = 4;\n                  return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  assert.dom('.oss-attribute__copy').doesNotExist();\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The text is not copyable if the value is undefined', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Base @label=\"label\" />\n                  */\n                  {\n                    \"id\": \"wr9hRnTn\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"label\\\"]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context8.next = 4;\n                  return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  assert.dom('.oss-attribute__copy').doesNotExist();\n\n                case 5:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The text is not copyable if the @copyable parameter is set to false', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Base @label=\"label\" @value=\"value\" @copyable={{false}} />\n                  */\n                  {\n                    \"id\": \"ar4EDZ+o\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"label\\\",\\\"value\\\",false]],null]],[],false,[\\\"o-s-s/attribute/base\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  assert.dom('.oss-attribute__copy').doesNotExist();\n\n                case 5:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/country-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/country', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Country />\n                */\n                {\n                  \"id\": \"TH65SZyS\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"attribute-country\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('If the @countryCode matches a dictionnary entry', function () {\n      (0, _qunit.test)('The flag icon is displayed', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Country @countryCode=\"US\" />\n                  */\n                  {\n                    \"id\": \"v/Opsphz\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\"],[\\\"US\\\"]],null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-attribute__label .fflag-US').exists();\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The country name is displayed', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Country @countryCode=\"US\" />\n                  */\n                  {\n                    \"id\": \"v/Opsphz\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\"],[\\\"US\\\"]],null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-attribute__value').hasText('United States');\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('If the @countryCode does not match a dictionnary entry', function () {\n      (0, _qunit.test)('The flag icon is not displayed', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Country @countryCode=\"\" />\n                  */\n                  {\n                    \"id\": \"GVI3CX+F\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-attribute__label .fflag').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The empty state is displayed', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::Country />\n                  */\n                  {\n                    \"id\": \"TH65SZyS\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/country\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-attribute__value').hasText('-');\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/phone-number-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/phone-number', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::PhoneNumber />\n                */\n                {\n                  \"id\": \"kTs2QUb+\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"attribute-phone-number\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the number is passed, it is displayed', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::PhoneNumber @number=\"+1 212 666 666\" />\n                */\n                {\n                  \"id\": \"qB3uulPm\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@number\\\"],[\\\"+1 212 666 666\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('+1 212 666 666');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the number is undefined, a dash is displayed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::PhoneNumber @prefix=\"+44\" @number=\"\" />\n                */\n                {\n                  \"id\": \"cor3AEPz\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\"],[\\\"+44\\\",\\\"\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('-');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the prefix is passed with a number, they are both displayed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::PhoneNumber @prefix=\"+44\" @number=\"123 123\" />\n                */\n                {\n                  \"id\": \"chr36sZG\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\"],[\\\"+44\\\",\\\"123 123\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('+44 123 123');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the countryCode matches one in the dictionary, a flag is displayed', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::PhoneNumber @countryCode=\"US\" @prefix=\"+1\" @number=\"123 123\" />\n                */\n                {\n                  \"id\": \"K2heEvNH\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\",\\\"@prefix\\\",\\\"@number\\\"],[\\\"US\\\",\\\"+1\\\",\\\"123 123\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('+1 123 123');\n                assert.dom('.fflag-US').exists();\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)(\"If the countryCode doesn't match one in the dictionary, no flag is displayed\", /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::PhoneNumber @countryCode=\"random\" @prefix=\"+1\" @number=\"123 123\" />\n                */\n                {\n                  \"id\": \"hl4WOg7F\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@countryCode\\\",\\\"@prefix\\\",\\\"@number\\\"],[\\\"random\\\",\\\"+1\\\",\\\"123 123\\\"]],null]],[],false,[\\\"o-s-s/attribute/phone-number\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('+1 123 123');\n                assert.dom('.fflag-US').doesNotExist();\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/rating-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/rating', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.testRating = 3;\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Rating @label=\"Hello\" @rating={{this.testRating}}/>\n                */\n                {\n                  \"id\": \"jknsI8u5\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@rating\\\"],[\\\"Hello\\\",[30,0,[\\\"testRating\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"attribute-rating\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it displays a dash when no @rating is provided', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Rating @label=\"Hello\" />\n                */\n                {\n                  \"id\": \"YSJnQeEP\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('-');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it displays the proper number of stars when @rating is provided', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Rating @label=\"Hello\" @rating={{this.testRating}}/>\n                */\n                {\n                  \"id\": \"jknsI8u5\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@rating\\\"],[\\\"Hello\\\",[30,0,[\\\"testRating\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.fas.fa-star.color-yellow').exists({\n                  count: this.testRating\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it displays a label when @label is provided', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::Rating @label=\"Hello\" @rating={{this.testRating}}/>\n                */\n                {\n                  \"id\": \"jknsI8u5\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@rating\\\"],[\\\"Hello\\\",[30,0,[\\\"testRating\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__label').hasText('Hello');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/removable-text-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/removable-text', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onRemove = _sinon.default.stub().resolves();\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RemovableText @label=\"label\" @onRemove={{this.onRemove}} />\n                */\n                {\n                  \"id\": \"1i5tf3mI\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"label\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"attribute-removable-text\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It displays the @label', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} />\n                */\n                {\n                  \"id\": \"c0taKd/L\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__label').hasText('city');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the value is provided, it is displayed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RemovableText @label=\"city\" @value=\"Lyon\" @onRemove={{this.onRemove}} />\n                */\n                {\n                  \"id\": \"F/4XJXsA\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@onRemove\\\"],[\\\"city\\\",\\\"Lyon\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('Lyon');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the value is not provided, it displays a dash', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} />\n                */\n                {\n                  \"id\": \"c0taKd/L\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('-');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Remove tooltip', function () {\n      (0, _qunit.test)('If the @removeTooltip paramater is passed, the string contents are used as tooltip for the lock icon', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} @removeTooltip=\"Click to remove\" />\n                  */\n                  {\n                    \"id\": \"YQKMgk6u\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@removeTooltip\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]],\\\"Click to remove\\\"]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context5.next = 4;\n                  return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  _context5.next = 6;\n                  return assert.tooltip('.fa-trash').hasTitle('Click to remove');\n\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the @removeTooltip paramater is not passed, the default text is used', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::RemovableText @label=\"city\" @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"c0taKd/L\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"city\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context6.next = 4;\n                  return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  _context6.next = 6;\n                  return assert.tooltip('.fa-trash').hasTitle('Remove');\n\n                case 6:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('Clicking on the trash icon calls the @onRemove method', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RemovableText @label=\"city\" @value=\"Lyon\" @onRemove={{this.onRemove}} />\n                */\n                {\n                  \"id\": \"F/4XJXsA\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@onRemove\\\"],[\\\"city\\\",\\\"Lyon\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context7.next = 4;\n                return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n              case 4:\n                _context7.next = 6;\n                return (0, _testHelpers.click)('.fa-trash');\n\n              case 6:\n                assert.true(this.onRemove.calledOnce);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the trash icon displays a loader', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.onRemove.returns(new Promise(function () {}));\n                _context8.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RemovableText @label=\"city\" @value=\"Lyon\" @onRemove={{this.onRemove}} />\n                */\n                {\n                  \"id\": \"F/4XJXsA\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@onRemove\\\"],[\\\"city\\\",\\\"Lyon\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/removable-text\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context8.next = 5;\n                return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n              case 5:\n                _context8.next = 7;\n                return (0, _testHelpers.click)('.fa-trash');\n\n              case 7:\n                assert.dom('.fa-circle-notch.fa-spin').exists();\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/revealable-email-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/revealable-email', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onRevealStub = _sinon.default.stub().resolves();\n    });\n    (0, _qunit.test)('It renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n                */\n                {\n                  \"id\": \"2CwGN9cn\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"attribute-revealable-email\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Label tooltip', function () {\n      (0, _qunit.test)('If the @tooltip paramater is passed, the info icon is displayed', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::RevealableEmail @tooltip=\"this is a tooltip\" @onRevealEmail={{this.onRevealStub}} />\n                  */\n                  {\n                    \"id\": \"BoXlX5Er\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tooltip\\\",\\\"@onRevealEmail\\\"],[\\\"this is a tooltip\\\",[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context2.next = 4;\n                  return assert.tooltip('.oss-attribute__info').hasTitle('this is a tooltip');\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the @tooltip paramater is not passed, the info icon is not visible', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n                  */\n                  {\n                    \"id\": \"2CwGN9cn\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context3.next = 4;\n                  return assert.dom('.oss-attribute__info').doesNotExist();\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Lock tooltip', function () {\n      (0, _qunit.test)('If the @lockTooltip paramater is passed, the string contents are used as tooltip for the lock icon', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::RevealableEmail @lockTooltip=\"locked\" @onRevealEmail={{this.onRevealStub}} />\n                  */\n                  {\n                    \"id\": \"tHHgLTwM\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@lockTooltip\\\",\\\"@onRevealEmail\\\"],[\\\"locked\\\",[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context4.next = 4;\n                  return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  _context4.next = 6;\n                  return assert.tooltip('.fa-lock').hasTitle('locked');\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the @lockTooltip paramater is not passed, the default text is used', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n                  */\n                  {\n                    \"id\": \"2CwGN9cn\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context5.next = 4;\n                  return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n                case 4:\n                  _context5.next = 6;\n                  return assert.tooltip('.fa-lock').hasTitle('Reveal email');\n\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('Clicking on the lock icon calls the @onRevealEmail method', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n                */\n                {\n                  \"id\": \"2CwGN9cn\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context6.next = 4;\n                return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n              case 4:\n                _context6.next = 6;\n                return (0, _testHelpers.click)('.fa-lock');\n\n              case 6:\n                assert.true(this.onRevealStub.calledOnce);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the lock icon displays a loader', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.onRevealStub.returns(new Promise(function () {}));\n                _context7.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::RevealableEmail @onRevealEmail={{this.onRevealStub}} />\n                */\n                {\n                  \"id\": \"2CwGN9cn\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onRevealEmail\\\"],[[30,0,[\\\"onRevealStub\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/revealable-email\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context7.next = 5;\n                return (0, _testHelpers.triggerEvent)('.oss-attribute', 'mouseenter');\n\n              case 5:\n                _context7.next = 7;\n                return (0, _testHelpers.click)('.fa-lock');\n\n              case 7:\n                assert.dom('.fa-circle-notch.fa-spin').exists();\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/tag-array-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/find-all\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _findAll) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/tag-array', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::TagArray @label=\"Fruits\" />\n                */\n                {\n                  \"id\": \"B5NwGVBv\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Fruits\\\"]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"attribute-tag-array\"]').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it displays the @label parameter', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::TagArray @label=\"Fruits\" />\n                */\n                {\n                  \"id\": \"B5NwGVBv\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Fruits\\\"]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__label').hasText('Fruits');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If @tags are passed to the component, they are displayed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        var allUpfTags;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.tags = ['watermelon', 'vodkamelon', 'whiskeymelon', 'tequilamelon'];\n                _context3.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::TagArray @label=\"Fruits\" @tags={{this.tags}} />\n                */\n                {\n                  \"id\": \"lh1xouUz\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@tags\\\"],[\\\"Fruits\\\",[30,0,[\\\"tags\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.oss-attribute__value .fx-row.fx-wrap').exists();\n                allUpfTags = (0, _findAll.default)('.upf-tag');\n                assert.equal(allUpfTags.length, this.tags.length);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If @tags are not passed to the component, a dash is displayed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Attribute::TagArray @label=\"Fruits\" />\n                */\n                {\n                  \"id\": \"B5NwGVBv\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Fruits\\\"]],null]],[],false,[\\\"o-s-s/attribute/tag-array\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-attribute__value').hasText('-');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attribute/text-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/trigger-event\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _triggerEvent) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attribute/text', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('Default behavior', function () {\n      (0, _qunit.module)('Render conditions', function () {\n        (0, _qunit.test)('It renders', /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value=\"World\" />\n                    */\n                    {\n                      \"id\": \"rqhVZroa\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",\\\"World\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-attribute').exists();\n                    assert.dom('.oss-attribute__label').hasText('Hello');\n                    assert.dom('.oss-attribute__value').hasText('World');\n\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('It renders when the @value is undefined', /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" />\n                    */\n                    {\n                      \"id\": \"QKfvK1KB\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-attribute').exists();\n                    assert.dom('.oss-attribute__value').hasText('-');\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('It renders with a tooltip when specified', /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @tooltip=\"Tooltip\" />\n                    */\n                    {\n                      \"id\": \"mGb+40fy\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@tooltip\\\"],[\\\"Hello\\\",\\\"Tooltip\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-attribute__info').exists();\n                    _context3.next = 5;\n                    return assert.tooltip('.oss-attribute__info').hasTitle('Tooltip');\n\n                  case 5:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('It renders a dash as value when no value is specified', /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" />\n                    */\n                    {\n                      \"id\": \"QKfvK1KB\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-attribute').exists();\n                    assert.dom('.oss-attribute__value').hasText('-');\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          return function (_x4) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it renders a dash as value when @value is empty', /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value=\"\"/>\n                    */\n                    {\n                      \"id\": \"Ki301vMg\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",\\\"\\\"]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-attribute').exists();\n                    assert.dom('.oss-attribute__value').hasText('-');\n\n                  case 4:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          }));\n\n          return function (_x5) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('Copy action', function (hooks) {\n        hooks.beforeEach(function () {\n          this.textForCopy = 'copied value';\n        });\n        (0, _qunit.test)('The copy icon is not visible before hovering', /*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} />\n                    */\n                    {\n                      \"id\": \"U+g/lUSI\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-attribute__copy--visible').doesNotExist();\n\n                  case 3:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6);\n          }));\n\n          return function (_x6) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('The text is copyable by default', /*#__PURE__*/function () {\n          var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} />\n                    */\n                    {\n                      \"id\": \"U+g/lUSI\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]]]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context7.next = 4;\n                    return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                  case 4:\n                    assert.dom('.oss-attribute__copy').exists();\n\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }));\n\n          return function (_x7) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('The text is copyable if the @copyable argument is truthy', /*#__PURE__*/function () {\n          var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} @copyable={{true}} />\n                    */\n                    {\n                      \"id\": \"oLqoiVrU\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]],true]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context8.next = 4;\n                    return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                  case 4:\n                    assert.dom('.oss-attribute__copy--visible').exists();\n\n                  case 5:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8);\n          }));\n\n          return function (_x8) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('The text is not copyable (no copy button) if the argument is falsy', /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value={{this.textForCopy}} @copyable={{false}} />\n                    */\n                    {\n                      \"id\": \"/aC7/Xq+\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"Hello\\\",[30,0,[\\\"textForCopy\\\"]],false]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context9.next = 4;\n                    return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                  case 4:\n                    assert.dom('.oss-attribute__copy').doesNotExist();\n\n                  case 5:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9);\n          }));\n\n          return function (_x9) {\n            return _ref10.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)(\"The text is not copyable if text value isn't specified\", /*#__PURE__*/function () {\n          var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @copyable={{true}} />\n                    */\n                    {\n                      \"id\": \"+pFdXEVY\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@copyable\\\"],[\\\"Hello\\\",true]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context10.next = 4;\n                    return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                  case 4:\n                    assert.dom('.oss-copy--inline').doesNotExist();\n\n                  case 5:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, _callee10);\n          }));\n\n          return function (_x10) {\n            return _ref11.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('The text is not copyable if text value is specified but the value is empty', /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n            return regeneratorRuntime.wrap(function _callee11$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Attribute::Text @label=\"Hello\" @value=\"\" @copyable={{true}} />\n                    */\n                    {\n                      \"id\": \"Vi2st0js\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@value\\\",\\\"@copyable\\\"],[\\\"Hello\\\",\\\"\\\",true]],null]],[],false,[\\\"o-s-s/attribute/text\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context11.next = 4;\n                    return (0, _triggerEvent.default)('.oss-attribute', 'mouseenter');\n\n                  case 4:\n                    assert.dom('.oss-copy--inline').doesNotExist();\n\n                  case 5:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, _callee11);\n          }));\n\n          return function (_x11) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/attributes-panel-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/attributes-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.icon = 'fa-laptop-code';\n      this.title = 'Title';\n      this.isSaveDisabled = undefined;\n      this.onSave = _sinon.default.stub();\n      this.onCancel = _sinon.default.stub();\n      this.onEdit = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} />\n                */\n                {\n                  \"id\": \"nYL/qOC+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.attributes-panel').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the icon', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} />\n                */\n                {\n                  \"id\": \"nYL/qOC+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.attributes-panel .fa-laptop-code').exists();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the title', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} />\n                */\n                {\n                  \"id\": \"nYL/qOC+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.attributes-panel span').hasText('Title');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the contextual-action named block', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}}>\n                        <:contextual-action>\n                          <OSS::Button @icon=\"fa-plus\" @square={{true}} />\n                        </:contextual-action>\n                      </OSS::AttributesPanel>\n                    \n                */\n                {\n                  \"id\": \"6AvslRO/\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]]]],[[\\\"contextual-action\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@icon\\\",\\\"@square\\\"],[\\\"fa-plus\\\",true]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/attributes-panel\\\",\\\"o-s-s/button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.attributes-panel .fa-plus').exists();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('for view mode', function () {\n      (0, _qunit.test)('it renders the view-mode named block', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return renderComponent();\n\n                case 2:\n                  assert.dom('.attributes-panel__container.attributes-panel__container--view').exists();\n                  assert.dom('.custom-view-mode').hasText('View mode');\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders edition button', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return renderComponent();\n\n                case 2:\n                  assert.dom('[data-control-name=\"attributes-panel-mode-switch-button\"]').exists();\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.module)('when clicking on edit button', function () {\n        (0, _qunit.test)('it changes to edition mode container', /*#__PURE__*/function () {\n          var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return renderComponent();\n\n                  case 2:\n                    _context7.next = 4;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-mode-switch-button\"]');\n\n                  case 4:\n                    assert.dom('.attributes-panel__container.attributes-panel__container--view').doesNotExist();\n                    assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n\n                  case 6:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }));\n\n          return function (_x7) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it calls the @onEdit', /*#__PURE__*/function () {\n          var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return renderComponent();\n\n                  case 2:\n                    _context8.next = 4;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-mode-switch-button\"]');\n\n                  case 4:\n                    assert.true(this.onEdit.calledOnceWithExactly());\n\n                  case 5:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8, this);\n          }));\n\n          return function (_x8) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n      });\n\n      function renderComponent() {\n        return _renderComponent.apply(this, arguments);\n      }\n\n      function _renderComponent() {\n        _renderComponent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} @onEdit={{this.onEdit}}>\n                            <:view-mode>\n                              <div class=\"custom-view-mode\">View mode</div>\n                            </:view-mode>\n                          </OSS::AttributesPanel>\n                        \n                  */\n                  {\n                    \"id\": \"JNnyLblX\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\",\\\"@onEdit\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]],[30,0,[\\\"onEdit\\\"]]]],[[\\\"view-mode\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"custom-view-mode\\\"],[12],[1,\\\"View mode\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n        return _renderComponent.apply(this, arguments);\n      }\n    });\n    (0, _qunit.module)('for edition mode', function () {\n      (0, _qunit.test)('it renders the view-mode named block', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return renderComponentAndClickOnEdit();\n\n                case 2:\n                  assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n                  assert.dom('.custom-edition-mode').hasText('Edition mode');\n\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"it doesn't renders edition button\", /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return renderComponentAndClickOnEdit();\n\n                case 2:\n                  assert.dom('[data-control-name=\"attributes-panel-mode-switch-button\"]').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"it doesn't renders contextual-action named block\", /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return renderComponentAndClickOnEdit();\n\n                case 2:\n                  assert.dom('.custom-contextual-action').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders the save and cancel button', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return renderComponentAndClickOnEdit();\n\n                case 2:\n                  assert.dom('[data-control-name=\"attributes-panel-cancel-button\"]').exists();\n                  assert.dom('[data-control-name=\"attributes-panel-save-button\"]').exists();\n\n                case 4:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.module)('when clicking on cancel button', function () {\n        (0, _qunit.test)('it switches to view mode', /*#__PURE__*/function () {\n          var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n            return regeneratorRuntime.wrap(function _callee14$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return renderComponentAndClickOnEdit();\n\n                  case 2:\n                    _context14.next = 4;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-cancel-button\"]');\n\n                  case 4:\n                    assert.dom('.attributes-panel__container.attributes-panel__container--view').exists();\n                    assert.dom('.attributes-panel__container.attributes-panel__container--edition').doesNotExist();\n\n                  case 6:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _callee14);\n          }));\n\n          return function (_x13) {\n            return _ref14.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it calls the @onCancel', /*#__PURE__*/function () {\n          var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n            return regeneratorRuntime.wrap(function _callee15$(_context15) {\n              while (1) {\n                switch (_context15.prev = _context15.next) {\n                  case 0:\n                    _context15.next = 2;\n                    return renderComponentAndClickOnEdit();\n\n                  case 2:\n                    _context15.next = 4;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-cancel-button\"]');\n\n                  case 4:\n                    assert.true(this.onCancel.calledOnceWithExactly());\n\n                  case 5:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }\n            }, _callee15, this);\n          }));\n\n          return function (_x14) {\n            return _ref15.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('when clicking on save button', function () {\n        (0, _qunit.test)('it switches to view mode', /*#__PURE__*/function () {\n          var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n            return regeneratorRuntime.wrap(function _callee16$(_context16) {\n              while (1) {\n                switch (_context16.prev = _context16.next) {\n                  case 0:\n                    this.onSave.resolves();\n                    _context16.next = 3;\n                    return renderComponentAndClickOnEdit();\n\n                  case 3:\n                    _context16.next = 5;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n\n                  case 5:\n                    assert.dom('.attributes-panel__container.attributes-panel__container--view').exists();\n                    assert.dom('.attributes-panel__container.attributes-panel__container--edition').doesNotExist();\n\n                  case 7:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }\n            }, _callee16, this);\n          }));\n\n          return function (_x15) {\n            return _ref16.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)(\"it doesn't switch to the view mode\", /*#__PURE__*/function () {\n          var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n            return regeneratorRuntime.wrap(function _callee17$(_context17) {\n              while (1) {\n                switch (_context17.prev = _context17.next) {\n                  case 0:\n                    this.onSave.rejects();\n                    _context17.next = 3;\n                    return renderComponentAndClickOnEdit();\n\n                  case 3:\n                    _context17.next = 5;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n\n                  case 5:\n                    assert.dom('.attributes-panel__container.attributes-panel__container--view').doesNotExist();\n                    assert.dom('.attributes-panel__container.attributes-panel__container--edition').exists();\n\n                  case 7:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }\n            }, _callee17, this);\n          }));\n\n          return function (_x16) {\n            return _ref17.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it render a loading state', /*#__PURE__*/function () {\n          var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n            return regeneratorRuntime.wrap(function _callee18$(_context18) {\n              while (1) {\n                switch (_context18.prev = _context18.next) {\n                  case 0:\n                    this.onSave.returns(new Promise(function () {}));\n                    _context18.next = 3;\n                    return renderComponentAndClickOnEdit();\n\n                  case 3:\n                    _context18.next = 5;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n\n                  case 5:\n                    assert.dom('[data-control-name=\"attributes-panel-save-button\"] .fa-circle-notch').exists();\n\n                  case 6:\n                  case \"end\":\n                    return _context18.stop();\n                }\n              }\n            }, _callee18, this);\n          }));\n\n          return function (_x17) {\n            return _ref18.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it calls the @onSave', /*#__PURE__*/function () {\n          var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n            return regeneratorRuntime.wrap(function _callee19$(_context19) {\n              while (1) {\n                switch (_context19.prev = _context19.next) {\n                  case 0:\n                    this.onSave.resolves();\n                    _context19.next = 3;\n                    return renderComponentAndClickOnEdit();\n\n                  case 3:\n                    _context19.next = 5;\n                    return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-save-button\"]');\n\n                  case 5:\n                    assert.true(this.onSave.calledOnceWithExactly());\n\n                  case 6:\n                  case \"end\":\n                    return _context19.stop();\n                }\n              }\n            }, _callee19, this);\n          }));\n\n          return function (_x18) {\n            return _ref19.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('when @isSaveDisabled', function () {\n        (0, _qunit.test)('is undefined, the save button is not disabled', /*#__PURE__*/function () {\n          var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n            return regeneratorRuntime.wrap(function _callee20$(_context20) {\n              while (1) {\n                switch (_context20.prev = _context20.next) {\n                  case 0:\n                    _context20.next = 2;\n                    return renderComponentAndClickOnEdit();\n\n                  case 2:\n                    assert.dom('[data-control-name=\"attributes-panel-save-button\"]').isNotDisabled();\n\n                  case 3:\n                  case \"end\":\n                    return _context20.stop();\n                }\n              }\n            }, _callee20);\n          }));\n\n          return function (_x19) {\n            return _ref20.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('is true, the save button is disabled', /*#__PURE__*/function () {\n          var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n            return regeneratorRuntime.wrap(function _callee21$(_context21) {\n              while (1) {\n                switch (_context21.prev = _context21.next) {\n                  case 0:\n                    this.isSaveDisabled = true;\n                    _context21.next = 3;\n                    return renderComponentAndClickOnEdit();\n\n                  case 3:\n                    assert.dom('[data-control-name=\"attributes-panel-save-button\"]').isDisabled();\n\n                  case 4:\n                  case \"end\":\n                    return _context21.stop();\n                }\n              }\n            }, _callee21, this);\n          }));\n\n          return function (_x20) {\n            return _ref21.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('is false, the save button is not disabled', /*#__PURE__*/function () {\n          var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(assert) {\n            return regeneratorRuntime.wrap(function _callee22$(_context22) {\n              while (1) {\n                switch (_context22.prev = _context22.next) {\n                  case 0:\n                    this.isSaveDisabled = false;\n                    _context22.next = 3;\n                    return renderComponentAndClickOnEdit();\n\n                  case 3:\n                    assert.dom('[data-control-name=\"attributes-panel-save-button\"]').isNotDisabled();\n\n                  case 4:\n                  case \"end\":\n                    return _context22.stop();\n                }\n              }\n            }, _callee22, this);\n          }));\n\n          return function (_x21) {\n            return _ref22.apply(this, arguments);\n          };\n        }());\n      });\n\n      function renderComponentAndClickOnEdit() {\n        return _renderComponentAndClickOnEdit.apply(this, arguments);\n      }\n\n      function _renderComponentAndClickOnEdit() {\n        _renderComponentAndClickOnEdit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n          return regeneratorRuntime.wrap(function _callee23$(_context23) {\n            while (1) {\n              switch (_context23.prev = _context23.next) {\n                case 0:\n                  _context23.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::AttributesPanel @icon={{this.icon}} @title={{this.title}} @onSave={{this.onSave}} @onEdit={{this.onEdit}}\n                                                @onCancel={{this.onCancel}} @isSaveDisabled={{this.isSaveDisabled}}>\n                            <:contextual-action><div class=\"custom-contextual-action\"></div></:contextual-action>\n                            <:edition-mode>\n                              <div class=\"custom-edition-mode\">Edition mode</div>\n                            </:edition-mode>\n                          </OSS::AttributesPanel>\n                        \n                  */\n                  {\n                    \"id\": \"OU+DtERj\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@title\\\",\\\"@onSave\\\",\\\"@onEdit\\\",\\\"@onCancel\\\",\\\"@isSaveDisabled\\\"],[[30,0,[\\\"icon\\\"]],[30,0,[\\\"title\\\"]],[30,0,[\\\"onSave\\\"]],[30,0,[\\\"onEdit\\\"]],[30,0,[\\\"onCancel\\\"]],[30,0,[\\\"isSaveDisabled\\\"]]]],[[\\\"contextual-action\\\",\\\"edition-mode\\\"],[[[[10,0],[14,0,\\\"custom-contextual-action\\\"],[12],[13]],[]],[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"custom-edition-mode\\\"],[12],[1,\\\"Edition mode\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context23.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"attributes-panel-mode-switch-button\"]');\n\n                case 4:\n                case \"end\":\n                  return _context23.stop();\n              }\n            }\n          }, _callee23);\n        }));\n        return _renderComponentAndClickOnEdit.apply(this, arguments);\n      }\n    });\n    (0, _qunit.test)('it throws an error if @title is missing', /*#__PURE__*/function () {\n      var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(assert) {\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (error) {\n                  assert.equal(error.message, 'Assertion Failed: [component][OSS::AttributesPanel] The @title parameter is mandatory');\n                });\n                _context24.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::AttributesPanel @onSave={{this.onSave}} />\n                */\n                {\n                  \"id\": \"9qj7cxNS\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onSave\\\"],[[30,0,[\\\"onSave\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      return function (_x22) {\n        return _ref23.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it throws an error if @onSave is missing', /*#__PURE__*/function () {\n      var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(assert) {\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (error) {\n                  assert.equal(error.message, 'Assertion Failed: [component][OSS::AttributesPanel] The @onSave parameter is mandatory');\n                });\n                _context25.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::AttributesPanel @title={{this.title}} />\n                */\n                {\n                  \"id\": \"6jq8MJgc\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[[30,0,[\\\"title\\\"]]]],null]],[],false,[\\\"o-s-s/attributes-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      return function (_x23) {\n        return _ref24.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/avatar-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/avatar\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _avatar) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/avatar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('Default behavior', function () {\n      (0, _qunit.test)('it displays the image when it is provided', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar @image=\"http://foo.co/bar.png\" />\n                  */\n                  {\n                    \"id\": \"YtDsPCu/\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[\\\"http://foo.co/bar.png\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar img').exists();\n                  assert.dom('.upf-avatar img').hasAttribute('src', 'http://foo.co/bar.png');\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the initials when they are provided', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar @initials=\"TS\" />\n                  */\n                  {\n                    \"id\": \"f/33aJfB\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@initials\\\"],[\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar span').exists();\n                  assert.dom('.upf-avatar span').hasText('TS');\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the default image when initials and image are not provided', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar />\n                  */\n                  {\n                    \"id\": \"/DPgB3m1\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar img').exists();\n                  assert.dom('.upf-avatar img').hasAttribute('src', _avatar.DEFAULT_IMAGE_URL);\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the image when image and initials are provided', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar @image=\"http://foo.co/bar.png\" @initials=\"TS\" />\n                  */\n                  {\n                    \"id\": \"eyit4QXW\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\",\\\"@initials\\\"],[\\\"http://foo.co/bar.png\\\",\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar img').exists();\n                  assert.dom('.upf-avatar img').hasAttribute('src', 'http://foo.co/bar.png');\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Sizes', function () {\n      (0, _qunit.test)('it sets the right default class when size is not provided', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar />\n                  */\n                  {\n                    \"id\": \"/DPgB3m1\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar').hasClass(\"upf-avatar--md\");\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      Object.keys(_avatar.SizeDefinition).forEach(function (size) {\n        (0, _qunit.test)(\"it sets the right class when using a supported size: \".concat(size), /*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    this.size = size;\n                    _context6.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Avatar @size={{this.size}} />\n                    */\n                    {\n                      \"id\": \"9sZU5tcG\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[[30,0,[\\\"size\\\"]]]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.upf-avatar').exists();\n                    assert.dom('.upf-avatar').hasClass(\"upf-avatar--\".concat(size));\n\n                  case 5:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6, this);\n          }));\n\n          return function (_x6) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('Error behavior', function () {\n      (0, _qunit.test)('it throws an error if the wrong size argument is passed', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, \"Assertion Failed: [component][OSS::Avatar] Unknown size. Available sizes are: \".concat(Object.keys(_avatar.SizeDefinition).join(', ')));\n                  });\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar @size=\"test\" />\n                  */\n                  {\n                    \"id\": \"V2CXC3Hq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the initials when both initials and image are provided and the image fails to load', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar @image=\"http://foo.co/bar.p\" @initials=\"TS\" />\n                  */\n                  {\n                    \"id\": \"/6lLb1pD\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\",\\\"@initials\\\"],[\\\"http://foo.co/bar.p\\\",\\\"TS\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context8.next = 4;\n                  return (0, _testHelpers.waitFor)('.upf-avatar span');\n\n                case 4:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar span').exists();\n                  assert.dom('.upf-avatar span').hasText('TS');\n\n                case 7:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the placeholder image when the image provided in parameters fails to load', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Avatar @image=\"http://foo.co/bar.p\" />\n                  */\n                  {\n                    \"id\": \"w6sYtFyZ\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[\\\"http://foo.co/bar.p\\\"]],null]],[],false,[\\\"o-s-s/avatar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _testHelpers.waitUntil)(function () {\n                    var _find;\n\n                    return ((_find = (0, _testHelpers.find)('.upf-avatar img')) === null || _find === void 0 ? void 0 : _find.getAttribute('src')) === _avatar.DEFAULT_IMAGE_URL;\n                  });\n\n                case 4:\n                  assert.dom('.upf-avatar').exists();\n                  assert.dom('.upf-avatar img').exists();\n                  assert.dom('.upf-avatar img').hasAttribute('src', _avatar.DEFAULT_IMAGE_URL);\n\n                case 7:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/badge-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/badge\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _badge) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/badge', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('sizes', function () {\n      (0, _qunit.test)('it sets the right class when usng a supported size', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @size=\"lg\" @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"t21skA09\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@text\\\"],[\\\"lg\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge').exists();\n                  assert.dom('.upf-badge').hasClass('upf-badge--size-lg');\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it defaults to md size if none is passed', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"SA53evHl\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge').exists();\n                  assert.dom('.upf-badge').hasClass('upf-badge--size-md');\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('skins', function () {\n      Object.keys(_badge.SkinDefinition).forEach(function (skin) {\n        (0, _qunit.test)(\"it sets the right class when using a supported skin: \".concat(skin), /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    this.skin = skin;\n                    _context3.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::Badge @skin={{this.skin}} @text=\"2x\" />\n                    */\n                    {\n                      \"id\": \"Ldg9aUnG\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@text\\\"],[[30,0,[\\\"skin\\\"]],\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.upf-badge').exists();\n                    assert.dom('.upf-badge').hasClass(\"upf-badge--\".concat(skin.startsWith('xtd') ? skin.replace('xtd', 'extended') : skin));\n\n                  case 5:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.test)('it adds the plain class when passed', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @skin=\"primary\" @plain={{true}} @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"m0xpp904\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@plain\\\",\\\"@text\\\"],[\\\"primary\\\",true,\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge').hasClass('upf-badge--plain');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('content args', function () {\n      (0, _qunit.test)('it displays the right icon when using the @icon arg', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @icon=\"fas fa-users\" />\n                  */\n                  {\n                    \"id\": \"rBEAc5ut\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fas fa-users\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge').exists();\n                  assert.dom('.upf-badge i').hasAttribute('class', 'fas fa-users');\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the right text when using the @text arg', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"SA53evHl\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge').exists();\n                  assert.dom('.upf-badge .upf-badge__text').exists();\n                  assert.dom('.upf-badge .upf-badge__text').hasText('2x');\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays the right image when using the @image arg', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @image=\"http://foo.co/bar.png\" />\n                  */\n                  {\n                    \"id\": \"74LReQX5\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[\\\"http://foo.co/bar.png\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge').exists();\n                  assert.dom('.upf-badge img').exists();\n                  assert.dom('.upf-badge img').hasAttribute('src', 'http://foo.co/bar.png');\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error when an unsupported skin is passed', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] Unknown skin. Available skins are: primary, success, alert, error, xtd-cyan, xtd-orange, xtd-yellow, xtd-lime, xtd-blue, xtd-violet');\n                  });\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @skin=\"foo\" @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"HT7FGbbu\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@text\\\"],[\\\"foo\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error when an unsupported size is passed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] Unknown size. Available sizes are: sm, md, lg');\n                  });\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @size=\"foo\" @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"ESxSPYGg\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@text\\\"],[\\\"foo\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if no argument is passed', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] One of @icon, @image or @text arguments is mandatory. You passed 0 arguments');\n                  });\n                  _context10.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge />\n                  */\n                  {\n                    \"id\": \"1TU+F/l3\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if more than one content argument is passed', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Badge] One of @icon, @image or @text arguments is mandatory. You passed 2 arguments');\n                  });\n                  _context11.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Badge @icon=\"fas fa-users\" @text=\"2x\" />\n                  */\n                  {\n                    \"id\": \"bqPH9U7v\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\"],[\\\"fas fa-users\\\",\\\"2x\\\"]],null]],[],false,[\\\"o-s-s/badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/banner-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/banner', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner />\n                */\n                {\n                  \"id\": \"Dkwyjpto\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-banner').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing a font-awesome icon in the @icon parameter displays the icon in a rounded badge', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner @icon=\"fas fa-check\" />\n                */\n                {\n                  \"id\": \"4tD+dfWl\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fas fa-check\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-banner .fa-check').exists();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing an image url in the @image parameter displays the image in a rounded badge', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.url = 'https://thepressfree.com/wp-content/uploads/2021/11/Voici-pourquoi-Bruce-Banner-netait-plus-Smart-Hulk-dans-la-800x445.jpg';\n                _context3.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner @image={{this.url}} />\n                */\n                {\n                  \"id\": \"HCX2NURD\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@image\\\"],[[30,0,[\\\"url\\\"]]]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.upf-banner img').exists();\n                assert.dom('img').hasAttribute('src', this.url);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing a title in the @title parameter displays the title in the component', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner @title=\"Test Title\" />\n                */\n                {\n                  \"id\": \"Gxp3rVRT\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test Title\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-banner .font-weight-semibold').hasText('Test Title');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing a title-suffix named block uses it in a addition to the @title arg ', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner @title=\"Test Title\"><:title-suffix><div class=\"title-named-block\">foo</div></:title-suffix></OSS::Banner>\n                */\n                {\n                  \"id\": \"BrNq9L79\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test Title\\\"]],[[\\\"title-suffix\\\"],[[[[10,0],[14,0,\\\"title-named-block\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-banner .font-weight-semibold').hasText('Test Title');\n                assert.dom('.upf-banner .title-named-block').exists();\n                assert.dom('.upf-banner .title-named-block').hasText('foo');\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing a title-suffix named block without a @title arg does not display it at all', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner><:title-suffix><div class=\"title-named-block\">foo</div></:title-suffix></OSS::Banner>\n                */\n                {\n                  \"id\": \"tT95y3CK\",\n                  \"block\": \"[[[8,[39,0],null,null,[[\\\"title-suffix\\\"],[[[[10,0],[14,0,\\\"title-named-block\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-banner .font-weight-semibold').doesNotExist();\n                assert.dom('.upf-banner .title-named-block').doesNotExist();\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing a subtitle in the @subtitle parameter displays the title in the component', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Banner @subtitle=\"Test subtitle\" />\n                */\n                {\n                  \"id\": \"IgDs3UTL\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Test subtitle\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-banner .font-color-gray-500.text-size-4').hasText('Test subtitle');\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@plain parameter', function () {\n      (0, _qunit.test)('when the value is truthy, it sets gray-50 background', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @plain={{true}} />\n                  */\n                  {\n                    \"id\": \"0S8iSNZB\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[true]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.background-color-gray-50').exists();\n\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when the value is falsy, it sets white background', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @plain={{false}} />\n                  */\n                  {\n                    \"id\": \"9Nf0S3jM\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\"],[false]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.background-color-white').exists();\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when the value is undefined, it sets white background', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner />\n                  */\n                  {\n                    \"id\": \"Dkwyjpto\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.background-color-white').exists();\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@selected parameter', function () {\n      (0, _qunit.test)('when the value is truthy, it adds upf-banner--selected class', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @selected={{true}} />\n                  */\n                  {\n                    \"id\": \"tPNSw5Ml\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[true]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--selected').exists();\n\n                case 3:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is falsy, it doesn't add upf-banner--selected class\", /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @selected={{false}} />\n                  */\n                  {\n                    \"id\": \"VqAV4OJh\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[false]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--selected').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is undefined, it doesn't add upf-banner--selected class\", /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner />\n                  */\n                  {\n                    \"id\": \"Dkwyjpto\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--selected').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@disabled parameter', function () {\n      (0, _qunit.test)('when the value is truthy, it adds upf-banner--disabled class', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @disabled={{true}} />\n                  */\n                  {\n                    \"id\": \"IKW4p7oa\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@disabled\\\"],[true]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--disabled').exists();\n\n                case 3:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is falsy, it doesn't add upf-banner--disabled class\", /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @disabled={{false}} />\n                  */\n                  {\n                    \"id\": \"9HSG2krW\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@disabled\\\"],[false]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--disabled').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is undefined, it doesn't add upf-banner--disabled class\", /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  _context16.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner />\n                  */\n                  {\n                    \"id\": \"Dkwyjpto\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--disabled').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('passing a custom-icon named block renders inside the component', /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Banner @subtitle=\"Test subtitle\">\n                        <:custom-icon>\n                          <OSS::Badge @text=\"2x\" />\n                        </:custom-icon>\n                      </OSS::Banner>\n                    \n                */\n                {\n                  \"id\": \"XNpz321K\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Test subtitle\\\"]],[[\\\"custom-icon\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@text\\\"],[\\\"2x\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/banner\\\",\\\"o-s-s/badge\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-badge').exists();\n\n              case 3:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      return function (_x17) {\n        return _ref18.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('passing an actions named block renders inside the component', /*#__PURE__*/function () {\n      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Banner @subtitle=\"Test subtitle\">\n                        <:actions>\n                          <OSS::Button @skin=\"primary\" @label=\"browse\" @icon=\"fas fa-box-open\" @size=\"md\" />\n                        </:actions>\n                      </OSS::Banner>\n                    \n                */\n                {\n                  \"id\": \"eQmLuK2q\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@subtitle\\\"],[\\\"Test subtitle\\\"]],[[\\\"actions\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@skin\\\",\\\"@label\\\",\\\"@icon\\\",\\\"@size\\\"],[\\\"primary\\\",\\\"browse\\\",\\\"fas fa-box-open\\\",\\\"md\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/banner\\\",\\\"o-s-s/button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-btn').exists();\n\n              case 3:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      return function (_x18) {\n        return _ref19.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@size parameter', function () {\n      (0, _qunit.test)(\"when the value is 'sm', it adds the upf-banner--size-sm class\", /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n          return regeneratorRuntime.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  _context19.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @size=\"sm\" />\n                  */\n                  {\n                    \"id\": \"NcXIJow/\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--size-sm').exists();\n\n                case 3:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19);\n        }));\n\n        return function (_x19) {\n          return _ref20.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is 'sm' and an @icon is defined, a small icon class is used\", /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  _context20.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @size=\"sm\" @icon=\"fa-child-combatant\" />\n                  */\n                  {\n                    \"id\": \"yUmdg4Pf\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@icon\\\"],[\\\"sm\\\",\\\"fa-child-combatant\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-badge--size-sm').exists();\n\n                case 3:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20);\n        }));\n\n        return function (_x20) {\n          return _ref21.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is anything but 'sm', it doesn't add the upf-banner--size-sm class\", /*#__PURE__*/function () {\n        var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n          return regeneratorRuntime.wrap(function _callee21$(_context21) {\n            while (1) {\n              switch (_context21.prev = _context21.next) {\n                case 0:\n                  _context21.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner @size=\"md\" />\n                  */\n                  {\n                    \"id\": \"qeOOOhYO\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"md\\\"]],null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--size-sm').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context21.stop();\n              }\n            }\n          }, _callee21);\n        }));\n\n        return function (_x21) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"when the value is undefined, it doesn't add the upf-banner--size-sm class\", /*#__PURE__*/function () {\n        var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(assert) {\n          return regeneratorRuntime.wrap(function _callee22$(_context22) {\n            while (1) {\n              switch (_context22.prev = _context22.next) {\n                case 0:\n                  _context22.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Banner />\n                  */\n                  {\n                    \"id\": \"Dkwyjpto\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/banner\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-banner.upf-banner--size-sm').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context22.stop();\n              }\n            }\n          }, _callee22);\n        }));\n\n        return function (_x22) {\n          return _ref23.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/button-dropdown-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/button-dropdown', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('the icon is not displayed if not provided', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ButtonDropdown @label=\"label\"><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                */\n                {\n                  \"id\": \"gnivTC8l\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"label\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').doesNotExist();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the label is not displayed if not provided', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ButtonDropdown @icon=\"far fa-users\"><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                */\n                {\n                  \"id\": \"L7hoJO4w\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-users\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child span').doesNotExist();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the icon and label are displayed correctly when provided', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\"><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                */\n                {\n                  \"id\": \"jELuq6sR\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"far fa-users\\\",\\\"label\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').exists();\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').hasClass('far');\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child i').hasClass('fa-users');\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child span').exists();\n                assert.dom('.oss-button-dropdown__trigger .fx-row:first-child span').hasText('label');\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('If @mainAction is undefined', function () {\n      (0, _qunit.test)('Clicking on the button opens the dropdown', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\">\n                                <:items>\n                                  <div class=\"oss-button-dropdown__item\">foo</div>\n                                </:items>\n                              </OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"k/GDb8+e\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"far fa-users\\\",\\\"label\\\"]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-button-dropdown__items').doesNotExist();\n                  assert.dom('.oss-button-dropdown__trigger').hasAttribute('role', 'button');\n                  _context4.next = 6;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__trigger');\n\n                case 6:\n                  assert.dom('.oss-button-dropdown__items').exists();\n                  assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').exists({\n                    count: 1\n                  });\n                  assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').hasText('foo');\n\n                case 9:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"Hasn't inner border separator\", /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}>\n                                <:items>\n                                  <div class=\"oss-button-dropdown__item\">foo</div>\n                                </:items>\n                              </OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"Z2UQskzd\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-button-dropdown__trigger .fx-row:last-child').doesNotHaveStyle({\n                    'border-left': '1px solid rgb(229, 231, 235)'\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('If @mainAction is defined', function (hooks) {\n      hooks.beforeEach(function () {\n        this.mainAction = _sinon.default.stub();\n      });\n      (0, _qunit.test)('Clicking on the button should not open the dropdown', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"4YcUk/oy\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-button-dropdown__items').doesNotExist();\n                  assert.dom('.oss-button-dropdown__trigger').hasNoAttribute('role', 'button');\n                  _context6.next = 6;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__trigger');\n\n                case 6:\n                  assert.dom('.oss-button-dropdown__items').doesNotExist();\n\n                case 7:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Clicking on the left part should trigger mainAction', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"4YcUk/oy\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.ok(this.mainAction.notCalled);\n                  assert.dom('.oss-button-dropdown__trigger .fx-row:first-child').hasAttribute('role', 'button');\n                  _context7.next = 6;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:first-child');\n\n                case 6:\n                  assert.ok(this.mainAction.calledOnce);\n\n                case 7:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Clicking on the caret container part opens the dropdown', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"4YcUk/oy\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-button-dropdown__items').doesNotExist();\n                  assert.dom('.oss-button-dropdown__trigger .fx-row:last-child').hasAttribute('role', 'button');\n                  _context8.next = 6;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:last-child');\n\n                case 6:\n                  assert.dom('.oss-button-dropdown__items').exists();\n                  assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').exists({\n                    count: 1\n                  });\n                  assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').hasText('foo');\n\n                case 9:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Has inner border separator', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"4YcUk/oy\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-button-dropdown__trigger .fx-row:last-child').hasStyle({\n                    'border-left': '1px solid rgb(229, 231, 235)'\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('When the dropdown is opened', function (hooks) {\n      hooks.beforeEach(function () {\n        this.mainAction = _sinon.default.stub();\n      });\n      (0, _qunit.test)('Clicking on an item should close the dropdown', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}>\n                                <:items>\n                                  <div class=\"oss-button-dropdown__item\">foo</div>\n                                </:items>\n                              </OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"Z2UQskzd\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context10.next = 4;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:last-child');\n\n                case 4:\n                  _context10.next = 6;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__items .oss-button-dropdown__item');\n\n                case 6:\n                  assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').doesNotExist();\n\n                case 7:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Clicking on an item with stopPropagation should keep the dropdown opened', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  this.stopPropagation = function (e) {\n                    e.stopPropagation();\n                  };\n\n                  _context11.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown @icon=\"far fa-users\" @label=\"label\" @mainAction={{this.mainAction}}>\n                                <:items>\n                                  <div class=\"oss-button-dropdown__item\" {{on \"click\" this.stopPropagation}}>bar</div>\n                                </:items>\n                              </OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"6Pn23fQg\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@mainAction\\\"],[\\\"far fa-users\\\",\\\"label\\\",[30,0,[\\\"mainAction\\\"]]]],[[\\\"items\\\"],[[[[1,\\\"\\\\n                \\\"],[11,0],[24,0,\\\"oss-button-dropdown__item\\\"],[4,[38,1],[\\\"click\\\",[30,0,[\\\"stopPropagation\\\"]]],null],[12],[1,\\\"bar\\\"],[13],[1,\\\"\\\\n              \\\"]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\",\\\"on\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context11.next = 5;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__trigger .fx-row:last-child');\n\n                case 5:\n                  _context11.next = 7;\n                  return (0, _testHelpers.click)('.oss-button-dropdown__items .oss-button-dropdown__item');\n\n                case 7:\n                  assert.dom('.oss-button-dropdown__items .oss-button-dropdown__item').exists();\n\n                case 8:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, this);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if no icon or label args is provided', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ButtonDropdown] You must pass either a @label or an @icon argument.');\n                  });\n                  _context12.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"uZEQ2XX2\",\n                    \"block\": \"[[[8,[39,0],null,null,[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if mainAction exists and is not a function', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ButtonDropdown] The parameter @mainAction should be a function.');\n                  });\n                  _context13.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ButtonDropdown  @label=\"test\" @mainAction=\"foo\" ><:items><div class=\"oss-button-dropdown__item\">foo</div></:items></OSS::ButtonDropdown>\n                  */\n                  {\n                    \"id\": \"My0FEzSp\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@mainAction\\\"],[\\\"test\\\",\\\"foo\\\"]],[[\\\"items\\\"],[[[[10,0],[14,0,\\\"oss-button-dropdown__item\\\"],[12],[1,\\\"foo\\\"],[13]],[]]]]]],[],false,[\\\"o-s-s/button-dropdown\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/button-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the icon when present', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Button @icon=\"fab fa-facebook\" />\n                */\n                {\n                  \"id\": \"lRw6ymS6\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fab fa-facebook\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-btn i').hasClass('fa-facebook');\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the icon and label when present', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Button @icon=\"fab fa-facebook\" @label=\"Label\" />\n                */\n                {\n                  \"id\": \"YfZYoRh8\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fab fa-facebook\\\",\\\"Label\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-btn i').hasClass('fa-facebook');\n                assert.dom('.upf-btn span').hasClass('margin-left-xxx-sm');\n                assert.dom('.upf-btn span').hasText('Label');\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the default button', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Button @label=\"Test\" />\n                */\n                {\n                  \"id\": \"gudCmmbf\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-btn').exists({\n                  count: 1\n                });\n                assert.dom('.upf-btn').hasClass('upf-btn--default');\n                assert.dom('.upf-btn').hasText('Test');\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('it render with the correct skin', function () {\n      (0, _qunit.test)('when using an unknown skin, it is set to default', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"unknown\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"3vsiopuu\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"unknown\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--default');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using primary skin', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"primary\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"oGXdt4AE\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"primary\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--primary');\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using secondary skin', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"secondary\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"bSct/xBb\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"secondary\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--secondary');\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using destructive skin', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"destructive\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"HN/JJBtV\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"destructive\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--destructive');\n\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using alert skin', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"alert\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"7rOQzQ6Q\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"alert\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--alert');\n\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using success skin', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"success\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"MJ7GzxvX\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"success\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--success');\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using social-instagram skin', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"instagram\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"2Fo/kOts\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"instagram\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--social-instagram');\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using social-facebook skin', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"facebook\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"zWlJEXtL\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"facebook\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--social-facebook');\n\n                case 3:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using social-youtube skin', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @skin=\"youtube\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"2viUkVmw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[\\\"youtube\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--social-youtube');\n\n                case 3:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('it render with the right size', function () {\n      (0, _qunit.test)('when using xs', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @size=\"xs\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"crfNYXod\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"xs\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--xs');\n\n                case 3:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using sm', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @size=\"sm\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"bD3nCNUZ\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"sm\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--sm');\n\n                case 3:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using md', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @size=\"md\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"8v1QA640\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"md\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--md');\n\n                case 3:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when using lg', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  _context16.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @size=\"lg\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"YzpN3IzW\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@label\\\"],[\\\"lg\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--lg');\n\n                case 3:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('it renders with loading state', function () {\n      (0, _qunit.test)('when using default loading', /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n          var btn;\n          return regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  _context17.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @size=\"sm\" @loading=\"true\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"bbFX4oZC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@loading\\\",\\\"@label\\\"],[\\\"sm\\\",\\\"true\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  btn = document.querySelector('.upf-btn');\n                  assert.equal(btn === null || btn === void 0 ? void 0 : btn.children[0].className, 'fas fa-circle-notch fa-spin');\n\n                case 4:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17);\n        }));\n\n        return function (_x17) {\n          return _ref18.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('it renders a square button', function () {\n      (0, _qunit.test)('when setting the square parameter to true', /*#__PURE__*/function () {\n        var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n          return regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  _context18.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @square=\"true\" @label=\"Test\" />\n                  */\n                  {\n                    \"id\": \"Glv72jWC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@square\\\",\\\"@label\\\"],[\\\"true\\\",\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-square-btn').exists();\n\n                case 3:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18);\n        }));\n\n        return function (_x18) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('it renders with the right theme', function () {\n      (0, _qunit.test)('it adds the right class for usage on dark theme', /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n          return regeneratorRuntime.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  _context19.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @label=\"Test\" @theme=\"dark\" />\n                  */\n                  {\n                    \"id\": \"94FrZ0h9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@theme\\\"],[\\\"Test\\\",\\\"dark\\\"]],null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-btn').hasClass('upf-btn--dark-bg');\n\n                case 3:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19);\n        }));\n\n        return function (_x19) {\n          return _ref20.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('it renders countDown', function (hooks) {\n      hooks.beforeEach(function () {\n        this.intlService = this.owner.lookup('service:intl');\n      });\n      (0, _qunit.test)('when clicking, it trigger the countdown', /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  this.callback = function () {};\n\n                  _context20.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @label=\"Test\" @countDown={{hash callback=this.callback}} />\n                  */\n                  {\n                    \"id\": \"r9MPPvfk\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"callback\\\"],[[30,0,[\\\"callback\\\"]]]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context20.next = 5;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 5:\n                  assert.dom('.upf-btn--default').hasText(this.intlService.t('oss-components.button.cancel_message', {\n                    time: 5\n                  }));\n\n                case 6:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20, this);\n        }));\n\n        return function (_x20) {\n          return _ref21.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when clicking, it executes callback at the end of the countdown', /*#__PURE__*/function () {\n        var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n          return regeneratorRuntime.wrap(function _callee21$(_context21) {\n            while (1) {\n              switch (_context21.prev = _context21.next) {\n                case 0:\n                  this.callback = _sinon.default.stub().callsFake(function () {});\n                  _context21.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @label=\"Test\" @countDown={{hash callback=this.callback time=50 step=10}} />\n                  */\n                  {\n                    \"id\": \"sSLBUBKu\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"callback\\\",\\\"time\\\",\\\"step\\\"],[[30,0,[\\\"callback\\\"]],50,10]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context21.next = 5;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 5:\n                  _context21.next = 7;\n                  return (0, _testHelpers.waitUntil)(function () {\n                    var _document$querySelect, _document$querySelect2;\n\n                    return (_document$querySelect = document.querySelector('.upf-btn--default')) === null || _document$querySelect === void 0 ? void 0 : (_document$querySelect2 = _document$querySelect.textContent) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.includes('Test');\n                  }, {\n                    timeout: 1000\n                  });\n\n                case 7:\n                  assert.true(this.callback.calledOnce);\n\n                case 8:\n                case \"end\":\n                  return _context21.stop();\n              }\n            }\n          }, _callee21, this);\n        }));\n\n        return function (_x21) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('when clicking again, it cancels the countdown', /*#__PURE__*/function () {\n        var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(assert) {\n          return regeneratorRuntime.wrap(function _callee22$(_context22) {\n            while (1) {\n              switch (_context22.prev = _context22.next) {\n                case 0:\n                  this.callback = function () {};\n\n                  _context22.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @label=\"Test\" @countDown={{hash callback=this.callback}} />\n                  */\n                  {\n                    \"id\": \"r9MPPvfk\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"callback\\\"],[[30,0,[\\\"callback\\\"]]]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context22.next = 5;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 5:\n                  _context22.next = 7;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 7:\n                  assert.dom('.upf-btn--default').hasText('Test');\n\n                case 8:\n                case \"end\":\n                  return _context22.stop();\n              }\n            }\n          }, _callee22, this);\n        }));\n\n        return function (_x22) {\n          return _ref23.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it fails if @label and @icon are missing', /*#__PURE__*/function () {\n        var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(assert) {\n          return regeneratorRuntime.wrap(function _callee23$(_context23) {\n            while (1) {\n              switch (_context23.prev = _context23.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Button] You must pass either a @label or an @icon argument.');\n                  });\n                  _context23.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button />\n                  */\n                  {\n                    \"id\": \"kGb/PEqR\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/button\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context23.stop();\n              }\n            }\n          }, _callee23);\n        }));\n\n        return function (_x23) {\n          return _ref24.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it fails if callback missing for @countDown argument', /*#__PURE__*/function () {\n        var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(assert) {\n          return regeneratorRuntime.wrap(function _callee24$(_context24) {\n            while (1) {\n              switch (_context24.prev = _context24.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, \"Assertion Failed: [component][OSS::Button] You must pass either a hash with 'callback' value to @countDown argument.\");\n                  });\n                  _context24.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Button @label=\"Test\" @countDown={{hash time=1000}} />\n                  */\n                  {\n                    \"id\": \"0TJpu4LE\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@countDown\\\"],[\\\"Test\\\",[28,[37,1],null,[[\\\"time\\\"],[1000]]]]],null]],[],false,[\\\"o-s-s/button\\\",\\\"hash\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context24.stop();\n              }\n            }\n          }, _callee24);\n        }));\n\n        return function (_x24) {\n          return _ref25.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/checkbox-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/checkbox', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = function () {};\n    });\n    (0, _qunit.test)('it renders correctly', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.checked = false;\n                _context.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Checkbox @checked={{this.checked}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"T2jqiRvX\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.upf-checkbox input').isNotChecked();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the size arg is handled correctly', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Checkbox @checked={{true}} @onChange={{this.onChange}} @size=\"sm\" />\n                */\n                {\n                  \"id\": \"cYE059jY\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\",\\\"@size\\\"],[true,[30,0,[\\\"onChange\\\"]],\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-checkbox').hasClass('upf-checkbox--sm');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it is correctly updated when the checked argument changes', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.checked = false;\n                _context3.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Checkbox @checked={{this.checked}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"T2jqiRvX\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                this.set('checked', true);\n                assert.dom('.upf-checkbox input').isChecked();\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('disabled state is handled correctly', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        var onChangeSpy;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                onChangeSpy = _sinon.default.spy(this.onChange);\n                _context4.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Checkbox @checked={{false}} @onChange={{this.onChange}} @disabled={{true}} />\n                */\n                {\n                  \"id\": \"/+afY3qJ\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\",\\\"@disabled\\\"],[false,[30,0,[\\\"onChange\\\"]],true]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.upf-checkbox input').hasAttribute('disabled');\n                _context4.next = 6;\n                return (0, _testHelpers.click)('.upf-checkbox');\n\n              case 6:\n                assert.ok(onChangeSpy.neverCalledWith());\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the onChange hooks is called with the new value', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.checked = false;\n\n                this.onChange = function (value) {\n                  assert.equal(value, true);\n                };\n\n                _context5.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Checkbox @checked={{this.checked}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"T2jqiRvX\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context5.next = 6;\n                return (0, _testHelpers.click)('.upf-checkbox');\n\n              case 6:\n                assert.expect(1);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@partial argument', function () {\n      (0, _qunit.test)('it is correctly updated when the partial argument changes', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.checked = true;\n                  this.partial = false;\n                  _context6.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Checkbox @checked={{this.checked}} @partial={{this.partial}} @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"Sxgc0e+y\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@partial\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"partial\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  assert.dom('.upf-checkbox__fake-checkbox').hasNoClass('upf-checkbox__fake-checkbox--partial');\n                  assert.dom('.upf-checkbox input').isChecked();\n                  this.set('partial', true);\n                  assert.dom('.upf-checkbox__fake-checkbox').hasClass('upf-checkbox__fake-checkbox--partial');\n\n                case 8:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if checked is truthy and partial is truthy, the checkbox is partially checked', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.checked = true;\n                  this.partial = true;\n                  _context7.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Checkbox @checked={{this.checked}} @partial={{this.partial}} @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"Sxgc0e+y\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@partial\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"partial\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  assert.dom('.upf-checkbox__fake-checkbox').hasClass('upf-checkbox__fake-checkbox--partial');\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if checked is truthy and partial is falsy, the checkbox is totally checked', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.checked = true;\n                  this.partial = false;\n                  _context8.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Checkbox @checked={{this.checked}} @partial={{this.partial}} @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"Sxgc0e+y\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@partial\\\",\\\"@onChange\\\"],[[30,0,[\\\"checked\\\"]],[30,0,[\\\"partial\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  assert.dom('.upf-checkbox__fake-checkbox').hasNoClass('upf-checkbox__fake-checkbox--partial');\n\n                case 5:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if checked argument is missing', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (error) {\n                    assert.equal(error.message, 'Assertion Failed: [component][OSS::Checkbox] Boolean @checked argument is mandatory.');\n                  });\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Checkbox />\n                  */\n                  {\n                    \"id\": \"yovpgGqB\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if checked argument is missing', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (error) {\n                    assert.equal(error.message, 'Assertion Failed: [component][OSS::Checkbox] @onChange argument is mandatory.');\n                  });\n                  _context10.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Checkbox @checked={{true}} />\n                  */\n                  {\n                    \"id\": \"q03HGh60\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\"],[true]],null]],[],false,[\\\"o-s-s/checkbox\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/chip-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/chip\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _chip, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/chip', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onRemove = function () {};\n\n      this.label = 'Test';\n    });\n    (0, _qunit.module)('Default behavior', function () {\n      (0, _qunit.test)('basic render', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"ZUsPR75P\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-chip').exists();\n                  assert.dom('.upf-chip span').exists();\n                  assert.dom('.upf-chip i').exists();\n                  assert.dom('.upf-chip').hasClass('upf-chip--default');\n                  assert.dom('.upf-chip span').hasText(this.label);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it renders the proper label when @label is passed', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"ZUsPR75P\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-chip').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-chip').hasText('Test');\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The component is disabled if the @disabled parameter is truthy', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} @disabled={{true}} />\n                  */\n                  {\n                    \"id\": \"nTNgy53m\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@disabled\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]],true]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-chip').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-chip').hasClass('upf-chip--disabled');\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@maxDisplayWidth', function () {\n      (0, _qunit.test)('The component adds an ellispsis if the label is wider than @maxDisplayWidth', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label=\"Test with a huge label sentence\" @onRemove={{this.onRemove}} @maxDisplayWidth={{100}} />\n                  */\n                  {\n                    \"id\": \"tOK3qF3L\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@maxDisplayWidth\\\"],[\\\"Test with a huge label sentence\\\",[30,0,[\\\"onRemove\\\"]],100]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-chip').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-chip span').hasStyle({\n                    maxWidth: '100px',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When the param is not set', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label=\"Test with a huge label sentence\" @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"1B2yY/7G\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[\\\"Test with a huge label sentence\\\",[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-chip').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-chip span').doesNotHaveAttribute('style');\n                  assert.dom('.upf-chip').hasText('Test with a huge label sentence');\n\n                case 5:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('On cross click event', function (hooks) {\n      hooks.beforeEach(function () {\n        this.onRemove = _sinon.default.stub();\n      });\n      (0, _qunit.test)('When clicking on the close icon, the component triggers the @onRemove method', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"ZUsPR75P\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context6.next = 4;\n                  return (0, _testHelpers.click)('.upf-chip i');\n\n                case 4:\n                  assert.true(this.onRemove.calledOnce);\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When @disabled is true and clicking on the close icon, the component no triggers the @onRemove method', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label={{this.label}} @onRemove={{this.onRemove}} @disabled={{true}} />\n                  */\n                  {\n                    \"id\": \"nTNgy53m\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@onRemove\\\",\\\"@disabled\\\"],[[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]],true]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context7.next = 4;\n                  return (0, _testHelpers.click)('.upf-chip i');\n\n                case 4:\n                  assert.true(this.onRemove.notCalled);\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    Object.keys(_chip.SkinDefinition).forEach(function (skin) {\n      (0, _qunit.test)(\"it sets the right class when using a supported skin: \".concat(skin), /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.skin = skin;\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @skin={{this.skin}} @label={{this.label}} @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"5KCB8khU\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\",\\\"@onRemove\\\"],[[30,0,[\\\"skin\\\"]],[30,0,[\\\"label\\\"]],[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-chip').exists();\n                  assert.dom('.upf-chip').hasClass(\"upf-chip--\".concat(_chip.SkinDefinition[this.skin]));\n\n                case 5:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('It throws an error if @onRemove is not passed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Chip] The parameter @onRemove of type function is mandatory');\n                  });\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @label={{this.label}} />\n                  */\n                  {\n                    \"id\": \"Mey2yObq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[[30,0,[\\\"label\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It throws an error if @label is not passed', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Chip] The @label parameter is mandatory');\n                  });\n                  _context10.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Chip @onRemove={{this.onRemove}} />\n                  */\n                  {\n                    \"id\": \"tJYeXa74\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onRemove\\\"],[[30,0,[\\\"onRemove\\\"]]]],null]],[],false,[\\\"o-s-s/chip\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/code-block-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/code-block', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.codeBlock = codeExample;\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock />\n                */\n                {\n                  \"id\": \"uNffFben\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.code-block').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The code content is displayed properly', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        var codeLines;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} />\n                */\n                {\n                  \"id\": \"TLGf4ySp\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\"],[[30,0,[\\\"codeBlock\\\"]]]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                codeLines = (0, _testHelpers.findAll)('.code-block code');\n                assert.equal(codeLines.length, 60);\n                assert.dom(codeLines[0]).hasText(\"import Component from '@glimmer/component';\");\n                assert.dom(codeLines[1]).hasText(\"import { action } from '@ember/object';\");\n                assert.dom(codeLines[2]).hasText(\"import { inject as service } from '@ember/service';\");\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If copyable parameter is set, the copy button is visible', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @copyable={{true}} />\n                */\n                {\n                  \"id\": \"OxouE7go\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@copyable\\\"],[[30,0,[\\\"codeBlock\\\"]],true]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.code-block .floating-copy-btn').exists();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the copy button copies the code into the users clipboard', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        var stubClipboard;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                stubClipboard = _sinon.default.stub(navigator.clipboard, 'writeText');\n                _context4.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @copyable={{true}} />\n                */\n                {\n                  \"id\": \"OxouE7go\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@copyable\\\"],[[30,0,[\\\"codeBlock\\\"]],true]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context4.next = 5;\n                return (0, _testHelpers.click)('.code-block .floating-copy-btn .upf-btn');\n\n              case 5:\n                assert.ok(stubClipboard.calledOnceWithExactly(this.codeBlock));\n\n                _sinon.default.restore();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('if onCopyMessage is set, it shows a toast message when the code is copied', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        var stubToast;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _sinon.default.stub(navigator.clipboard, 'writeText');\n\n                _context5.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @copyable={{true}} @onCopyMessage={{'Copied!'}} />\n                */\n                {\n                  \"id\": \"Cl2ibQ/o\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@copyable\\\",\\\"@onCopyMessage\\\"],[[30,0,[\\\"codeBlock\\\"]],true,\\\"Copied!\\\"]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                stubToast = _sinon.default.stub(this.owner.lookup('service:toast'), 'success');\n                _context5.next = 6;\n                return (0, _testHelpers.click)('.code-block .floating-copy-btn .upf-btn');\n\n              case 6:\n                assert.ok(stubToast.calledOnceWithExactly('Copied!', ''));\n\n                _sinon.default.restore();\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If scrollable parameter is set, the component is scrollable', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @scrollable={{true}} />\n                */\n                {\n                  \"id\": \"8SLQaJ+P\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@scrollable\\\"],[[30,0,[\\\"codeBlock\\\"]],true]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.code-container.scrollable').exists();\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If scrollable parameter is unset, the component shows the bottom shadow', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} />\n                */\n                {\n                  \"id\": \"TLGf4ySp\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\"],[[30,0,[\\\"codeBlock\\\"]]]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.code-container.scroll-shadow').exists();\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If collapseHeight is set, the height of the component is equal to the param size', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n                */\n                {\n                  \"id\": \"SmSWApT7\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.code-container').hasStyle({\n                  height: '100px'\n                });\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If collapseHeight is set, the uncollapse button is visible', /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n                */\n                {\n                  \"id\": \"SmSWApT7\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.floating-collapse-btn').exists();\n                assert.dom('.floating-collapse-btn').hasText('Uncollapse');\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x9) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the uncollapse button doubles the components height', /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n                */\n                {\n                  \"id\": \"SmSWApT7\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context10.next = 4;\n                return (0, _testHelpers.click)('.floating-collapse-btn');\n\n              case 4:\n                assert.dom('.code-container').hasStyle({\n                  height: '200px'\n                });\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x10) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the collapse button resets the height to the original collapseHeight parameter height', /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{102}} />\n                */\n                {\n                  \"id\": \"T8P20GUv\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],102]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context11.next = 4;\n                return (0, _testHelpers.click)('.floating-collapse-btn');\n\n              case 4:\n                assert.dom('.code-container').hasStyle({\n                  height: '204px'\n                });\n                _context11.next = 7;\n                return (0, _testHelpers.click)('.floating-collapse-btn');\n\n              case 7:\n                assert.dom('.code-container').hasStyle({\n                  height: '102px'\n                });\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x11) {\n        return _ref12.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the uncollapse button show the collapse button', /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CodeBlock @content={{this.codeBlock}} @collapseHeight={{100}} />\n                */\n                {\n                  \"id\": \"SmSWApT7\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@content\\\",\\\"@collapseHeight\\\"],[[30,0,[\\\"codeBlock\\\"]],100]],null]],[],false,[\\\"o-s-s/code-block\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context12.next = 4;\n                return (0, _testHelpers.click)('.floating-collapse-btn');\n\n              case 4:\n                assert.dom('.floating-collapse-btn').hasText('Collapse');\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      return function (_x12) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n  });\n  var codeExample = \"import Component from '@glimmer/component';\\nimport { action } from '@ember/object';\\nimport { inject as service } from '@ember/service';\\nimport { tracked } from '@glimmer/tracking';\\nimport ToastService from '@upfluence/oss-components/services/toast';\\n\\ninterface OSSCodeBlockArgs {\\n  content: string;\\n  copyable?: boolean;\\n  scrollable?: boolean;\\n  collapseHeight?: number;\\n  onCopyMessage?: string;\\n}\\n\\nexport default class OSSCodeBlock extends Component<OSSCodeBlockArgs> {\\n  @tracked collapsable: boolean = false;\\n  @tracked collapsed: boolean = true;\\n  @tracked componentHeight: number = 0;\\n  @service declare toast: ToastService;\\n\\n  constructor(owner: unknown, args: OSSCodeBlockArgs) {\\n    super(owner, args);\\n    if (this.args.collapseHeight) {\\n      this.componentHeight = this.args.collapseHeight;\\n      this.collapsable = true;\\n    }\\n  }\\n\\n  get heightStyle(): string | null {\\n    if (this.args.collapseHeight) {\\n      return `height: ${this.componentHeight}px;`;\\n    }\\n    return null;\\n  }\\n\\n  get codeLineArray(): string[] {\\n    return (this.args.content || '').split(/\\r?\\n/);\\n  }\\n\\n  @action\\n  copyToClipboard(): void {\\n    navigator.clipboard.writeText(this.args.content);\\n    if (this.args.onCopyMessage) {\\n      this.toast.success(this.args.onCopyMessage, '');\\n    }\\n  }\\n\\n  @action\\n  collapse(): void {\\n    this.collapsed = true;\\n    this.componentHeight = this.componentHeight / 2;\\n  }\\n\\n  @action\\n  uncollapse(): void {\\n    this.collapsed = false;\\n    this.componentHeight = this.componentHeight * 2;\\n  }\\n}\";\n});","define(\"dummy/tests/integration/components/o-s-s/content-panel-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/content-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ContentPanel/>\n                */\n                {\n                  \"id\": \"Byhkzt6H\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/content-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-content-panel').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The content named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::ContentPanel>\n                        <p>This is the content</p>\n                      </OSS::ContentPanel>\n                */\n                {\n                  \"id\": \"bGdO06Em\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]]],[],false,[\\\"o-s-s/content-panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-content-panel').hasText('This is the content');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/copy-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/copy', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Copy />\n                */\n                {\n                  \"id\": \"VIh3pNOR\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-btn--default').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders when inline value is specified', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Copy @inline={{true}} />\n                */\n                {\n                  \"id\": \"nSNPh4A4\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@inline\\\"],[true]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-copy--inline').exists();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the tooltip has correct wording', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Copy />\n                */\n                {\n                  \"id\": \"VIh3pNOR\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context3.next = 4;\n                return assert.tooltip('.upf-btn--default').hasTitle('Copy');\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('when clicking', function (hooks) {\n      hooks.beforeEach(function () {\n        this.toastService = this.owner.lookup('service:toast');\n      });\n      hooks.afterEach(function () {\n        _sinon.default.restore();\n      });\n      (0, _qunit.test)('the info toast is rendered', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          var toastInfoStub;\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _sinon.default.stub(navigator.clipboard, 'writeText').resolves();\n\n                  toastInfoStub = _sinon.default.stub(this.toastService, 'info').resolves();\n                  _context4.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Copy @value=\"test\" />\n                  */\n                  {\n                    \"id\": \"sxKYnsUK\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context4.next = 6;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 6:\n                  assert.true(toastInfoStub.calledOnceWithExactly('Successfully copied to your clipboard.', 'Copied to clipboard'));\n\n                case 7:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the error toast is rendered', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          var toastErrorStub;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _sinon.default.stub(navigator.clipboard, 'writeText').rejects();\n\n                  toastErrorStub = _sinon.default.stub(this.toastService, 'error').resolves();\n                  _context5.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Copy @value=\"test\" />\n                  */\n                  {\n                    \"id\": \"sxKYnsUK\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context5.next = 6;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 6:\n                  assert.true(toastErrorStub.calledOnceWithExactly('Failed to copy to your clipboard. Please try again.', 'Error'));\n\n                case 7:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the clipboard writeText method is called', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var writeTextStub;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  writeTextStub = _sinon.default.stub(navigator.clipboard, 'writeText').resolves();\n\n                  _sinon.default.stub(this.toastService, 'info').resolves();\n\n                  this.textForCopy = 'test';\n                  _context6.next = 5;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Copy @value={{this.textForCopy}} />\n                  */\n                  {\n                    \"id\": \"5AS9AVtQ\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"textForCopy\\\"]]]],null]],[],false,[\\\"o-s-s/copy\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 5:\n                  _context6.next = 7;\n                  return (0, _testHelpers.click)('.upf-btn--default');\n\n                case 7:\n                  assert.true(writeTextStub.calledOnceWithExactly(this.textForCopy));\n\n                case 8:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/country-selector-test\", [\"@ember/template-factory\", \"@ember/test-helpers/setup-onerror\", \"@ember/test-helpers/settled\", \"sinon\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/utils/country-codes\", \"@ember/object\", \"@ember/test-helpers/dom/trigger-key-event\"], function (_templateFactory, _setupOnerror, _settled, _sinon, _qunit, _emberQunit, _testHelpers, _countryCodes, _object, _triggerKeyEvent) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/country-selector', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      var _this = this;\n\n      this.value = '';\n\n      this.onchange = function (value) {\n        (0, _object.set)(_this, 'value', value.alpha2);\n      };\n\n      this.countries = _countryCodes.countries;\n      this.provinces = [{\n        name: 'Alabama',\n        code: 'AL'\n      }, {\n        name: 'Alaska',\n        code: 'AK'\n      }, {\n        name: 'American Samoa',\n        code: 'AS'\n      }];\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                */\n                {\n                  \"id\": \"pidsqG4b\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.ok(true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('When clicking on the input, the dropdown menu opens', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                */\n                {\n                  \"id\": \"pidsqG4b\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context2.next = 4;\n                return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n              case 4:\n                assert.dom('.upf-infinite-select').exists();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('If @value is passed', function () {\n      (0, _qunit.test)('If the value matches an entry from the sourceList, then the input is set to the value', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} @value=\"FR\" />\n                  */\n                  {\n                    \"id\": \"hVmZIwMw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]],\\\"FR\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('France');\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the component is in country mode, an alpha2 code will be matched in the @sourceList', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} @value=\"US\" />\n                  */\n                  {\n                    \"id\": \"biChmx1h\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]],\\\"US\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('United States');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the component is in province mode, a code as @value will be matched in the @sourceList', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} @value=\"AL\" />\n                  */\n                  {\n                    \"id\": \"N9viSXvT\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]],\\\"AL\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Alabama');\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the component is in province mode, a province name as @value will be matched in the @sourceList', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} @value=\"Alaska\" />\n                  */\n                  {\n                    \"id\": \"TGppdeXR\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]],\\\"Alaska\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Alaska');\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the value matches an entry from the sourceList, the @onChange function is triggered', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.onchange = _sinon.default.spy();\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} @value=\"FR\" />\n                  */\n                  {\n                    \"id\": \"hVmZIwMw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\",\\\"@value\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]],\\\"FR\\\"]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.ok(this.onchange.calledOnceWith({\n                    id: 'FR',\n                    alpha2: 'FR',\n                    alpha3: 'FRA',\n                    countryCallingCodes: ['33'],\n                    currencies: ['EUR'],\n                    name: 'France',\n                    showOnTop: true\n                  }));\n\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Dropdown menu', function () {\n      (0, _qunit.test)('It displays all items from the @sourceList parameter', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          var rows;\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                  */\n                  {\n                    \"id\": \"pidsqG4b\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context8.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 4:\n                  rows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  assert.equal(rows.length, this.countries.length);\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if @sourceList contain ids, then country icons are displayed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                  */\n                  {\n                    \"id\": \"pidsqG4b\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 4:\n                  assert.dom('.upf-infinite-select__item' + ' .fflag.fflag-US').exists();\n\n                case 5:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('If @sourceList contains ids, then the country placeholder is displayed', /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                */\n                {\n                  \"id\": \"pidsqG4b\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Select your country');\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x10) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('if sourceList does not contain ids, then the placeholder is for provinces', /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} />\n                */\n                {\n                  \"id\": \"S/NPQyCd\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Select your province/state');\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x11) {\n        return _ref12.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('When clicking on an item', function () {\n      (0, _qunit.test)('When selecting an item, the dropdown is closed', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} />\n                  */\n                  {\n                    \"id\": \"S/NPQyCd\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context12.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 4:\n                  _context12.next = 6;\n                  return (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n\n                case 6:\n                  assert.dom('.upf-infinite-select').doesNotExist();\n\n                case 7:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When clicking outside of the dropdown, the dropdown is closed', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.provinces}} />\n                  */\n                  {\n                    \"id\": \"S/NPQyCd\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context13.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 4:\n                  _context13.next = 6;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 6:\n                  assert.dom('.upf-infinite-select').doesNotExist();\n\n                case 7:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the input is updated with the value', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @value={{this.value}} @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                  */\n                  {\n                    \"id\": \"QKVGNn0l\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context14.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 4:\n                  _context14.next = 6;\n                  return (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n\n                case 6:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('United States');\n\n                case 7:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the @onChange method is triggered with the selected value', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  this.onchange = _sinon.default.spy();\n                  _context15.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                  */\n                  {\n                    \"id\": \"pidsqG4b\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context15.next = 5;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 5:\n                  _context15.next = 7;\n                  return (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(2)');\n\n                case 7:\n                  assert.ok(this.onchange.calledWith({\n                    id: 'FR',\n                    alpha2: 'FR',\n                    alpha3: 'FRA',\n                    countryCallingCodes: ['33'],\n                    currencies: ['EUR'],\n                    name: 'France',\n                    showOnTop: true\n                  }));\n\n                case 8:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15, this);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the component is using Countries as @sourceList, the flag icon is visible in the input', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  _context16.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @value={{this.value}} @onChange={{this.onchange}} @sourceList={{this.countries}} />\n                  */\n                  {\n                    \"id\": \"QKVGNn0l\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onchange\\\"]],[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context16.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 4:\n                  _context16.next = 6;\n                  return (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n\n                case 6:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('United States');\n                  assert.dom('[data-control-name=\"country-selector-input\"] .fflag.fflag-US').exists();\n\n                case 8:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the component is using Provinces as @sourceList, the flag icon is not visible in the input', /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n          var _this2 = this;\n\n          return regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  this.province = '';\n\n                  this.onProvinceChange = function (value) {\n                    (0, _object.set)(_this2, 'province', value.name);\n                  };\n\n                  _context17.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @value={{this.province}} @onChange={{this.onProvinceChange}} @sourceList={{this.provinces}} />\n                  */\n                  {\n                    \"id\": \"ueIkdnSI\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"province\\\"]],[30,0,[\\\"onProvinceChange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context17.next = 6;\n                  return (0, _testHelpers.click)('[data-control-name=\"country-selector-input\"]');\n\n                case 6:\n                  _context17.next = 8;\n                  return (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n\n                case 8:\n                  assert.dom('[data-control-name=\"country-selector-input\"]').hasText('Alabama');\n                  assert.dom('[data-control-name=\"country-selector-input\"] .fflag.fflag-US').doesNotExist();\n\n                case 10:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17, this);\n        }));\n\n        return function (_x17) {\n          return _ref18.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Keyboard control management', function () {\n      (0, _qunit.test)('on keydown Enter should open the dropdown', /*#__PURE__*/function () {\n        var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n          var _this3 = this;\n\n          return regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  this.onProvinceChange = function (value) {\n                    (0, _object.set)(_this3, 'province', value.name);\n                  };\n\n                  _context18.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @value={{this.province}} @onChange={{this.onProvinceChange}} @sourceList={{this.provinces}} />\n                  */\n                  {\n                    \"id\": \"ueIkdnSI\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@sourceList\\\"],[[30,0,[\\\"province\\\"]],[30,0,[\\\"onProvinceChange\\\"]],[30,0,[\\\"provinces\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-infinite-select').doesNotExist();\n                  _context18.next = 6;\n                  return (0, _triggerKeyEvent.default)('[data-control-name=\"country-selector-input\"]', 'keydown', 'Enter');\n\n                case 6:\n                  assert.dom('.upf-infinite-select').exists();\n\n                case 7:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18, this);\n        }));\n\n        return function (_x18) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('error management', function () {\n      (0, _qunit.test)('it throws an error if @sourceList is not provided', /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n          return regeneratorRuntime.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  (0, _setupOnerror.default)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::CountrySelector] The parameter @sourceList of type object is mandatory');\n                  });\n                  _context19.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @onChange={{this.onchange}} />\n                  */\n                  {\n                    \"id\": \"hH/Wd9Iz\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onchange\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context19.next = 5;\n                  return (0, _settled.default)();\n\n                case 5:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19);\n        }));\n\n        return function (_x19) {\n          return _ref20.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if @onChange is not provided', /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  (0, _setupOnerror.default)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::CountrySelector] The @onChange parameter is mandatory');\n                  });\n                  _context20.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CountrySelector @sourceList={{this.countries}} />\n                  */\n                  {\n                    \"id\": \"7V+jm2PD\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@sourceList\\\"],[[30,0,[\\\"countries\\\"]]]],null]],[],false,[\\\"o-s-s/country-selector\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context20.next = 5;\n                  return (0, _settled.default)();\n\n                case 5:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20);\n        }));\n\n        return function (_x20) {\n          return _ref21.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/currency-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/currency-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.value = 0;\n                this.currency = '';\n                _context.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"5irjHw3/\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                assert.dom('.currency-input-container').exists();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The passed @value parameter is properly displayed in the input', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput @value=\"12341234\" @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"2+cL3cXM\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[\\\"12341234\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('input').hasValue('12341234');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It properly loads the correct currency when the @currency parameter is defined', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput @currency=\"EUR\" @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"hYOv4yHZ\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@onChange\\\"],[\\\"EUR\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.currency-selector').hasText('€');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It displays an error message below the component if @errorMessage is passed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput @onChange={{this.onChange}} @errorMessage=\"This is an error message\" />\n                */\n                {\n                  \"id\": \"qcfHM8jA\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],\\\"This is an error message\\\"]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.currency-input-container').containsText('This is an error message');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It displays an red border around the component if @errorMessage exists', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput @onChange={{this.onChange}} @errorMessage=\"This is an error message\" />\n                */\n                {\n                  \"id\": \"qcfHM8jA\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],\\\"This is an error message\\\"]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.currency-input-container').hasStyle({\n                  borderColor: 'rgb(27, 30, 33)'\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Currency selector', function () {\n      (0, _qunit.test)('Clicking on the currency symbol button opens the currency selector', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"9MBQx8DN\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context6.next = 4;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 4:\n                  assert.dom('.upf-infinite-select').exists();\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Selecting a new currency in the Currency selector triggers the onChange method', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.currency = '';\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"nLgQ/BIs\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context7.next = 5;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 5:\n                  clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  _context7.next = 8;\n                  return (0, _testHelpers.click)(clickableRows[4]);\n\n                case 8:\n                  assert.true(this.onChange.calledOnceWithExactly('AUD', 0));\n\n                case 9:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Selecting a new currency in the selector triggers the onChange method', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.currency = '';\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @onlyCurrency={{true}} @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"SuZDIBzi\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onlyCurrency\\\",\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context8.next = 5;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 5:\n                  clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  _context8.next = 8;\n                  return (0, _testHelpers.click)(clickableRows[4]);\n\n                case 8:\n                  assert.true(this.onChange.calledOnceWithExactly('AUD', 0));\n\n                case 9:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Typing in the search input filters the results', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"9MBQx8DN\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 4:\n                  assert.dom('.upf-infinite-select').exists();\n                  _context9.next = 7;\n                  return (0, _testHelpers.typeIn)('.upf-infinite-select input', 'usd');\n\n                case 7:\n                  clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  assert.equal(clickableRows.length, 1);\n                  assert.dom(clickableRows[0]).hasText('$ USD');\n\n                case 10:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Searching by currency symbol works', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"9MBQx8DN\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context10.next = 4;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 4:\n                  assert.dom('.upf-infinite-select').exists();\n                  _context10.next = 7;\n                  return (0, _testHelpers.typeIn)('.upf-infinite-select input', '€');\n\n                case 7:\n                  clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  assert.equal(clickableRows.length, 1);\n                  assert.dom(clickableRows[0]).hasText('€ EUR');\n\n                case 10:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The passed @currency parameter changes are properly tracked in the input', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  this.currency = 'USD';\n                  _context11.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"nLgQ/BIs\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.currency-selector').hasText('$');\n                  this.set('currency', 'EUR');\n                  assert.dom('.currency-selector').hasText('€');\n\n                case 6:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, this);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The currency selection is disabled if @allowCurrencyUpdate is falsy', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  this.currency = 'USD';\n                  _context12.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}} @allowCurrencyUpdate={{false}} />\n                  */\n                  {\n                    \"id\": \"cMBclQ+F\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@allowCurrencyUpdate\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.currency-selector .far.fa-chevron-down').doesNotExist();\n                  _context12.next = 6;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 6:\n                  assert.dom('.upf-infinite-select').doesNotExist();\n\n                case 7:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, this);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing the @allowedCurrencies parameter overwrites the selectable options', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  this.allowedCurrencies = [{\n                    code: 'USD',\n                    symbol: '$'\n                  }, {\n                    code: 'EUR',\n                    symbol: '€'\n                  }];\n                  _context13.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency={{this.currency}} @value=\"\" @onChange={{this.onChange}}\n                                                           @allowedCurrencies={{this.allowedCurrencies}} />\n                  */\n                  {\n                    \"id\": \"GbmyG37x\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@allowedCurrencies\\\"],[[30,0,[\\\"currency\\\"]],\\\"\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"allowedCurrencies\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context13.next = 5;\n                  return (0, _testHelpers.click)('.currency-selector');\n\n                case 5:\n                  clickableRows = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  assert.equal(clickableRows.length, 2);\n\n                case 7:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13, this);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Currency Input', function () {\n      (0, _qunit.test)('Typing numbers in the currency input triggers the onChange method', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"9MBQx8DN\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context14.next = 4;\n                  return (0, _testHelpers.typeIn)('input', '8');\n\n                case 4:\n                  assert.ok(this.onChange.calledOnce);\n                  assert.dom('input').hasValue('08');\n\n                case 6:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14, this);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Typing non-numeric characters does not apply changes', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency=\"\" @value=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"9MBQx8DN\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context15.next = 4;\n                  return (0, _testHelpers.typeIn)('input', '8');\n\n                case 4:\n                  assert.ok(this.onChange.calledOnce); // @ts-ignore\n\n                  _context15.next = 7;\n                  return (0, _testHelpers.triggerKeyEvent)('input', 'keydown', 'A', {\n                    code: 'a'\n                  });\n\n                case 7:\n                  assert.dom('input').hasValue('08');\n\n                case 8:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15, this);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Placeholder is correctly displayed when provided', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  _context16.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @currency=\"\" @value=\"\" @placeholder=\"foobar\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"Wj98Tqq4\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@value\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",\\\"foobar\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('input').hasAttribute('placeholder', 'foobar');\n\n                case 3:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('When @onlyCurrency is truthy, only the currency is displayed', /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput @currency=\"USD\" @onlyCurrency={{true}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"g6yukpR6\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@currency\\\",\\\"@onlyCurrency\\\",\\\"@onChange\\\"],[\\\"USD\\\",true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.currency-input-container').exists();\n                assert.dom('.currency-selector').hasText('$ USD');\n                assert.dom('.currency-input input').doesNotExist();\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      return function (_x17) {\n        return _ref18.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('When the paste event is received', function (hooks) {\n      hooks.beforeEach(function () {\n        this.value = '1234567890';\n      });\n      (0, _qunit.test)('The value stored in the clipboard is inserted in the input', /*#__PURE__*/function () {\n        var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n          return regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  _context18.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @onChange={{this.onChange}} @value={{this.value}} />\n                  */\n                  {\n                    \"id\": \"e0hCyllX\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('input').hasValue('1234567890');\n                  _context18.next = 5;\n                  return (0, _testHelpers.triggerEvent)('input', 'paste', {\n                    clipboardData: {\n                      getData: _sinon.default.stub().returns('123')\n                    }\n                  });\n\n                case 5:\n                  assert.dom('input').hasValue('1234567890123');\n\n                case 6:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18);\n        }));\n\n        return function (_x18) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The non-numeric characters are escaped', /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n          return regeneratorRuntime.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  _context19.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @onChange={{this.onChange}} @value={{this.value}} />\n                  */\n                  {\n                    \"id\": \"e0hCyllX\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('input').hasValue('1234567890');\n                  _context19.next = 5;\n                  return (0, _testHelpers.triggerEvent)('input', 'paste', {\n                    clipboardData: {\n                      getData: _sinon.default.stub().returns('1withletter0')\n                    }\n                  });\n\n                case 5:\n                  assert.dom('input').hasValue('123456789010');\n\n                case 6:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19);\n        }));\n\n        return function (_x19) {\n          return _ref20.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When selection is applied, it replaces the selection', /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n          var input;\n          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  _context20.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::CurrencyInput @onChange={{this.onChange}} @value={{this.value}} />\n                  */\n                  {\n                    \"id\": \"e0hCyllX\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('input').hasValue('1234567890');\n                  input = document.querySelector('input.ember-text-field');\n                  input.setSelectionRange(4, 6);\n                  _context20.next = 7;\n                  return (0, _testHelpers.triggerEvent)('input', 'paste', {\n                    clipboardData: {\n                      getData: _sinon.default.stub().returns('0')\n                    }\n                  });\n\n                case 7:\n                  assert.dom('input').hasValue('123407890');\n\n                case 8:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20);\n        }));\n\n        return function (_x20) {\n          return _ref21.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('It throws an error if @onChange is not passed', /*#__PURE__*/function () {\n      var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [component][OSS::CurrencyInput] The parameter @onChange of type function is mandatory');\n                });\n                _context21.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::CurrencyInput />\n                */\n                {\n                  \"id\": \"fTeJDQ52\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/currency-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      return function (_x21) {\n        return _ref22.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/email-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/email-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput @value=\"\" />\n                */\n                {\n                  \"id\": \"JeKarLpE\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-container').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the @placeholder', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput @value=\"\" @placeholder=\"test\" />\n                */\n                {\n                  \"id\": \"S3JUHPlK\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@placeholder\\\"],[\\\"\\\",\\\"test\\\"]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-container input').hasProperty('placeholder', 'test');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it displays the error message when the @errorMessage is non-empty', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput @value=\"\" @errorMessage=\"This is the error message\" />\n                */\n                {\n                  \"id\": \"MdXDK3ky\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@errorMessage\\\"],[\\\"\\\",\\\"This is the error message\\\"]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n                assert.dom('.text-color-error').hasText('This is the error message');\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the email regex isnt matched, then the error message is displayed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.value = '';\n                _context4.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput @value={{this.value}} />\n                */\n                {\n                  \"id\": \"b8/5HUPm\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context4.next = 5;\n                return (0, _testHelpers.typeIn)('input', 'foo@f');\n\n              case 5:\n                assert.dom('.text-color-error').hasText('Please enter a valid email address.');\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the email regex is matched, and the @validates method is passed, then the status of the validation is returned', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.value = 'john.doe@example.com';\n\n                this.validates = function (x) {\n                  assert.equal(x, true);\n                };\n\n                _context5.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput @value={{this.value}} @validates={{this.validates}} />\n                */\n                {\n                  \"id\": \"eX/S6D2B\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context5.next = 6;\n                return (0, _testHelpers.typeIn)('input', 'a');\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the email regex isnt matched, and the @validates method is passed, then the status of the validation is returned', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.value = 'foo@f';\n\n                this.validates = function (x) {\n                  assert.equal(x, false);\n                };\n\n                _context6.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput @value={{this.value}} @validates={{this.validates}} />\n                */\n                {\n                  \"id\": \"eX/S6D2B\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context6.next = 6;\n                return (0, _testHelpers.typeIn)('input', 'a');\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it throws an error when the @value parameter is missing', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [component][OSS::EmailInput] The @value parameter is mandatory');\n                });\n                _context7.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::EmailInput />\n                */\n                {\n                  \"id\": \"zxW5nQ4Y\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('for the @onChange method', function (hooks) {\n      hooks.beforeEach(function () {\n        this.value = '';\n        this.onChange = _sinon.default.stub();\n      });\n      (0, _qunit.test)('it is called when a new character is typed', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::EmailInput @value={{this.value}} @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"d06cBB/s\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context8.next = 4;\n                  return (0, _testHelpers.typeIn)('input', 'a');\n\n                case 4:\n                  assert.true(this.onChange.calledOnceWithExactly('a'));\n\n                case 5:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it returns null value', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  this.value = null;\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::EmailInput @value={{this.value}} @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"d06cBB/s\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context9.next = 5;\n                  return (0, _testHelpers.triggerKeyEvent)('input', 'keyup', 'Backspace');\n\n                case 5:\n                  assert.true(this.onChange.calledOnceWithExactly(null));\n\n                case 6:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if defined, it transforms the result to lowercase', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::EmailInput @value={{this.value}} @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"d06cBB/s\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/email-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context10.next = 4;\n                  return (0, _testHelpers.typeIn)('input', 'A');\n\n                case 4:\n                  assert.true(this.onChange.calledOnceWithExactly('a'));\n\n                case 5:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/icon-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var STYLE_CLASSES = {\n    solid: 'fas',\n    regular: 'far',\n    light: 'fal',\n    duotone: 'fad',\n    brand: 'fab'\n  };\n  (0, _qunit.module)('Integration | Component | o-s-s/icon', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Icon @icon=\"fa-laptop-code\" />\n                */\n                {\n                  \"id\": \"WMPyIf2l\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fa-laptop-code\\\"]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('i').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the correct icon class', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Icon @icon=\"fa-code-merge\" />\n                */\n                {\n                  \"id\": \"QEtQpkZb\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fa-code-merge\\\"]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('i').hasClass('fa-code-merge');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)(\"it renders the correct default style class\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Icon @icon=\"fa-code-merge\" />\n                */\n                {\n                  \"id\": \"QEtQpkZb\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fa-code-merge\\\"]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('i').hasClass('far');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    var _loop = function _loop() {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      (0, _qunit.test)(\"it renders the correct style \".concat(key, \" class\"), /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.style = key;\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Icon @icon=\"fa-code-merge\" @style={{this.style}} />\n                  */\n                  {\n                    \"id\": \"cZDX1Uio\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@style\\\"],[\\\"fa-code-merge\\\",[30,0,[\\\"style\\\"]]]],null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('i').hasClass(value);\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    };\n\n    for (var _i = 0, _Object$entries = Object.entries(STYLE_CLASSES); _i < _Object$entries.length; _i++) {\n      _loop();\n    }\n\n    (0, _qunit.test)('it throws an error if icon argument is missing', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (error) {\n                  assert.equal(error.message, 'Assertion Failed: [component][OSS::Icon] The @icon parameter is mandatory');\n                });\n                _context5.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Icon />\n                */\n                {\n                  \"id\": \"tq0ZKiIP\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/icon\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/illustration-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/illustration\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _illustration) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/illustration', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Illustration @src=\"/@upfluence/oss-components/assets/images/no-records.svg\" />\n                */\n                {\n                  \"id\": \"EU+1SYUL\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@src\\\"],[\\\"/@upfluence/oss-components/assets/images/no-records.svg\\\"]],null]],[],false,[\\\"o-s-s/illustration\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('object').hasAttribute('data', '/@upfluence/oss-components/assets/images/no-records.svg');\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the style is inserted', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        var _querySelector;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Illustration @src=\"/@upfluence/oss-components/assets/images/no-records.svg\" />\n                */\n                {\n                  \"id\": \"EU+1SYUL\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@src\\\"],[\\\"/@upfluence/oss-components/assets/images/no-records.svg\\\"]],null]],[],false,[\\\"o-s-s/illustration\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context2.next = 4;\n                return (0, _testHelpers.waitUntil)(function () {\n                  var _contentDocument;\n\n                  return (_contentDocument = (0, _testHelpers.find)('object').contentDocument) === null || _contentDocument === void 0 ? void 0 : _contentDocument.querySelector('svg');\n                });\n\n              case 4:\n                _context2.next = 6;\n                return (0, _testHelpers.settled)();\n\n              case 6:\n                assert.equal((_querySelector = (0, _testHelpers.find)('object').contentDocument.querySelector('svg style')) === null || _querySelector === void 0 ? void 0 : _querySelector.textContent, \":root { \".concat((0, _illustration.extractCSSVars)().join(';'), \" }\"));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/infinite-select-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  function _isFocused(element) {\n    return element === document.activeElement;\n  }\n\n  var FAKE_DATA = [{\n    name: 'Batman',\n    characters: 'Bruce Wayne'\n  }, {\n    name: 'Superman',\n    characters: 'Kal-El'\n  }, {\n    name: 'Green Arrow',\n    characters: 'Oliver Queen'\n  }, {\n    name: 'Wonder Woman',\n    characters: 'Princess Diana'\n  }, {\n    name: 'Martian Manhunter',\n    characters: 'Martian Manhunter'\n  }, {\n    name: 'Robin/Nightwing',\n    characters: 'Dick Grayson'\n  }, {\n    name: 'Spider Man',\n    characters: 'Peter Parker'\n  }, {\n    name: 'Iron Man',\n    characters: 'Tony Stark'\n  }, {\n    name: 'Thor',\n    characters: 'Thor Odinson'\n  }, {\n    name: 'Hulk',\n    characters: 'Bruce Banner'\n  }, {\n    name: 'Wolverine',\n    characters: 'James Howlett'\n  }];\n  (0, _qunit.module)('Integration | Component | o-s-s/infinite-select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('search is enabled', function () {\n      (0, _qunit.module)('with onSearch hook', function () {\n        (0, _qunit.test)('it calls the onSearch hook with the typed keyword', /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    this.onSearch = function (keyword) {\n                      assert.equal(keyword, 'b', 'Enters the onSearch hook');\n                    };\n\n                    this.onSelect = function () {};\n\n                    _context.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect\n                                    @items={{this.items}} @searchEnabled={{true}} @onSearch={{this.onSearch}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"A+xk1fOU\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSearch\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select input.upf-input').exists();\n                    _context.next = 7;\n                    return (0, _testHelpers.typeIn)('.upf-infinite-select input.upf-input', 'b');\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it uses the passed placeholder when present', /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    this.onSearch = function () {};\n\n                    this.onSelect = function () {};\n\n                    _context2.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                                <OSS::InfiniteSelect\n                                  @items={{this.items}} @searchEnabled={{true}} @onSearch={{this.onSearch}} @searchPlaceholder=\"Foobar\"\n                                  @onSelect={{this.onSelect}}/>\n                              \n                    */\n                    {\n                      \"id\": \"yJxTUFmU\",\n                      \"block\": \"[[[1,\\\"\\\\n            \\\"],[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSearch\\\",\\\"@searchPlaceholder\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,[30,0,[\\\"onSearch\\\"]],\\\"Foobar\\\",[30,0,[\\\"onSelect\\\"]]]],null],[1,\\\"\\\\n          \\\"]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select input.upf-input').exists();\n                    assert.dom('.upf-infinite-select input.upf-input').hasAttribute('placeholder', 'Foobar');\n\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('item selection', function () {\n      (0, _qunit.module)('onSelect is passed', function () {\n        (0, _qunit.test)('it calls the onSelect hook with the clicked item', /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function (item) {\n                      assert.equal(item.name, 'Batman');\n                    };\n\n                    _context3.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"gIdGigRo\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    _context3.next = 6;\n                    return (0, _testHelpers.click)('.upf-infinite-select__items-container .upf-infinite-select__item:first-child');\n\n                  case 6:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('loading states', function () {\n      (0, _qunit.module)('full content loading', function () {\n        (0, _qunit.test)('should display rows of skeleton loading in place of the content', /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context4.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @loading={{true}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"p2NtsN7q\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@loading\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').doesNotExist();\n                    assert.dom('.upf-infinite-select__items-container .upf-skeleton-effect').exists({\n                      count: 5\n                    });\n\n                  case 6:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          return function (_x4) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('additional content loading', function () {\n        (0, _qunit.test)('should display rows of skeleton loading after the existing content', /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context5.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @loadingMore={{true}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"We6mmpAk\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@loadingMore\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').exists({\n                      count: FAKE_DATA.length\n                    });\n                    assert.dom('.upf-infinite-select__items-container .upf-skeleton-effect').exists({\n                      count: 3\n                    });\n\n                  case 6:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n\n          return function (_x5) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('it renders', function () {\n      (0, _qunit.module)('with itemLabel', function () {\n        (0, _qunit.test)('it uses the passed itemLabel argument as display key', /*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n            var displayedNames;\n            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context6.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @itemLabel=\"characters\" @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"LpTz8Czx\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@itemLabel\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],\\\"characters\\\",false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').exists({\n                      count: FAKE_DATA.length\n                    });\n                    displayedNames = [];\n                    document.querySelectorAll('.upf-infinite-select__items-container .upf-infinite-select__item').forEach(function (x) {\n                      displayedNames.push(x.textContent.trim());\n                    });\n                    assert.deepEqual(displayedNames, FAKE_DATA.map(function (x) {\n                      return x.characters;\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6, this);\n          }));\n\n          return function (_x6) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('with option block', function () {\n        (0, _qunit.test)('it uses the passed block to display options', /*#__PURE__*/function () {\n          var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n            var displayedNames;\n            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context7.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                                <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}>\n                                  <:option as |opt|>\n                                    Comics - {{opt.name}}\n                                  </:option>\n                                </OSS::InfiniteSelect>\n                              \n                    */\n                    {\n                      \"id\": \"lUNIBoWy\",\n                      \"block\": \"[[[1,\\\"\\\\n            \\\"],[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n                Comics - \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n              \\\"]],[1]]]]],[1,\\\"\\\\n          \\\"]],[\\\"opt\\\"],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select__items-container .upf-infinite-select__item').exists({\n                      count: FAKE_DATA.length\n                    });\n                    displayedNames = [];\n                    document.querySelectorAll('.upf-infinite-select__items-container .upf-infinite-select__item').forEach(function (x) {\n                      displayedNames.push(x.textContent.trim());\n                    });\n                    assert.deepEqual(displayedNames, FAKE_DATA.map(function (x) {\n                      return \"Comics - \".concat(x.name);\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7, this);\n          }));\n\n          return function (_x7) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('with empty items', function () {\n        (0, _qunit.test)('it should render the empty state', /*#__PURE__*/function () {\n          var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    this.items = [];\n\n                    this.onSelect = function () {};\n\n                    _context8.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"gIdGigRo\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select__items-container').hasClass('upf-infinite-select__items-container--empty');\n                    assert.dom('.upf-infinite-select__items-container object').hasAttribute('data', '/@upfluence/oss-components/assets/images/no-records.svg');\n\n                  case 6:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8, this);\n          }));\n\n          return function (_x8) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('with inline', function () {\n        (0, _qunit.test)('it should render with undefined arg', /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context9.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"gIdGigRo\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select.upf-infinite-select--absolute').exists({\n                      count: 1\n                    });\n\n                  case 5:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9, this);\n          }));\n\n          return function (_x9) {\n            return _ref10.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it should render with falsy arg', /*#__PURE__*/function () {\n          var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context10.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"zzIePxnW\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select.upf-infinite-select--absolute').exists({\n                      count: 1\n                    });\n\n                  case 5:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, _callee10, this);\n          }));\n\n          return function (_x10) {\n            return _ref11.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it should render with truthy arg', /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n            return regeneratorRuntime.wrap(function _callee11$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    this.items = FAKE_DATA;\n\n                    this.onSelect = function () {};\n\n                    _context11.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{true}} @searchEnabled={{false}} @onSelect={{this.onSelect}}/>\n                    */\n                    {\n                      \"id\": \"q+XPnrbu\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],true,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    assert.dom('.upf-infinite-select').exists({\n                      count: 1\n                    });\n                    assert.dom('.upf-infinite-select--absolute').doesNotExist();\n\n                  case 6:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, _callee11, this);\n          }));\n\n          return function (_x11) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('with onBottomReached', function () {\n      (0, _qunit.test)('it should trigger onBottomReach function', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          var _this = this;\n\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  this.items = FAKE_DATA;\n\n                  this.onSelect = function () {};\n\n                  this.loadingMore = false;\n                  this.onBottomReached = _sinon.default.stub().callsFake(function () {\n                    _this.set('loadingMore', true);\n                  });\n                  _context12.next = 6;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                                 @loadingMore={{this.loadingMore}} @onBottomReached={{this.onBottomReached}} />\n                          \n                  */\n                  {\n                    \"id\": \"wXNkRgmo\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@loadingMore\\\",\\\"@onBottomReached\\\"],[[30,0,[\\\"items\\\"]],false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"loadingMore\\\"]],[30,0,[\\\"onBottomReached\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 6:\n                  _context12.next = 8;\n                  return (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n\n                case 8:\n                  this.set('loadingMore', false);\n                  _context12.next = 11;\n                  return (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n\n                case 11:\n                  assert.ok(this.onBottomReached.calledTwice);\n\n                case 12:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, this);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Keyboard control management', function (hooks) {\n      hooks.beforeEach(function () {\n        this.items = FAKE_DATA;\n\n        this.onSelect = function () {};\n\n        this.onSearch = function () {};\n      });\n      (0, _qunit.module)('If keyboard is disabled', function () {\n        (0, _qunit.test)('The first element should not be focused on load', /*#__PURE__*/function () {\n          var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n            return regeneratorRuntime.wrap(function _callee13$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}} />\n                    */\n                    {\n                      \"id\": \"zzIePxnW\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n\n                  case 3:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, _callee13);\n          }));\n\n          return function (_x13) {\n            return _ref14.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('The keyboard controls are disabled', /*#__PURE__*/function () {\n          var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n            return regeneratorRuntime.wrap(function _callee14$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}} />\n                    */\n                    {\n                      \"id\": \"zzIePxnW\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n                    _context14.next = 5;\n                    return (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'ArrowDown');\n\n                  case 5:\n                    assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n                    assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[1]));\n\n                  case 7:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _callee14);\n          }));\n\n          return function (_x14) {\n            return _ref15.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('If keyboard is enabled', function (hooks) {\n        hooks.beforeEach(function () {\n          this.enableKeyboard = true;\n        });\n        (0, _qunit.module)('If Search is enabled', function () {\n          (0, _qunit.test)('Search input should be focused', /*#__PURE__*/function () {\n            var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n              return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.next = 2;\n                      return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                      /*\n                        <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                           @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}}/>\n                      */\n                      {\n                        \"id\": \"wfn9YsGs\",\n                        \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                        \"moduleName\": \"(unknown template module)\",\n                        \"isStrictMode\": false\n                      }));\n\n                    case 2:\n                      assert.ok(_isFocused(document.querySelector('.upf-input')));\n                      assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n\n                    case 4:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15);\n            }));\n\n            return function (_x15) {\n              return _ref16.apply(this, arguments);\n            };\n          }());\n          (0, _qunit.test)('On keydown Enter it should focus the first element', /*#__PURE__*/function () {\n            var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n              return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      _context16.next = 2;\n                      return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                      /*\n                        <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                           @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}}/>\n                      */\n                      {\n                        \"id\": \"wfn9YsGs\",\n                        \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                        \"moduleName\": \"(unknown template module)\",\n                        \"isStrictMode\": false\n                      }));\n\n                    case 2:\n                      assert.ok(_isFocused(document.querySelector('.upf-input')));\n                      _context16.next = 5;\n                      return (0, _testHelpers.triggerKeyEvent)('.upf-input', 'keydown', 'Enter');\n\n                    case 5:\n                      assert.notOk(_isFocused(document.querySelector('.upf-input')));\n                      assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n\n                    case 7:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16);\n            }));\n\n            return function (_x16) {\n              return _ref17.apply(this, arguments);\n            };\n          }());\n          (0, _qunit.test)('On keydown ArrowDown it should focus the first element', /*#__PURE__*/function () {\n            var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.next = 2;\n                      return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                      /*\n                        <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                           @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}}/>\n                      */\n                      {\n                        \"id\": \"wfn9YsGs\",\n                        \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                        \"moduleName\": \"(unknown template module)\",\n                        \"isStrictMode\": false\n                      }));\n\n                    case 2:\n                      assert.ok(_isFocused(document.querySelector('.upf-input')));\n                      _context17.next = 5;\n                      return (0, _testHelpers.triggerKeyEvent)('.upf-input', 'keydown', 'ArrowDown');\n\n                    case 5:\n                      assert.notOk(_isFocused(document.querySelector('.upf-input')));\n                      assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n\n                    case 7:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17);\n            }));\n\n            return function (_x17) {\n              return _ref18.apply(this, arguments);\n            };\n          }());\n          (0, _qunit.test)('On keydown Enter it should call the onClose action', /*#__PURE__*/function () {\n            var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      this.onClose = _sinon.default.stub();\n                      _context18.next = 3;\n                      return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                      /*\n                        <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{true}} @onSelect={{this.onSelect}}\n                                                           @enableKeyboard={{this.enableKeyboard}} @onSearch={{this.onSearch}} @onClose={{this.onClose}}/>\n                      */\n                      {\n                        \"id\": \"QRdAmYC7\",\n                        \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onSearch\\\",\\\"@onClose\\\"],[[30,0,[\\\"items\\\"]],false,true,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                        \"moduleName\": \"(unknown template module)\",\n                        \"isStrictMode\": false\n                      }));\n\n                    case 3:\n                      assert.ok(_isFocused(document.querySelector('.upf-input')));\n                      assert.ok(this.onClose.notCalled);\n                      _context18.next = 7;\n                      return (0, _testHelpers.triggerKeyEvent)('.upf-input', 'keydown', 'Escape');\n\n                    case 7:\n                      assert.ok(this.onClose.calledOnce);\n\n                    case 8:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, this);\n            }));\n\n            return function (_x18) {\n              return _ref19.apply(this, arguments);\n            };\n          }());\n        });\n        (0, _qunit.test)('The first element should be focuses on load', /*#__PURE__*/function () {\n          var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n            return regeneratorRuntime.wrap(function _callee19$(_context19) {\n              while (1) {\n                switch (_context19.prev = _context19.next) {\n                  case 0:\n                    _context19.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                                       @enableKeyboard={{this.enableKeyboard}}/>\n                    */\n                    {\n                      \"id\": \"aghFVdQy\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n\n                  case 3:\n                  case \"end\":\n                    return _context19.stop();\n                }\n              }\n            }, _callee19);\n          }));\n\n          return function (_x19) {\n            return _ref20.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('On keydown ArrowUp & ArrowDown it should control the focused element', /*#__PURE__*/function () {\n          var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n            return regeneratorRuntime.wrap(function _callee20$(_context20) {\n              while (1) {\n                switch (_context20.prev = _context20.next) {\n                  case 0:\n                    _context20.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                                       @enableKeyboard={{this.enableKeyboard}}/>\n                    */\n                    {\n                      \"id\": \"aghFVdQy\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n                    _context20.next = 5;\n                    return (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'ArrowDown');\n\n                  case 5:\n                    assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n                    assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[1]));\n                    _context20.next = 9;\n                    return (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'ArrowUp');\n\n                  case 9:\n                    assert.notOk(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[1]));\n                    assert.ok(_isFocused(document.querySelectorAll('.upf-infinite-select__item')[0]));\n\n                  case 11:\n                  case \"end\":\n                    return _context20.stop();\n                }\n              }\n            }, _callee20);\n          }));\n\n          return function (_x20) {\n            return _ref21.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('On keydown Enter it should select the focused element', /*#__PURE__*/function () {\n          var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n            var el;\n            return regeneratorRuntime.wrap(function _callee21$(_context21) {\n              while (1) {\n                switch (_context21.prev = _context21.next) {\n                  case 0:\n                    this.onSelect = _sinon.default.stub();\n                    _context21.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                                       @enableKeyboard={{this.enableKeyboard}}/>\n                    */\n                    {\n                      \"id\": \"aghFVdQy\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    el = document.querySelectorAll('.upf-infinite-select__item')[0];\n                    assert.ok(_isFocused(el));\n                    assert.ok(this.onSelect.notCalled);\n                    _context21.next = 8;\n                    return (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'Enter');\n\n                  case 8:\n                    assert.ok(this.onSelect.calledOnceWith(FAKE_DATA[0]));\n\n                  case 9:\n                  case \"end\":\n                    return _context21.stop();\n                }\n              }\n            }, _callee21, this);\n          }));\n\n          return function (_x21) {\n            return _ref22.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('On keydown Tab/Escape it should call the onClose action', /*#__PURE__*/function () {\n          var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(assert) {\n            return regeneratorRuntime.wrap(function _callee22$(_context22) {\n              while (1) {\n                switch (_context22.prev = _context22.next) {\n                  case 0:\n                    this.onClose = _sinon.default.stub();\n                    _context22.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @inline={{false}} @searchEnabled={{false}} @onSelect={{this.onSelect}}\n                                                       @enableKeyboard={{this.enableKeyboard}} @onClose={{this.onClose}}/>\n                    */\n                    {\n                      \"id\": \"pPAwbaPG\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@inline\\\",\\\"@searchEnabled\\\",\\\"@onSelect\\\",\\\"@enableKeyboard\\\",\\\"@onClose\\\"],[[30,0,[\\\"items\\\"]],false,false,[30,0,[\\\"onSelect\\\"]],[30,0,[\\\"enableKeyboard\\\"]],[30,0,[\\\"onClose\\\"]]]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.ok(this.onClose.notCalled);\n                    _context22.next = 6;\n                    return (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'Tab');\n\n                  case 6:\n                    assert.ok(this.onClose.calledOnce);\n                    _context22.next = 9;\n                    return (0, _testHelpers.triggerKeyEvent)('.upf-infinite-select__items-container', 'keydown', 'Escape');\n\n                  case 9:\n                    assert.ok(this.onClose.calledTwice);\n\n                  case 10:\n                  case \"end\":\n                    return _context22.stop();\n                }\n              }\n            }, _callee22, this);\n          }));\n\n          return function (_x22) {\n            return _ref23.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.module)('On item selection, if onSelect is not passed', function () {\n        (0, _qunit.test)('it should throw an error', /*#__PURE__*/function () {\n          var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(assert) {\n            return regeneratorRuntime.wrap(function _callee23$(_context23) {\n              while (1) {\n                switch (_context23.prev = _context23.next) {\n                  case 0:\n                    (0, _testHelpers.setupOnerror)(function (err) {\n                      assert.equal(err.message, 'Assertion Failed: [component][OSS::InfiniteSelect] `onSelect` action is mandatory');\n                    });\n                    _context23.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{false}} />\n                    */\n                    {\n                      \"id\": \"SyTm9Gvd\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\"],[[30,0,[\\\"items\\\"]],false]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                  case \"end\":\n                    return _context23.stop();\n                }\n              }\n            }, _callee23);\n          }));\n\n          return function (_x23) {\n            return _ref24.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('When the search is enabled, if no onSearch hook has been passed', function () {\n        (0, _qunit.test)('should throw an error', /*#__PURE__*/function () {\n          var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(assert) {\n            return regeneratorRuntime.wrap(function _callee24$(_context24) {\n              while (1) {\n                switch (_context24.prev = _context24.next) {\n                  case 0:\n                    (0, _testHelpers.setupOnerror)(function (err) {\n                      assert.equal(err.message, 'Assertion Failed: [component][OSS::InfiniteSelect] Search is enabled without an `onSearch` action being passed');\n                    });\n                    _context24.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::InfiniteSelect @items={{this.items}} @searchEnabled={{true}} />\n                    */\n                    {\n                      \"id\": \"A7HOJpQU\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@items\\\",\\\"@searchEnabled\\\"],[[30,0,[\\\"items\\\"]],true]],null]],[],false,[\\\"o-s-s/infinite-select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                  case \"end\":\n                    return _context24.stop();\n                }\n              }\n            }, _callee24);\n          }));\n\n          return function (_x24) {\n            return _ref25.apply(this, arguments);\n          };\n        }());\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/input-container-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/input-container', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputContainer />\n                */\n                {\n                  \"id\": \"oeMIiOWr\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-input').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Input Blocks', function () {\n      function renderComponentWithPrefixSuffix() {\n        return _renderComponentWithPrefixSuffix.apply(this, arguments);\n      }\n\n      function _renderComponentWithPrefixSuffix() {\n        _renderComponentWithPrefixSuffix = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                        <OSS::InputContainer>\n                          <:prefix>\n                            <OSS::Icon @style=\"solid\" @icon=\"fa-user\" />\n                          </:prefix>\n                          <:input>\n                            <Input id=\"custom-input\"/>\n                          </:input>\n                          <:suffix>\n                            <OSS::Icon @style=\"solid\" @icon=\"fa-times\" />\n                          </:suffix>\n                        </OSS::InputContainer>\n                  */\n                  {\n                    \"id\": \"QB4gWFuj\",\n                    \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"prefix\\\",\\\"input\\\",\\\"suffix\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@style\\\",\\\"@icon\\\"],[\\\"solid\\\",\\\"fa-user\\\"]],null],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[8,[39,2],[[24,1,\\\"custom-input\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@style\\\",\\\"@icon\\\"],[\\\"solid\\\",\\\"fa-times\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/input-container\\\",\\\"o-s-s/icon\\\",\\\"input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n        return _renderComponentWithPrefixSuffix.apply(this, arguments);\n      }\n\n      (0, _qunit.test)('Passing a :prefix named-block renders the block properly', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return renderComponentWithPrefixSuffix();\n\n                case 2:\n                  assert.dom('.fa-user').exists();\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing a :suffix named-block renders the block properly', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return renderComponentWithPrefixSuffix();\n\n                case 2:\n                  assert.dom('.fa-times').exists();\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing an :input named-block overloads the default input', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return renderComponentWithPrefixSuffix();\n\n                case 2:\n                  assert.dom('#custom-input').exists();\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Component Parameters', function (hooks) {\n      var onValueChange;\n      hooks.beforeEach(function () {\n        onValueChange = _sinon.default.fake.returns(true);\n        this.set('value', 'testValue');\n        this.set('placeholder', 'Type your text');\n        this.set('onValueChange', onValueChange);\n      });\n\n      function renderComponentWithParameters() {\n        return _renderComponentWithParameters.apply(this, arguments);\n      }\n\n      function _renderComponentWithParameters() {\n        _renderComponentWithParameters = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::InputContainer @value={{this.value}}\n                                               @onChange={{this.onValueChange}}\n                                               @placeholder={{this.placeholder}} />\n                  */\n                  {\n                    \"id\": \"U5h/EO9U\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\",\\\"@placeholder\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onValueChange\\\"]],[30,0,[\\\"placeholder\\\"]]]],null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n        return _renderComponentWithParameters.apply(this, arguments);\n      }\n\n      (0, _qunit.test)('Passing a @value parameter works', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return renderComponentWithParameters();\n\n                case 2:\n                  assert.dom('.upf-input').hasValue('testValue');\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing a @placeholder parameter works', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          var inputElement;\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return renderComponentWithParameters();\n\n                case 2:\n                  inputElement = (0, _testHelpers.find)('.upf-input');\n                  assert.equal(inputElement.getAttribute('placeholder'), 'Type your text');\n\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing an @onChange method works and is triggered on input changes', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          var inputElement;\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return renderComponentWithParameters();\n\n                case 2:\n                  inputElement = (0, _testHelpers.find)('.upf-input');\n                  _context8.next = 5;\n                  return (0, _testHelpers.typeIn)(inputElement, 'a');\n\n                case 5:\n                  assert.ok(onValueChange.called);\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Extra attributes', function () {\n      (0, _qunit.test)('passing an extra class is applied to the component', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::InputContainer class=\"my-extra-class\" />\n                  */\n                  {\n                    \"id\": \"at22TSSJ\",\n                    \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.my-extra-class').exists();\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('passing data-control-name works', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          var inputWrapper;\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::InputContainer data-control-name=\"firstname-input\" />\n                  */\n                  {\n                    \"id\": \"w99BQPi5\",\n                    \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"firstname-input\\\"]],null,null]],[],false,[\\\"o-s-s/input-container\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  inputWrapper = (0, _testHelpers.find)('.oss-input-container');\n                  assert.equal(inputWrapper.getAttribute('data-control-name'), 'firstname-input');\n\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/input-group-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/input-group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup @prefix=\"username\" />\n                */\n                {\n                  \"id\": \"+oA6e7O6\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\"],[\\\"username\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Passing the @prefix parameter displays the input prefix', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup @prefix=\"username\" />\n                */\n                {\n                  \"id\": \"+oA6e7O6\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\"],[\\\"username\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group-row-prefix').hasText('username');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Passing the @suffix parameter displays the input suffix', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup @suffix=\"@domain.com\" />\n                */\n                {\n                  \"id\": \"WerzVWp9\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@suffix\\\"],[\\\"@domain.com\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group-row-suffix').hasText('@domain.com');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Passing the @suffix parameter displays the input suffix', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup @prefix=\"email\" @suffix=\"@domain.com\" />\n                */\n                {\n                  \"id\": \"GpsUUxDH\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\"],[\\\"email\\\",\\\"@domain.com\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group-row-prefix').hasText('email');\n                assert.dom('.oss-input-group-row-suffix').hasText('@domain.com');\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Passing the @errorMessage parameter displays the error message', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup @suffix=\"@domain.com\" @errorMessage=\"This is an error.\" />\n                */\n                {\n                  \"id\": \"wyA/V9ac\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@suffix\\\",\\\"@errorMessage\\\"],[\\\"@domain.com\\\",\\\"This is an error.\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group-row--error').exists();\n                assert.dom('.oss-input-group span').hasText('This is an error.');\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Passing the @errorMessage sets an error border on the whole compoenent', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup @prefix=\"random\" @suffix=\"@domain.com\" @errorMessage=\"This is an error.\" />\n                */\n                {\n                  \"id\": \"J7JJZHwB\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@errorMessage\\\"],[\\\"random\\\",\\\"@domain.com\\\",\\\"This is an error.\\\"]],null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group-row--error').exists();\n                assert.dom('.oss-input-group-row--error').hasStyle({\n                  borderColor: 'rgb(239, 68, 68)'\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it fails if no prefix or suffix parameters are passed', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [component][OSS::InputGroup] No @prefix or @suffix parameter were passed. If you are not going to use any, you should use an OSS::InputContainer.');\n                });\n                _context7.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::InputGroup />\n                */\n                {\n                  \"id\": \"QTKSqTC8\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/input-group\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/layout/sidebar-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/layout/sidebar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Layout::Sidebar />\n                */\n                {\n                  \"id\": \"+kVukCA1\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-sidebar--containers').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the logo when present', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        var _document$querySelect;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.logo = '/toto.png';\n                _context2.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Layout::Sidebar @logo={{this.logo}}/>\n                */\n                {\n                  \"id\": \"bgmYMeTw\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@logo\\\"],[[30,0,[\\\"logo\\\"]]]],null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.equal((_document$querySelect = document.querySelector('.oss-sidebar--containers .logo-container img')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('src'), '/toto.png');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Named block', function () {\n      (0, _qunit.test)('The content named-block is properly displayed', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::Layout::Sidebar>\n                            <:content>\n                              <p>This is the content</p>\n                            </:content>\n                          </OSS::Layout::Sidebar>\n                  */\n                  {\n                    \"id\": \"TTYR4eJB\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"content\\\"],[[[[1,\\\"\\\\n            \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-sidebar--content').hasText('This is the content');\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The footer named-block is properly displayed', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::Layout::Sidebar>\n                            <:footer>\n                              footer content\n                            </:footer>\n                          </OSS::Layout::Sidebar>\n                  */\n                  {\n                    \"id\": \"qht1s7E4\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"footer\\\"],[[[[1,\\\"\\\\n            footer content\\\\n          \\\"]],[]]]]]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-sidebar--footer').hasText('footer content');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Extra attributes', function () {\n      (0, _qunit.test)('passing an extra class is applied to the component', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar class=\"my-extra-class\" />\n                  */\n                  {\n                    \"id\": \"Jj0xlek7\",\n                    \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.my-extra-class').exists();\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('passing data-control-name works', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var inputWrapper;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar data-control-name=\"layout-sidebar\" />\n                  */\n                  {\n                    \"id\": \"twbuhNCK\",\n                    \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"layout-sidebar\\\"]],null,null]],[],false,[\\\"o-s-s/layout/sidebar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  inputWrapper = (0, _testHelpers.find)('.oss-sidebar--containers');\n                  assert.equal(inputWrapper === null || inputWrapper === void 0 ? void 0 : inputWrapper.getAttribute('data-control-name'), 'layout-sidebar');\n\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/layout/sidebar/item-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | oss/layout/sidebar/item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" />\n                */\n                {\n                  \"id\": \"LA23dVaz\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-sidebar-item').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the icon when present', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Layout::Sidebar::Item @icon=\"fal fa-search\" />\n                */\n                {\n                  \"id\": \"2C003WQI\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fal fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-sidebar-item .oss-sidebar-item--icon i').hasClass('fa-search');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Arguments', function () {\n      (0, _qunit.test)('Default value for locked is false', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\"/>\n                  */\n                  {\n                    \"id\": \"LA23dVaz\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-sidebar-item--locked').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When locked is true', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @locked={{true}}/>\n                  */\n                  {\n                    \"id\": \"CcotIReK\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@locked\\\"],[\\\"far fa-search\\\",true]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-sidebar-item--locked').exists();\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Default value for hasNotification is false', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\"/>\n                  */\n                  {\n                    \"id\": \"LA23dVaz\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-sidebar-item--notification').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When hasNotification is true', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @hasNotifications={{true}}/>\n                  */\n                  {\n                    \"id\": \"d4lA8yT2\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@hasNotifications\\\"],[\\\"far fa-search\\\",true]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-sidebar-item--notification').exists();\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Actions', function (hooks) {\n      hooks.beforeEach(function () {\n        this.defaultAction = _sinon.default.spy();\n        this.lockedAction = _sinon.default.spy();\n      });\n      (0, _qunit.test)('OnClick defaultAction is triggered', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @defaultAction={{this.defaultAction}} @lockedAction={{this.lockedAction}}/>\n                  */\n                  {\n                    \"id\": \"0MWtuUPe\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@defaultAction\\\",\\\"@lockedAction\\\"],[\\\"far fa-search\\\",[30,0,[\\\"defaultAction\\\"]],[30,0,[\\\"lockedAction\\\"]]]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context7.next = 4;\n                  return (0, _testHelpers.click)('.oss-sidebar-item');\n\n                case 4:\n                  assert.ok(this.defaultAction.calledOnce);\n                  assert.ok(this.lockedAction.notCalled);\n\n                case 6:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When locked is true lockedAction is triggered', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" @locked={{true}} @defaultAction={{this.defaultAction}} @lockedAction={{this.lockedAction}}/>\n                  */\n                  {\n                    \"id\": \"HvbD4VlW\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@locked\\\",\\\"@defaultAction\\\",\\\"@lockedAction\\\"],[\\\"far fa-search\\\",true,[30,0,[\\\"defaultAction\\\"]],[30,0,[\\\"lockedAction\\\"]]]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context8.next = 4;\n                  return (0, _testHelpers.click)('.oss-sidebar-item');\n\n                case 4:\n                  assert.ok(this.defaultAction.notCalled);\n                  assert.ok(this.lockedAction.calledOnce);\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Extra attributes', function () {\n      (0, _qunit.test)('passing an extra class is applied to the component', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" class=\"my-extra-class\" />\n                  */\n                  {\n                    \"id\": \"vipnknXz\",\n                    \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.my-extra-class').exists();\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('passing data-control-name works', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          var inputWrapper;\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Layout::Sidebar::Item @icon=\"far fa-search\" data-control-name=\"layout-sidebar\" />\n                  */\n                  {\n                    \"id\": \"OaSwikXn\",\n                    \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"layout-sidebar\\\"]],[[\\\"@icon\\\"],[\\\"far fa-search\\\"]],null]],[],false,[\\\"o-s-s/layout/sidebar/item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  inputWrapper = (0, _testHelpers.find)('.oss-sidebar-item');\n                  assert.equal(inputWrapper === null || inputWrapper === void 0 ? void 0 : inputWrapper.getAttribute('data-control-name'), 'layout-sidebar');\n\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/link-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders with icon only', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Link @icon=\"fab fa-facebook\" />\n                */\n                {\n                  \"id\": \"eQZicYur\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"fab fa-facebook\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-link i').hasClass('fa-facebook');\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders with label only', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Link @label=\"Super Label\" />\n                */\n                {\n                  \"id\": \"YDuE0ZRR\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Super Label\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-link span').hasText('Super Label');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders with both label and icon', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Link @icon=\"fab fa-facebook\" @label=\"Facebook\" />\n                */\n                {\n                  \"id\": \"VVEz+KAu\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fab fa-facebook\\\",\\\"Facebook\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-link i').hasClass('fa-facebook');\n                assert.dom('.upf-link span').hasClass('margin-left-xxx-sm');\n                assert.dom('.upf-link span').hasText('Facebook');\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it opens link with href and target', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        var windowOpenStub;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                windowOpenStub = _sinon.default.stub(window, 'open');\n                _context4.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Link @icon=\"fab fa-facebook\" @label=\"Facebook\" \n                                 @link={{hash href=\"https://www.google.fr\" target=\"_blank\"}} />\n                    \n                */\n                {\n                  \"id\": \"h5FjiSVl\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@link\\\"],[\\\"fab fa-facebook\\\",\\\"Facebook\\\",[28,[37,1],null,[[\\\"href\\\",\\\"target\\\"],[\\\"https://www.google.fr\\\",\\\"_blank\\\"]]]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/link\\\",\\\"hash\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context4.next = 5;\n                return (0, _testHelpers.click)('.upf-link');\n\n              case 5:\n                assert.true(windowOpenStub.calledOnceWithExactly('https://www.google.fr', '_blank'));\n\n                _sinon.default.restore();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it transits to the route', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        var transitionToStub;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                transitionToStub = _sinon.default.stub(this.owner.lookup('service:router'), 'transitionTo');\n                _context5.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Link @icon=\"fab fa-facebook\" @label=\"Facebook\" @transitionTo={{\"workflow.create\"}} />\n                */\n                {\n                  \"id\": \"JorAowEl\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\",\\\"@transitionTo\\\"],[\\\"fab fa-facebook\\\",\\\"Facebook\\\",\\\"workflow.create\\\"]],null]],[],false,[\\\"o-s-s/link\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context5.next = 5;\n                return (0, _testHelpers.click)('.upf-link');\n\n              case 5:\n                assert.true(transitionToStub.calledOnceWithExactly('workflow.create'));\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it fails if no label nor icon argument are present', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [component][OSS::Link] You must pass either a @label or an @icon argument.');\n                });\n                _context6.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Link />\n                */\n                {\n                  \"id\": \"yo7RrCus\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/link\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/modal-dialog-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/test-helpers/dom/click\", \"@ember/object\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon, _click, _object) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/modal-dialog', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.closeModal = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n                */\n                {\n                  \"id\": \"R8OOmDpm\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('On escape button the modal is closed', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n                */\n                {\n                  \"id\": \"R8OOmDpm\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context2.next = 4;\n                return (0, _testHelpers.triggerKeyEvent)('.oss-modal-dialog', 'keyup', 27);\n\n              case 4:\n                assert.ok(this.closeModal.calledOnce);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The cross button at the top right of the modal closes the modal', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n                */\n                {\n                  \"id\": \"R8OOmDpm\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context3.next = 4;\n                return (0, _click.default)('.fa-times');\n\n              case 4:\n                assert.ok(this.closeModal.calledOnce);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The title parameter is properly displayed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\" />\n                */\n                {\n                  \"id\": \"R8OOmDpm\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog .title').hasText('Example modal');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The subtitle parameter is properly displayed', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"Subtitle\" @close={{this.closeModal}} @size=\"md\" />\n                */\n                {\n                  \"id\": \"dsyWza2o\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"Subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog .subtitle').hasText('Subtitle');\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The illustration named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\">\n                        <:illustration>\n                          <p class=\"illustration-container\">Illustration</p>\n                        </:illustration>\n                      </OSS::ModalDialog>\n                */\n                {\n                  \"id\": \"PsIfCoFT\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],[[\\\"illustration\\\"],[[[[1,\\\"\\\\n          \\\"],[10,2],[14,0,\\\"illustration-container\\\"],[12],[1,\\\"Illustration\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.illustration-container').exists();\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The content named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\">\n                        <:content>\n                          <p>This is the content</p>\n                        </:content>\n                      </OSS::ModalDialog>\n                */\n                {\n                  \"id\": \"YaYyx/5I\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],[[\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog--content').hasText('This is the content');\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The footer named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::ModalDialog @title=\"Example modal\" @subtitle=\"subtitle\" @close={{this.closeModal}} @size=\"md\">\n                        <:footer>\n                          footer content\n                        </:footer>\n                      </OSS::ModalDialog>\n                */\n                {\n                  \"id\": \"X00aDNTK\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@size\\\"],[\\\"Example modal\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],\\\"md\\\"]],[[\\\"footer\\\"],[[[[1,\\\"\\\\n          footer content\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog footer').hasText('footer content');\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Queue management - if the @enqueue param is truthy', function () {\n      (0, _qunit.module)('When rendering two modals', function () {\n        (0, _qunit.test)('The second modal is not displayed', /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                  data-control-name=\"modal-a\" />\n                                  <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                  data-control-name=\"modal-b\" />\n                    */\n                    {\n                      \"id\": \"dOMwIZp5\",\n                      \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n              \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('[data-control-name=\"modal-a\"]').exists();\n                    assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n\n                  case 4:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9);\n          }));\n\n          return function (_x9) {\n            return _ref10.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('When Modal A is closed, Modal B is displayed', /*#__PURE__*/function () {\n          var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    this.helper = _object.default.create({\n                      displayModalA: true\n                    });\n                    _context10.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              {{#if this.helper.displayModalA}}\n                                <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                  data-control-name=\"modal-a\" />\n                              {{/if}}\n                              <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                data-control-name=\"modal-b\" />\n                    */\n                    {\n                      \"id\": \"su4Vj0Zu\",\n                      \"block\": \"[[[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"helper\\\",\\\"displayModalA\\\"]],[[[1,\\\"            \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"if\\\",\\\"o-s-s/modal-dialog\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('[data-control-name=\"modal-a\"]').exists();\n                    assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n                    _context10.next = 7;\n                    return (0, _click.default)('.fa-times');\n\n                  case 7:\n                    assert.ok(this.closeModal.calledOnce);\n                    this.helper.set('displayModalA', false);\n                    _context10.next = 11;\n                    return (0, _testHelpers.waitFor)('[data-control-name=\"modal-b\"]', {\n                      timeout: 1000\n                    });\n\n                  case 11:\n                    assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n                    assert.dom('[data-control-name=\"modal-b\"]').exists();\n\n                  case 13:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, _callee10, this);\n          }));\n\n          return function (_x10) {\n            return _ref11.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('When rendering multiple modals', function () {\n        (0, _qunit.test)('Only the first modal is displayed', /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n            return regeneratorRuntime.wrap(function _callee11$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::ModalDialog @title=\"MODAL C\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                  data-control-name=\"modal-c\" />\n                                  <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                    data-control-name=\"modal-b\" />\n                                  <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                    data-control-name=\"modal-a\" />\n                    */\n                    {\n                      \"id\": \"W8iKpBcg\",\n                      \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-c\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL C\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n              \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n              \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('[data-control-name=\"modal-c\"]').exists();\n                    assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n                    assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n\n                  case 5:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, _callee11);\n          }));\n\n          return function (_x11) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('Open & close modal flow check', /*#__PURE__*/function () {\n          var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n            return regeneratorRuntime.wrap(function _callee12$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    this.helper = _object.default.create({\n                      displayModalA: true,\n                      displayModalB: true,\n                      displayModalC: true\n                    });\n                    _context12.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                                {{#if this.helper.displayModalA}}\n                                  <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                    data-control-name=\"modal-a\" />\n                                {{/if}}\n                                {{#if this.helper.displayModalB}}\n                                  <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                    data-control-name=\"modal-b\" />\n                                {{/if}}\n                                {{#if this.helper.displayModalC}}\n                                  <OSS::ModalDialog @title=\"MODAL C\" @subtitle=\"subtitle\" @close={{this.closeModal}} @enqueue={{true}}\n                                                    data-control-name=\"modal-c\" />\n                                {{/if}}\n                              \n                    */\n                    {\n                      \"id\": \"CfXv864V\",\n                      \"block\": \"[[[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"helper\\\",\\\"displayModalA\\\"]],[[[1,\\\"              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[41,[30,0,[\\\"helper\\\",\\\"displayModalB\\\"]],[[[1,\\\"              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[41,[30,0,[\\\"helper\\\",\\\"displayModalC\\\"]],[[[1,\\\"              \\\"],[8,[39,1],[[24,\\\"data-control-name\\\",\\\"modal-c\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\",\\\"@enqueue\\\"],[\\\"MODAL C\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]],true]],null],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"]],[],false,[\\\"if\\\",\\\"o-s-s/modal-dialog\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('[data-control-name=\"modal-a\"]').exists();\n                    assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n                    assert.dom('[data-control-name=\"modal-c\"]').doesNotExist();\n                    _context12.next = 8;\n                    return (0, _click.default)('.fa-times');\n\n                  case 8:\n                    assert.ok(this.closeModal.calledOnce);\n                    this.helper.set('displayModalA', false);\n                    assert.false(this.helper.displayModalA);\n                    _context12.next = 13;\n                    return (0, _testHelpers.waitFor)('[data-control-name=\"modal-b\"]', {\n                      timeout: 1000\n                    });\n\n                  case 13:\n                    assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n                    assert.dom('[data-control-name=\"modal-b\"]').exists();\n                    assert.dom('[data-control-name=\"modal-c\"]').doesNotExist();\n                    _context12.next = 18;\n                    return (0, _click.default)('.fa-times');\n\n                  case 18:\n                    assert.ok(this.closeModal.calledTwice);\n                    this.helper.set('displayModalB', false);\n                    assert.false(this.helper.displayModalB);\n                    _context12.next = 23;\n                    return (0, _testHelpers.waitFor)('[data-control-name=\"modal-c\"]', {\n                      timeout: 1000\n                    });\n\n                  case 23:\n                    assert.dom('[data-control-name=\"modal-a\"]').doesNotExist();\n                    assert.dom('[data-control-name=\"modal-b\"]').doesNotExist();\n                    assert.dom('[data-control-name=\"modal-c\"]').exists();\n\n                  case 26:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, _callee12, this);\n          }));\n\n          return function (_x12) {\n            return _ref13.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.test)('If the enqueue parameter is falsy, rendering multiple modals opens all of them', /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ModalDialog @title=\"MODAL A\" @subtitle=\"subtitle\" @close={{this.closeModal}}\n                                            data-control-name=\"modal-a\" />\n                          <OSS::ModalDialog @title=\"MODAL B\" @subtitle=\"subtitle\" @close={{this.closeModal}}\n                                            data-control-name=\"modal-b\" />\n                */\n                {\n                  \"id\": \"mBFmuz22\",\n                  \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-a\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\"],[\\\"MODAL A\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]]]],null],[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,\\\"data-control-name\\\",\\\"modal-b\\\"]],[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@close\\\"],[\\\"MODAL B\\\",\\\"subtitle\\\",[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('[data-control-name=\"modal-a\"]').exists();\n                assert.dom('[data-control-name=\"modal-b\"]').exists();\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function (_x13) {\n        return _ref14.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('The component throws an error if the title parameter is not passed', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ModalDialog] The title parameter is mandatory');\n                  });\n                  _context14.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ModalDialog @close={{this.closeModal}}></OSS::ModalDialog>\n                  */\n                  {\n                    \"id\": \"1kjX3R5V\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The component throws an error if the close parameter is not passed', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ModalDialog] The close function is mandatory');\n                  });\n                  _context15.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ModalDialog @title=\"Test\"></OSS::ModalDialog>\n                  */\n                  {\n                    \"id\": \"jgNtFbQK\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test\\\"]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/modal-dialog\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/modal-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/modal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Modal @title=\"Test Modal\">\n                        <div class=\"modal-body\">\n                          Foo\n                        </div>\n                \n                        <div class=\"modal-footer\">\n                          Bar\n                        </div>\n                      </OSS::Modal>\n                    \n                */\n                {\n                  \"id\": \"DNvKY1zc\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@title\\\"],[\\\"Test Modal\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n          Foo\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n        \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n          Bar\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal(this.element.querySelector('.modal-title').textContent.trim(), 'Test Modal');\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('available options', function () {\n      (0, _qunit.module)('centered', function () {\n        (0, _qunit.test)('it should set the centered class on the modal dialog', /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Modal @title=\"Test Modal\" @options={{hash centered=true}}>\n                                <div class=\"modal-body\">\n                                  Foo\n                                </div>\n                    \n                                <div class=\"modal-footer\">\n                                  Bar\n                                </div>\n                              </OSS::Modal>\n                            \n                    */\n                    {\n                      \"id\": \"z6/SHIC1\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@options\\\"],[\\\"Test Modal\\\",[28,[37,1],null,[[\\\"centered\\\"],[true]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.modal-dialog').hasClass('modal-dialog--centered');\n\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('additional classes on the modal-dialog', function () {\n        (0, _qunit.test)('it should add the passed class on the modal dialog', /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Modal @title=\"Test Modal\" @options={{hash modalClass=\"foobar\"}}>\n                                <div class=\"modal-body\">\n                                  Foo\n                                </div>\n                    \n                                <div class=\"modal-footer\">\n                                  Bar\n                                </div>\n                              </OSS::Modal>\n                            \n                    */\n                    {\n                      \"id\": \"J1Uls4C9\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@options\\\"],[\\\"Test Modal\\\",[28,[37,1],null,[[\\\"modalClass\\\"],[\\\"foobar\\\"]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.modal-dialog').hasClass('foobar');\n\n                  case 3:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('borderless header', function () {\n        (0, _qunit.test)('it should add the good class on the modal dialog', /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Modal @title=\"Test Modal\" @options={{hash borderlessHeader=true}}>\n                                <div class=\"modal-body\">\n                                  Foo\n                                </div>\n                    \n                                <div class=\"modal-footer\">\n                                  Bar\n                                </div>\n                              </OSS::Modal>\n                            \n                    */\n                    {\n                      \"id\": \"yWgLrrkf\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@title\\\",\\\"@options\\\"],[\\\"Test Modal\\\",[28,[37,1],null,[[\\\"borderlessHeader\\\"],[true]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.modal-dialog .modal-header').hasClass('modal-header__borderless');\n\n                  case 3:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          return function (_x4) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('no header', function () {\n        (0, _qunit.test)('no header container is present', /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Modal @options={{hash header=false}}>\n                                <div class=\"modal-body\">\n                                  Foo\n                                </div>\n                    \n                                <div class=\"modal-footer\">\n                                  Bar\n                                </div>\n                              </OSS::Modal>\n                            \n                    */\n                    {\n                      \"id\": \"Tms9s1RG\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@options\\\"],[[28,[37,1],null,[[\\\"header\\\"],[false]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/modal\\\",\\\"hash\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.modal-dialog .modal-header').doesNotExist();\n\n                  case 3:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          }));\n\n          return function (_x5) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('keyboard shortcut', function () {\n      (0, _qunit.test)('it closes the modal on Escape key', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var _this = this;\n\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.display = true;\n\n                  this.onClose = function () {\n                    _this.set('display', false);\n                  };\n\n                  _context6.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          {{#if this.display}}\n                            <OSS::Modal @onClose={{this.onClose}}>\n                              <div class=\"modal-body\">\n                                Foo\n                              </div>\n                  \n                              <div class=\"modal-footer\">\n                                Bar\n                              </div>\n                            </OSS::Modal>\n                          {{/if}}\n                        \n                  */\n                  {\n                    \"id\": \"bJIdm3yq\",\n                    \"block\": \"[[[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"display\\\"]],[[[1,\\\"          \\\"],[8,[39,1],null,[[\\\"@onClose\\\"],[[30,0,[\\\"onClose\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"modal-body\\\"],[12],[1,\\\"\\\\n              Foo\\\\n            \\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[10,0],[14,0,\\\"modal-footer\\\"],[12],[1,\\\"\\\\n              Bar\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"      \\\"]],[],false,[\\\"if\\\",\\\"o-s-s/modal\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  assert.dom('.modal-dialog').exists();\n                  _context6.next = 7;\n                  return (0, _testHelpers.triggerKeyEvent)('.modal', 'keydown', 'Escape');\n\n                case 7:\n                  assert.dom('.modal-dialog').doesNotExist();\n\n                case 8:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/nav-tab-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/nav-tab', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onSelection = function () {};\n\n      this.tabArray = [];\n    });\n    (0, _qunit.module)('Default behavior', function () {\n      (0, _qunit.test)('basic render', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: 'Tab'\n                  });\n                  _context.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"3rporupq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.tab-container').exists();\n                  assert.dom('.tab-container .tab').exists();\n                  assert.dom('.tab-content span').exists();\n                  assert.dom('.tab-content span').hasText('Tab');\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Tab Icon displays properly', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: 'Tab',\n                    icon: 'far fa-thumbs-up'\n                  });\n                  _context2.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"3rporupq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.tab-container').exists();\n                  assert.dom('.tab-container .tab').exists();\n                  assert.dom('.tab-content span').exists();\n                  assert.dom('.tab-content i').exists();\n                  assert.dom('.tab-content i').hasClass('fa-thumbs-up');\n                  assert.dom('.tab-content span').hasText('Tab');\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Tab info-circle displays properly', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: 'Tab',\n                    infoCircle: true\n                  });\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"3rporupq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.tab-container').exists();\n                  assert.dom('.tab-container .tab').exists();\n                  assert.dom('.tab-content span').exists();\n                  assert.dom('.tab-content i').exists();\n                  assert.dom('.tab-content i').hasClass('fa-info-circle');\n                  assert.dom('.tab-content span').hasText('Tab');\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Tab notification dot displays properly', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: 'Tab',\n                    notificationDot: true\n                  });\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"3rporupq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.tab-container').exists();\n                  assert.dom('.tab-container .tab').exists();\n                  assert.dom('.tab-content .fas.fa-circle').exists();\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Tab displays selected state properly', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: 'Tab',\n                    selected: true\n                  });\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"3rporupq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.tab-container').exists();\n                  assert.dom('.tab-container .tab').exists();\n                  assert.dom('.tab-content span').exists();\n                  assert.dom('.tab-container .tab').hasClass('tab--selected');\n                  assert.dom('.tab-content span').hasText('Tab');\n\n                case 8:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Tab displays disabled state properly', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: 'Tab',\n                    disabled: true\n                  });\n                  _context6.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"3rporupq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.tab-container').exists();\n                  assert.dom('.tab-container .tab').exists();\n                  assert.dom('.tab-content span').exists();\n                  assert.dom('.tab-container .tab').hasClass('tab--disabled');\n                  assert.dom('.tab-content span').hasText('Tab');\n\n                case 8:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('When clicking on Tab element, the component triggers the @onSelection method', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.onSelection = _sinon.default.stub();\n                this.tabArray.push({\n                  label: 'Tab'\n                });\n                _context7.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::NavTab @tabArray={{this.tabArray}} @onSelection={{this.onSelection}} />\n                */\n                {\n                  \"id\": \"3rporupq\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\",\\\"@onSelection\\\"],[[30,0,[\\\"tabArray\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context7.next = 6;\n                return (0, _testHelpers.click)('.tab');\n\n              case 6:\n                assert.true(this.onSelection.calledOnce);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('It throws an error if @onSelection is not passed', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The parameter @onSelection of type function is mandatory');\n                  });\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @tabArray={{this.tabArray}} />\n                  */\n                  {\n                    \"id\": \"80YAqDFw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@tabArray\\\"],[[30,0,[\\\"tabArray\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It throws an error if @tabArray is not passed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The parameter @tabArray is mandatory');\n                  });\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @onSelection={{this.onSelection}} />\n                  */\n                  {\n                    \"id\": \"I2pERIWx\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\"],[[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The parameter @tabArray is mandatory');\n                  });\n                  _context9.next = 6;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @onSelection={{this.onSelection}} @tabArray=[] />\n                  */\n                  {\n                    \"id\": \"T89F5v39\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@tabArray\\\"],[[30,0,[\\\"onSelection\\\"]],\\\"[]\\\"]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 6:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It throws an error if @label and @icon is missing for any element in @tabArray', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.tabArray.push({\n                    label: '',\n                    icon: ''\n                  });\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::NavTab] The @label or @icon parameter is mandatory for each element in @tabArray');\n                  });\n                  _context10.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NavTab @onSelection={{this.onSelection}} @tabArray={{this.tabArray}} />\n                  */\n                  {\n                    \"id\": \"LwlFoY2r\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@tabArray\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"tabArray\\\"]]]],null]],[],false,[\\\"o-s-s/nav-tab\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/number-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/click\", \"@ember/test-helpers/dom/trigger-key-event\", \"@ember/test-helpers/dom/type-in\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _click, _triggerKeyEvent, _typeIn, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/number-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::NumberInput />\n                */\n                {\n                  \"id\": \"MfDNJImx\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.number-input').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@value parameter', function () {\n      (0, _qunit.test)('If none present, the default value is 0', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0');\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the value is passed, it is set in the input', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @value={{42}} />\n                  */\n                  {\n                    \"id\": \"3oVdohPO\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[42]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('42');\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@step parameter', function () {\n      (0, _qunit.test)('If none present, the default step is 1', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0');\n                  _context4.next = 5;\n                  return (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('1');\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the step is passed, it is used when increasing the value', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @step={{5}} />\n                  */\n                  {\n                    \"id\": \"AI6CfaMh\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@step\\\"],[5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0');\n                  _context5.next = 5;\n                  return (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('5');\n\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If the step is passed, it is used when decreasing the value', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @step={{5}} />\n                  */\n                  {\n                    \"id\": \"AI6CfaMh\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@step\\\"],[5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0');\n                  _context6.next = 5;\n                  return (0, _click.default)('.upf-square-btn:nth-of-type(1)');\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('-5');\n\n                case 6:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Value increase', function () {\n      (0, _qunit.test)('+ button increases the value by the step', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0');\n                  _context7.next = 5;\n                  return (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('1');\n\n                case 6:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Up arrow increases the value by the step', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0'); // @ts-ignore\n\n                  _context8.next = 5;\n                  return (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowUp', {\n                    code: 'ArrowUp'\n                  });\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('1');\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Right arrow increases the value by the step', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0'); // @ts-ignore\n\n                  _context9.next = 5;\n                  return (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowRight', {\n                    code: 'ArrowRight'\n                  });\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('1');\n\n                case 6:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If @max parameter is set, increasing the value sets the max value', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @value={{5}} @max={{5}} />\n                  */\n                  {\n                    \"id\": \"KCehC8l8\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@max\\\"],[5,5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('5');\n                  assert.dom('.upf-square-btn:nth-of-type(2)').isDisabled();\n\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If @max & @maxReachedTooltip parameter are set, it renders the tooltip', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          var _document$querySelect;\n\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @value={{5}} @max={{5}} @maxReachedTooltip=\"max\" />\n                  */\n                  {\n                    \"id\": \"DZK+A3Ct\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@max\\\",\\\"@maxReachedTooltip\\\"],[5,5,\\\"max\\\"]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  (_document$querySelect = document.querySelector('.upf-square-btn:nth-of-type(2)')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.dispatchEvent(new Event('mouseover'));\n                  _context11.next = 5;\n                  return (0, _testHelpers.waitFor)('.upf-tooltip');\n\n                case 5:\n                  assert.dom('.upf-tooltip .title').hasText('max');\n\n                case 6:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Value decrease', function () {\n      (0, _qunit.test)('- button increases the value by the step', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0');\n                  _context12.next = 5;\n                  return (0, _click.default)('.upf-square-btn:nth-of-type(1)');\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('-1');\n\n                case 6:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Down arrow increases the value by the step', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0'); // @ts-ignore\n\n                  _context13.next = 5;\n                  return (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowDown', {\n                    code: 'ArrowDown'\n                  });\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('-1');\n\n                case 6:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Left arrow increases the value by the step', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput />\n                  */\n                  {\n                    \"id\": \"MfDNJImx\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('0'); // @ts-ignore\n\n                  _context14.next = 5;\n                  return (0, _triggerKeyEvent.default)('.number-input input', 'keydown', 'ArrowLeft', {\n                    code: 'ArrowLeft'\n                  });\n\n                case 5:\n                  assert.dom('.number-input input').hasValue('-1');\n\n                case 6:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If @min parameter is set, decreasing the value sets the min value', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @value={{5}} @min={{5}} />\n                  */\n                  {\n                    \"id\": \"nOdlie7z\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@min\\\"],[5,5]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.number-input input').hasValue('5');\n                  assert.dom('.upf-square-btn:nth-of-type(1)').isDisabled();\n\n                case 4:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('If @min & @minReachedTooltip parameter are set, it renders the tooltip', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          var _document$querySelect2;\n\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  _context16.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @value={{5}} @min={{5}} @minReachedTooltip=\"min\" />\n                  */\n                  {\n                    \"id\": \"wS5NjZsl\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@min\\\",\\\"@minReachedTooltip\\\"],[5,5,\\\"min\\\"]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  (_document$querySelect2 = document.querySelector('.upf-square-btn:nth-of-type(1)')) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.dispatchEvent(new Event('mouseover'));\n                  _context16.next = 5;\n                  return (0, _testHelpers.waitFor)('.upf-tooltip');\n\n                case 5:\n                  assert.dom('.upf-tooltip .title').hasText('min');\n\n                case 6:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('On user input', function () {\n      (0, _qunit.test)('if the inputed value is above the max value, the max value is set', /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n          return regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  _context17.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @max={{42}} />\n                  */\n                  {\n                    \"id\": \"JUYyIOFN\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@max\\\"],[42]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context17.next = 4;\n                  return (0, _typeIn.default)('.number-input input', '455');\n\n                case 4:\n                  assert.dom('.number-input input').hasValue('42');\n\n                case 5:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17);\n        }));\n\n        return function (_x17) {\n          return _ref18.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if the inputed value is below the min value, the min value is set', /*#__PURE__*/function () {\n        var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n          return regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  _context18.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::NumberInput @value={{0}} @min={{42}} />\n                  */\n                  {\n                    \"id\": \"fHrwPbDC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@min\\\"],[0,42]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context18.next = 4;\n                  return (0, _typeIn.default)('.number-input input', '3');\n\n                case 4:\n                  assert.dom('.number-input input').hasValue('42');\n\n                case 5:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18);\n        }));\n\n        return function (_x18) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('The @onChange method receives the updated value', /*#__PURE__*/function () {\n      var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                this.onChange = _sinon.default.stub();\n                _context19.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::NumberInput @value={{0}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"M1NPJA/V\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[0,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/number-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context19.next = 5;\n                return (0, _click.default)('.upf-square-btn:nth-of-type(2)');\n\n              case 5:\n                assert.true(this.onChange.calledOnceWithExactly(1));\n\n              case 6:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      return function (_x19) {\n        return _ref20.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/panel-row-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/panel-row', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'l}} />\n                */\n                {\n                  \"id\": \"3M179f20\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\"]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel-content--row').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It renders the @icon properly', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'l}} />\n                */\n                {\n                  \"id\": \"3M179f20\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\"]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.far').exists();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the @label properly', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Panel::Row @icon={{\"fa-cog\"}} @label={{'Your Label'l}} />\n                */\n                {\n                  \"id\": \"3M179f20\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@label\\\"],[\\\"fa-cog\\\",\\\"Your Label\\\"]],null]],[],false,[\\\"o-s-s/panel/row\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('span').hasText('Your Label');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/panel-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:content>Content</:content>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"P8xuxtLG\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"content\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel').exists();\n                assert.dom('.oss-panel--content').hasText('Content', 'Content should be visible');\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should render the content separator if the header exists', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:header>Header</:header>\n                        <:content>Content</:content>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"q/ZZFaTX\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"header\\\",\\\"content\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--content .oss-panel--separator').exists('Content separator should be visible when header is visible');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should render the footer separator if the content exists', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:header>Header</:header>\n                        <:content>Content</:content>\n                        <:footer>Footer</:footer>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"xWnKwkFn\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"header\\\",\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Content\\\"]],[]],[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--footer .oss-panel--separator').exists('Footer separator should be visible when the content is visible');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should not render the content separator if the header does not exist', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:content>Content</:content>\n                        <:footer>Footer</:footer>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"gGf0p2Nd\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"Content\\\"]],[]],[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--content .oss-panel--separator').doesNotExist('Content separator should not be visible when header is not visible');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should not render the footer separator if the content does not exist', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:footer>Footer</:footer>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"P5g4Sh0l\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"footer\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--footer .oss-panel--separator').doesNotExist('Footer separator should not be visible when the content is not visible');\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the header named-block is defined, it is properly rendered', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:header>Header</:header>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"2hcqdwgD\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"header\\\"],[[[[1,\\\"Header\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--header').exists('The header named block should be visible');\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the content named-block is defined, it is properly rendered', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:content>Content</:content>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"P8xuxtLG\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"content\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--content').exists('The content named block should be visible');\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the footer named-block is defined, it is properly rendered', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::Panel>\n                        <:footer>Footer</:footer>\n                      </OSS::Panel>\n                    \n                */\n                {\n                  \"id\": \"P5g4Sh0l\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"footer\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"o-s-s/panel\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-panel--footer').exists('The footer named block should be visible');\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/password-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/password-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.validates = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value=\"\" />\n                */\n                {\n                  \"id\": \"RqoPMzF6\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-container').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the @placeholder', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value=\"\" @placeholder=\"test\" />\n                */\n                {\n                  \"id\": \"h+Y/6nU9\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@placeholder\\\"],[\\\"\\\",\\\"test\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-container input').hasProperty('placeholder', 'test');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it displays the error message when the @errorMessage is non-empty', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value=\"\" @errorMessage=\"This is the error message\" />\n                */\n                {\n                  \"id\": \"Hh2TrMr8\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@errorMessage\\\"],[\\\"\\\",\\\"This is the error message\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-container').hasClass('oss-input-container--errored');\n                assert.dom('.text-color-error').hasText('This is the error message');\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The input is set to password, thus hiding characters, by default', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value=\"azeaze\" />\n                */\n                {\n                  \"id\": \"PSKZAjrH\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"azeaze\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('input').hasAttribute('type', 'password');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the eye icon sets the input type to text, thus making the text readable', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value=\"azeaze\" />\n                */\n                {\n                  \"id\": \"PSKZAjrH\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"azeaze\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('input').hasAttribute('type', 'password');\n                _context5.next = 5;\n                return (0, _testHelpers.click)('.fa-eye');\n\n              case 5:\n                assert.dom('input').hasAttribute('type', 'text');\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('Clicking on the eye-slash icon sets the input type to password, thus hiding the text', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value=\"azeaze\" />\n                */\n                {\n                  \"id\": \"PSKZAjrH\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"azeaze\\\"]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('input').hasAttribute('type', 'password');\n                _context6.next = 5;\n                return (0, _testHelpers.click)('.fa-eye');\n\n              case 5:\n                assert.dom('input').hasAttribute('type', 'text');\n                _context6.next = 8;\n                return (0, _testHelpers.click)('.fa-eye-slash');\n\n              case 8:\n                assert.dom('input').hasAttribute('type', 'password');\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the password regex is matched, and the @validates method is passed, then the status of the validation is returned', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.value = '1Aaaaaa';\n\n                this.validates = function (x) {\n                  assert.equal(x, true);\n                };\n\n                _context7.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                */\n                {\n                  \"id\": \"nAOSYrA9\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context7.next = 6;\n                return (0, _testHelpers.typeIn)('input', 'a');\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the password regex isnt matched, and the @validates method is passed, then the status of the validation is returned', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.value = '1A';\n\n                this.validates = function (x) {\n                  assert.equal(x, false);\n                };\n\n                _context8.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                */\n                {\n                  \"id\": \"nAOSYrA9\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context8.next = 6;\n                return (0, _testHelpers.typeIn)('input', 'a');\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The password validation is not enabled if the @validates method is not passed', /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.value = '';\n                _context9.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value={{this.value}} />\n                */\n                {\n                  \"id\": \"zF+lggiu\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context9.next = 5;\n                return (0, _testHelpers.typeIn)('input', 'az');\n\n              case 5:\n                assert.dom('.text-color-error').doesNotExist();\n                assert.dom('[data-control-name=\"password-input-validators\"]').doesNotExist();\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      return function (_x9) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('If the @validates method is passed, the validators states are visible', /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.value = '';\n                _context10.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                */\n                {\n                  \"id\": \"nAOSYrA9\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('[data-control-name=\"password-input-validators\"]').exists();\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      return function (_x10) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Validators', function () {\n      (0, _qunit.test)('Uppercase - if no uppercase character is inputed, a validator error is shown', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  this.value = 'aze';\n                  _context11.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-uppercase\"] i.visible').hasClass('font-color-error-500');\n\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, this);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Uppercase - if an uppercase character is inputed, a validator success is shown', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  this.value = 'AZE';\n                  _context12.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-uppercase\"] i.visible').hasClass('font-color-success-500');\n\n                case 4:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, this);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Number - if no number is inputed, a validator error is shown', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  this.value = 'aze';\n                  _context13.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-number\"] i.visible').hasClass('font-color-error-500');\n\n                case 4:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13, this);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Uppercase - if a number is inputed, a validator success is shown', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  this.value = '123';\n                  _context14.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-number\"] i.visible').hasClass('font-color-success-500');\n\n                case 4:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14, this);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Length - if the password is not at least 8 characters long, a validator error is shown', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  this.value = '123';\n                  _context15.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-length\"] i.visible').hasClass('font-color-error-500');\n\n                case 4:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15, this);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Length - if the password has 8 characters, a validator success is shown', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  this.value = '12345678';\n                  _context16.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-length\"] i.visible').hasClass('font-color-success-500');\n\n                case 4:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16, this);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When all validators are matched, the @validates method sends a truthy argument', /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n          return regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  this.value = '123azeAZE';\n                  _context17.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}} />\n                  */\n                  {\n                    \"id\": \"nAOSYrA9\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context17.next = 5;\n                  return (0, _testHelpers.typeIn)('input', 'a');\n\n                case 5:\n                  assert.true(this.validates.calledOnceWith(true));\n\n                case 6:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17, this);\n        }));\n\n        return function (_x17) {\n          return _ref18.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Passing a @validorSet sets uses the custom validators', function (hooks) {\n      hooks.beforeEach(function () {\n        this.validatorSet = {\n          lowercase: {\n            labelKey: 'oss-components.password-input.validators.lowercase',\n            regex: /(?=.*[a-z]).*/\n          }\n        };\n      });\n      (0, _qunit.test)('The custom validator is visible', /*#__PURE__*/function () {\n        var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n          return regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  this.value = '';\n                  _context18.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                             @validatorSet={{this.validatorSet}} />\n                  */\n                  {\n                    \"id\": \"ieEJuD/0\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-lowercase\"]').exists();\n\n                case 4:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18, this);\n        }));\n\n        return function (_x18) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Lowercase - if no lowercase character is inputed, a validator error is shown', /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n          return regeneratorRuntime.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  this.value = 'AZE';\n                  _context19.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                             @validatorSet={{this.validatorSet}} />\n                  */\n                  {\n                    \"id\": \"ieEJuD/0\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-lowercase\"] i.visible').hasClass('font-color-error-500');\n\n                case 4:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19, this);\n        }));\n\n        return function (_x19) {\n          return _ref20.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Lowercase - if an lowercase character is inputed, a validator success is shown', /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  this.value = 'aze';\n                  _context20.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                             @validatorSet={{this.validatorSet}} />\n                  */\n                  {\n                    \"id\": \"ieEJuD/0\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"password-input-validator-lowercase\"] i.visible').hasClass('font-color-success-500');\n\n                case 4:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20, this);\n        }));\n\n        return function (_x20) {\n          return _ref21.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When all validators are matched, the @validates method sends a truthy argument', /*#__PURE__*/function () {\n        var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n          return regeneratorRuntime.wrap(function _callee21$(_context21) {\n            while (1) {\n              switch (_context21.prev = _context21.next) {\n                case 0:\n                  this.value = '123azeAZE';\n                  _context21.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PasswordInput @value={{this.value}} @validates={{this.validates}}\n                                                             @validatorSet={{this.validatorSet}} />\n                  */\n                  {\n                    \"id\": \"ieEJuD/0\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@validates\\\",\\\"@validatorSet\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"validates\\\"]],[30,0,[\\\"validatorSet\\\"]]]],null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context21.next = 5;\n                  return (0, _testHelpers.typeIn)('input', 'a');\n\n                case 5:\n                  assert.true(this.validates.calledOnceWith(true));\n\n                case 6:\n                case \"end\":\n                  return _context21.stop();\n              }\n            }\n          }, _callee21, this);\n        }));\n\n        return function (_x21) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('it throws an error when the @value parameter is missing', /*#__PURE__*/function () {\n      var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(assert) {\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [component][OSS::PasswordInput] The @value parameter is mandatory');\n                });\n                _context22.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PasswordInput />\n                */\n                {\n                  \"id\": \"SHIyDU6x\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/password-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      return function (_x22) {\n        return _ref23.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/phone-number-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/click\", \"sinon\", \"@ember/test-helpers/dom/find-all\", \"@ember/test-helpers/dom/type-in\", \"@ember/test-helpers/settled\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _click, _sinon, _findAll, _typeIn, _settled) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/phone-number', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.onChange = function () {};\n\n                _context.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"bXqSAdau\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.phone-number-container').exists();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The passed @number parameter is properly displayed in the input', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.onChange = function () {};\n\n                _context2.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PhoneNumberInput @prefix=\"\" @number=\"12341234\" @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"B7WcasOX\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"12341234\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('input').hasValue('12341234');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It properly loads the correct country when the @prefix parameter is defined', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.onChange = function () {};\n\n                _context3.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::PhoneNumberInput @prefix=\"+33\" @number=\"\" @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"Pg1K7opr\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"+33\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.country-selector .fflag.fflag-FR').exists();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Country selector', function () {\n      (0, _qunit.test)('Clicking on the Flag button opens the country selector', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.onChange = function () {};\n\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"bXqSAdau\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context4.next = 5;\n                  return (0, _click.default)('.country-selector');\n\n                case 5:\n                  assert.dom('.upf-infinite-select').exists();\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Selecting a new country in the Country selector triggers the onChange method', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.onChange = _sinon.default.spy();\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"bXqSAdau\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context5.next = 5;\n                  return (0, _click.default)('.country-selector');\n\n                case 5:\n                  clickableRows = (0, _findAll.default)('.upf-infinite-select__item');\n                  _context5.next = 8;\n                  return (0, _click.default)(clickableRows[4]);\n\n                case 8:\n                  assert.ok(this.onChange.calledOnce);\n                  assert.dom('.country-selector .fflag.fflag-CH').exists();\n\n                case 10:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Typing in the search input filters the results', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.onChange = _sinon.default.spy();\n                  _context6.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"bXqSAdau\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context6.next = 5;\n                  return (0, _click.default)('.country-selector');\n\n                case 5:\n                  assert.dom('.upf-infinite-select').exists();\n                  _context6.next = 8;\n                  return (0, _typeIn.default)('.upf-infinite-select input', 'fran');\n\n                case 8:\n                  clickableRows = (0, _findAll.default)('.upf-infinite-select__item');\n                  assert.equal(clickableRows.length, 1);\n                  assert.dom(clickableRows[0]).hasText('France (+33)');\n\n                case 11:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Searching by Country Code Prefix works', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          var clickableRows;\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.onChange = _sinon.default.spy();\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"bXqSAdau\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context7.next = 5;\n                  return (0, _click.default)('.country-selector');\n\n                case 5:\n                  assert.dom('.upf-infinite-select').exists();\n                  _context7.next = 8;\n                  return (0, _typeIn.default)('.upf-infinite-select input', '33');\n\n                case 8:\n                  clickableRows = (0, _findAll.default)('.upf-infinite-select__item');\n                  assert.equal(clickableRows.length, 2);\n                  assert.dom(clickableRows[0]).hasText('France (+33)');\n\n                case 11:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Phone Number Input', function () {\n      (0, _qunit.test)('Typing numbers in the Phone input triggers the onChange method', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.onChange = _sinon.default.spy();\n                  this.onValidation = _sinon.default.spy();\n                  _context8.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} @validates={{this.onValidation}} />\n                  */\n                  {\n                    \"id\": \"kZk/OxLq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context8.next = 6;\n                  return (0, _typeIn.default)('input', '8');\n\n                case 6:\n                  assert.ok(this.onChange.calledOnce);\n                  assert.ok(this.onValidation.calledWithExactly(true));\n                  assert.dom('input').hasValue('8');\n\n                case 9:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Typing non-numeric characters does not apply changes', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  this.onChange = _sinon.default.spy();\n                  this.onValidation = _sinon.default.spy();\n                  _context9.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @number=\"\" @onChange={{this.onChange}} @validates={{this.onValidation}} />\n                  */\n                  {\n                    \"id\": \"kZk/OxLq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[\\\"\\\",\\\"\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context9.next = 6;\n                  return (0, _typeIn.default)('input', '8');\n\n                case 6:\n                  assert.ok(this.onChange.calledOnce); // @ts-ignore\n\n                  _context9.next = 9;\n                  return (0, _testHelpers.triggerKeyEvent)('input', 'keydown', 'A', {\n                    code: 'a'\n                  });\n\n                case 9:\n                  assert.ok(this.onValidation.calledWithExactly(true));\n                  assert.dom('input').hasValue('8');\n\n                case 11:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it displays an error if the number contains a + symbol', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          var _this = this;\n\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.prefix = '+1';\n                  this.number = '';\n\n                  this.onChange = function (prefix, number) {\n                    _this.set('prefix', prefix);\n\n                    _this.set('number', number);\n                  };\n\n                  this.onValidation = _sinon.default.spy();\n                  _context10.next = 6;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix={{this.prefix}} @number={{this.number}} @onChange={{this.onChange}} @validates={{this.onValidation}} />\n                  */\n                  {\n                    \"id\": \"3f8iSdmc\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@number\\\",\\\"@onChange\\\",\\\"@validates\\\"],[[30,0,[\\\"prefix\\\"]],[30,0,[\\\"number\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onValidation\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 6:\n                  _context10.next = 8;\n                  return (0, _typeIn.default)('input', '+1');\n\n                case 8:\n                  _context10.next = 10;\n                  return (0, _settled.default)();\n\n                case 10:\n                  assert.ok(this.onValidation.calledWithExactly(false));\n                  assert.dom('.font-color-error-500').exists();\n\n                case 12:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('It throws an error if @prefix is not passed', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::PhoneNumberInput] The parameter @prefix of type string is mandatory');\n                  });\n\n                  this.onChange = function () {};\n\n                  _context11.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @number=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"6nAQ/Ydu\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@number\\\",\\\"@onChange\\\"],[\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context11.next = 6;\n                  return (0, _settled.default)();\n\n                case 6:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, this);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It throws an error if @number is not passed', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::PhoneNumberInput] The parameter @number of type string is mandatory');\n                  });\n\n                  this.onChange = function () {};\n\n                  _context12.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @prefix=\"\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"RnHx/E9i\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@onChange\\\"],[\\\"\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context12.next = 6;\n                  return (0, _settled.default)();\n\n                case 6:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, this);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It throws an error if @onChange is not passed', /*#__PURE__*/function () {\n        var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::PhoneNumberInput] The parameter @onChange of type function is mandatory');\n                  });\n\n                  this.onChange = function () {};\n\n                  _context13.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::PhoneNumberInput @number=\"\" @prefix=\"\" />\n                  */\n                  {\n                    \"id\": \"+wCJxRMz\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@number\\\",\\\"@prefix\\\"],[\\\"\\\",\\\"\\\"]],null]],[],false,[\\\"o-s-s/phone-number-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context13.next = 6;\n                  return (0, _settled.default)();\n\n                case 6:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13, this);\n        }));\n\n        return function (_x13) {\n          return _ref14.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/power-select-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/power-select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    var onSearch = _sinon.default.stub();\n\n    var onChange = _sinon.default.stub();\n\n    hooks.beforeEach(function () {\n      this.selectedItems = [];\n      this.items = [];\n      this.onSearch = onSearch;\n    });\n    (0, _qunit.module)('it renders', function () {\n      (0, _qunit.test)('with all required named blocks', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"sTJ8qWvt\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-power-select').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-power-select__array-container').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-infinite-select').doesNotExist();\n                  _context.next = 7;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 7:\n                  assert.dom('.upf-infinite-select').exists();\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('custom empty state is properly rendered', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                            <:empty-state>\n                              <div class=\"foobar\">custom empty state</div>\n                            </:empty-state>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"bpSmyDA0\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\",\\\"empty-state\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]],[[[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"foobar\\\"],[12],[1,\\\"custom empty state\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-power-select').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-power-select__array-container').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-infinite-select').doesNotExist();\n                  _context2.next = 7;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 7:\n                  assert.dom('.upf-infinite-select').exists();\n                  assert.dom('.foobar').exists();\n                  assert.dom('.foobar').hasText('custom empty state');\n\n                case 10:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with @selectedItems', function () {\n      (0, _qunit.test)('Passing @selectedItems parameter displays the items', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          var domTags;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.selectedItems = ['value1', 'value2'];\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              <span>{{selectedItem}}</span>\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"yKdrDONy\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[10,1],[12],[1,[30,1]],[13],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  domTags = (0, _testHelpers.findAll)('.array-input-container span');\n                  assert.dom(domTags[0]).hasText('value1');\n                  assert.dom(domTags[1]).hasText('value2');\n\n                case 6:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing empty @selectedItems parameter displays nothing', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              <span id=\"selectedItemTest\">{{selectedItem}}</span>\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"35kqICw5\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[10,1],[14,1,\\\"selectedItemTest\\\"],[12],[1,[30,1]],[13],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.array-input-container #selectedItemTest').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Passing empty @selectedItems and @placeholder parameters displays placeholder', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}} @placeholder=\"placeholder\">\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"8zueNla2\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@placeholder\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],\\\"placeholder\\\"]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.array-input-container').hasText('placeholder');\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with @items', function (hooks) {\n      hooks.beforeEach(function () {\n        this.items = ['value1', 'value2'];\n      });\n      (0, _qunit.test)('Passing @items parameter displays the items in InfiniteSelect', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var domTags;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"sTJ8qWvt\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context6.next = 4;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 4:\n                  domTags = (0, _testHelpers.findAll)('.upf-infinite-select__item');\n                  assert.dom(domTags[0]).hasText('value1');\n                  assert.dom(domTags[1]).hasText('value2');\n\n                case 7:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with @onChange', function (hooks) {\n      hooks.beforeEach(function () {\n        this.selectedItems = ['value1', 'value2'];\n        this.items = ['value1', 'value2'];\n        this.onChange = onChange;\n      });\n      (0, _qunit.test)('selecting item triggers onChange with selection operation', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}} @onChange={{this.onChange}}>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"dgs2jaQ0\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@onChange\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context7.next = 4;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 4:\n                  _context7.next = 6;\n                  return (0, _testHelpers.click)('.upf-infinite-select__item:nth-child(1)');\n\n                case 6:\n                  assert.ok(this.onChange.calledWith('value1', 'selection'));\n\n                case 7:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with @searchPlaceholder', function () {\n      (0, _qunit.test)('Passing @items parameter displays the items in InfiniteSelect', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}} @searchPlaceholder='searchPlaceholder'>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"EEPiasZe\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\",\\\"@searchPlaceholder\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]],\\\"searchPlaceholder\\\"]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context8.next = 4;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 4:\n                  assert.dom('.upf-infinite-select input').hasAttribute('placeholder', 'searchPlaceholder');\n\n                case 5:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with @onSearch', function () {\n      (0, _qunit.test)('search is correctly called', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}}\n                                            @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem}}\n                            </:selected-item>\n                            <:option-item as |item|>\n                              {{item}}\n                            </:option-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"sTJ8qWvt\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@onSearch\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[1,[30,2]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 4:\n                  _context9.next = 6;\n                  return (0, _testHelpers.typeIn)('.upf-infinite-select input', 's');\n\n                case 6:\n                  assert.ok(this.onSearch.calledWith('s'));\n\n                case 7:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with @onBottomReached', function (hooks) {\n      hooks.beforeEach(function () {\n        var _this = this;\n\n        this.items = ['value1', 'value2', 'value3'];\n        this.loadingMore = false;\n        this.onBottomReached = _sinon.default.stub().callsFake(function () {\n          _this.set('loadingMore', true);\n        });\n      });\n      (0, _qunit.test)('search is correctly call', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <div style=\"height:150px\">\n                            <OSS::PowerSelect @selectedItems={{this.selectedItems}} @items={{this.items}} @loadingMore={{this.loadingMore}}\n                                              @onSearch={{this.onSearch}} @onBottomReached={{this.onBottomReached}}>\n                              <:selected-item as |selectedItem|>\n                                {{selectedItem}}\n                              </:selected-item>\n                              <:option-item as |item|>\n                                {{item}}\n                              </:option-item>\n                            </OSS::PowerSelect>\n                          </div>\n                        \n                  */\n                  {\n                    \"id\": \"uCW6Th8x\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,0],[14,5,\\\"height:150px\\\"],[12],[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@selectedItems\\\",\\\"@items\\\",\\\"@loadingMore\\\",\\\"@onSearch\\\",\\\"@onBottomReached\\\"],[[30,0,[\\\"selectedItems\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"loadingMore\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"onBottomReached\\\"]]]],[[\\\"selected-item\\\",\\\"option-item\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1]],[1,\\\"\\\\n            \\\"]],[1]],[[[1,\\\"\\\\n              \\\"],[1,[30,2]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\",\\\"item\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context10.next = 4;\n                  return (0, _testHelpers.click)('.upf-power-select__array-container');\n\n                case 4:\n                  _context10.next = 6;\n                  return (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n\n                case 6:\n                  this.set('loadingMore', false);\n                  _context10.next = 9;\n                  return (0, _testHelpers.scrollTo)('.upf-infinite-select__items-container', 0, 1500);\n\n                case 9:\n                  assert.ok(this.onBottomReached.calledTwice);\n\n                case 10:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('without selected-item named block', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::PowerSelect] You must pass selected-item named block');\n                  });\n                  _context11.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @onSearch={{this.onSearch}}/>\n                        \n                  */\n                  {\n                    \"id\": \"OUZFPCxM\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onSearch\\\"],[[30,0,[\\\"onSearch\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('without option-item named block', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::PowerSelect] You must pass option-item named block');\n                  });\n                  _context12.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::PowerSelect @onSearch={{this.onSearch}}>\n                            <:selected-item as |selectedItem|>\n                              {{selectedItem.name}}\n                            </:selected-item>\n                          </OSS::PowerSelect>\n                        \n                  */\n                  {\n                    \"id\": \"ksvfUbsR\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onSearch\\\"],[[30,0,[\\\"onSearch\\\"]]]],[[\\\"selected-item\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n          \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"selectedItem\\\"],false,[\\\"o-s-s/power-select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/progress-bar-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/progress-bar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.checkedValue = 42;\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ProgressBar @value={{this.checkedValue}} />\n                */\n                {\n                  \"id\": \"77bSs4vw\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-progress-bar').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@value arg behaviour', function () {\n      (0, _qunit.test)('It renders the progress-bar--inner with the correct width when @value is specified', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          var innerBar, inlineStyle;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} />\n                  */\n                  {\n                    \"id\": \"77bSs4vw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar').exists();\n                  innerBar = this.element.querySelector('.oss-progress-bar__inner');\n                  inlineStyle = innerBar.getAttribute('style');\n                  assert.ok(inlineStyle === null || inlineStyle === void 0 ? void 0 : inlineStyle.includes(this.checkedValue), 'The inline style attribute is set to the proper value');\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('It renders the progress-bar--inner with the correct width when @value is updated from one value to another', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          var _inlineStyle, _inlineStyle2;\n\n          var innerBar, inlineStyle;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} />\n                  */\n                  {\n                    \"id\": \"77bSs4vw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar').exists();\n                  innerBar = this.element.querySelector('.oss-progress-bar__inner');\n                  inlineStyle = innerBar.getAttribute('style');\n                  assert.ok((_inlineStyle = inlineStyle) === null || _inlineStyle === void 0 ? void 0 : _inlineStyle.includes(this.checkedValue), 'The inline style attribute is set to the proper value');\n                  this.set('checkedValue', 100);\n                  inlineStyle = innerBar.getAttribute('style');\n                  assert.ok((_inlineStyle2 = inlineStyle) === null || _inlineStyle2 === void 0 ? void 0 : _inlineStyle2.includes('100'), 'The inline style attribute is set to the proper value');\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@size arg behaviour', function () {\n      (0, _qunit.test)('if the value is \"sm\", the progress bar height is the proper height', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          var innerBar;\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} @size=\"sm\" />\n                  */\n                  {\n                    \"id\": \"SE2W/1c5\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@size\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"sm\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar').exists();\n                  innerBar = this.element.querySelector('.oss-progress-bar__inner');\n                  assert.equal(innerBar.clientHeight, 4, 'Element has the correct height');\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if the value is \"lg\", the progress bar height is the proper height', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          var innerBar;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} @size=\"lg\" />\n                  */\n                  {\n                    \"id\": \"i/YoN1y0\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@size\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"lg\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar').exists();\n                  innerBar = this.element.querySelector('.oss-progress-bar__inner');\n                  assert.equal(innerBar.clientHeight, 10, 'Element has the correct height');\n\n                case 5:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if the value is unspecified, the progress bar height is the proper height', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var innerBar;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} />\n                  */\n                  {\n                    \"id\": \"77bSs4vw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar').exists();\n                  innerBar = this.element.querySelector('.oss-progress-bar__inner');\n                  assert.equal(innerBar.clientHeight, 10, 'Element has the correct height');\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@label arg behaviour', function () {\n      (0, _qunit.test)('if the value is specified, the label is displayed', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\"/>\n                  */\n                  {\n                    \"id\": \"xsZb4Wkk\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar__label').exists();\n                  assert.dom('.oss-progress-bar__label').hasText('Hello');\n\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if the value is not specified, the label is not displayed', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}}/>\n                  */\n                  {\n                    \"id\": \"77bSs4vw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[[30,0,[\\\"checkedValue\\\"]]]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar__label').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@displayValue arg behaviour', function () {\n      (0, _qunit.test)('if the value is true, the value is displayed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\" @displayValue={{true}}/>\n                  */\n                  {\n                    \"id\": \"nobYWUcp\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\",\\\"@displayValue\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\",true]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar__value').exists();\n                  assert.dom('.oss-progress-bar__value').hasText(this.checkedValue + '%');\n\n                case 4:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if the value is false, the value is not displayed', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\" @displayValue={{false}}/>\n                  */\n                  {\n                    \"id\": \"2GuqZpEb\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\",\\\"@displayValue\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\",false]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar__value').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('if the value is unspecified, the value is not displayed', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ProgressBar @value={{this.checkedValue}} @label=\"Hello\" />\n                  */\n                  {\n                    \"id\": \"xsZb4Wkk\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@label\\\"],[[30,0,[\\\"checkedValue\\\"]],\\\"Hello\\\"]],null]],[],false,[\\\"o-s-s/progress-bar\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-progress-bar__value').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/radio-button-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/test-helpers/dom/click\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon, _click) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/radio-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton />\n                */\n                {\n                  \"id\": \"xKDNIPNa\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-radio-btn').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It shows the selected state if the @selected parameter is true', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{true}} />\n                */\n                {\n                  \"id\": \"K8w6lsJT\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[true]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-radio-btn--selected').exists();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It shows the empty state if the @selected parameter is false', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{false}} />\n                */\n                {\n                  \"id\": \"NQKHf9Ux\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[false]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-radio-btn').exists();\n                assert.dom('.oss-radio-btn--selected').doesNotExist();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It shows the selected/disabled state if the @selected parameter is true and the @disabled parameter is true', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{true}} @disabled={{true}} />\n                */\n                {\n                  \"id\": \"eL/KwNvl\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@disabled\\\"],[true,true]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-radio-btn--selected').exists();\n                assert.dom('.oss-radio-btn--disabled').exists();\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It shows the empty/disabled state if the @selected parameter is false and the @disabled parameter is true', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{false}} @disabled={{true}} />\n                */\n                {\n                  \"id\": \"48VpPbvG\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@disabled\\\"],[false,true]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-radio-btn').exists();\n                assert.dom('.oss-radio-btn--selected').doesNotExist();\n                assert.dom('.oss-radio-btn--disabled').exists();\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It triggers the onChange method on click when the @disabled parameter is false', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.onChange = _sinon.default.stub();\n                _context6.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{false}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"FzSFLKuw\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@onChange\\\"],[false,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.oss-radio-btn').exists();\n                _context6.next = 6;\n                return (0, _click.default)('.oss-radio-btn');\n\n              case 6:\n                assert.true(this.onChange.calledOnceWithExactly(true));\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It triggers the onChange method on click when the @disabled parameter is true', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.onChange = _sinon.default.stub();\n                _context7.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{true}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"fGwnIFqW\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.oss-radio-btn').exists();\n                _context7.next = 6;\n                return (0, _click.default)('.oss-radio-btn');\n\n              case 6:\n                assert.true(this.onChange.calledOnceWithExactly(false));\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)(\"It doesn't trigger the onChange method on click when the @disabled parameter is true\", /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.onChange = _sinon.default.stub();\n                _context8.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::RadioButton @selected={{false}} @disabled={{true}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"akBP+B83\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\",\\\"@disabled\\\",\\\"@onChange\\\"],[false,true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/radio-button\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context8.next = 5;\n                return (0, _click.default)('.oss-radio-btn');\n\n              case 5:\n                assert.true(this.onChange.notCalled);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/select-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.onChange = _sinon.default.stub();\n      this.items = [{\n        name: 'foo',\n        label: 'First item'\n      }, {\n        name: 'bar',\n        label: 'Second item'\n      }];\n    });\n    (0, _qunit.module)('value changes', function () {\n      (0, _qunit.test)('the onChange function is called with the selected item', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  this.value = this.items[0];\n                  _context.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"W4Z44kYq\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context.next = 5;\n                  return (0, _testHelpers.click)('.upf-input div');\n\n                case 5:\n                  _context.next = 7;\n                  return (0, _testHelpers.click)('.upf-infinite-select .upf-infinite-select__item:last-child');\n\n                case 7:\n                  assert.ok(this.onChange.calledOnceWithExactly(this.items[1]));\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('items display', function () {\n      (0, _qunit.test)('the option block properly displays each item', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"W4Z44kYq\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context2.next = 4;\n                  return (0, _testHelpers.click)('.upf-input div');\n\n                case 4:\n                  assert.dom('.upf-infinite-select').exists();\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item').exists({\n                    count: 2\n                  });\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item:first-child').hasText('foo');\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item:last-child').hasText('bar');\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('selected value display', function () {\n      (0, _qunit.test)('the default placeholder is displayed if the @value arg is null-ish', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.value = null;\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"W4Z44kYq\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-input').hasText('Select');\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the passed @placeholder arg is displayed if the @value arg is null-ish', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.value = null;\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\">\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"2DnRKpsn\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-input').hasText('my placeholder');\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"the current value's label attr is displayed\", /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.value = this.items[0];\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\">\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"2DnRKpsn\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-input').hasText('First item');\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"the current value's is displayed with the targetLabel arg when passed\", /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.value = this.items[0];\n                  _context6.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\" @targetLabel=\"name\">\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"NpYqxCLD\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\",\\\"@targetLabel\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\",\\\"name\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-input').hasText('foo');\n\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)(\"the current value's is displayed with the right class and active icon in the options\", /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.value = this.items[0];\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\" @targetLabel=\"name\">\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"NpYqxCLD\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\",\\\"@targetLabel\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\",\\\"name\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context7.next = 5;\n                  return (0, _testHelpers.click)('.upf-input div');\n\n                case 5:\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item:first-child .item-wrapper').hasClass('selected');\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item:first-child .item-wrapper i.far.fa-check').exists();\n\n                case 7:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the selected value is displayed using the selected named block if provided', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.value = this.items[0];\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @placeholder=\"my placeholder\">\n                              <:selected as |value|>\n                                Selected value: {{value.name}}\n                              </:selected>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"DQpl2x8n\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"my placeholder\\\"]],[[\\\"selected\\\",\\\"option\\\"],[[[[1,\\\"\\\\n              Selected value: \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]],[[[1,\\\"\\\\n              \\\"],[1,[30,2,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"]],[\\\"value\\\",\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-input').hasText('Selected value: foo');\n\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('disabled state', function () {\n      (0, _qunit.test)('the dropdown does not open when the select is clicked', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @disabled={{true}}>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"jHzm1q8/\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@disabled\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],true]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context9.next = 4;\n                  return (0, _testHelpers.click)('.upf-input div');\n\n                case 4:\n                  assert.dom('.upf-infinite-select').doesNotExist();\n\n                case 5:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('feedback states', function () {\n      (0, _qunit.module)('errorful state', function () {\n        (0, _qunit.test)('the right class is applied to the select container', /*#__PURE__*/function () {\n          var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @errorMessage=\"error !\">\n                                <:option as |item|>\n                                  {{item.name}}\n                                </:option>\n                              </OSS::Select>\n                            \n                    */\n                    {\n                      \"id\": \"AyGkL6zl\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"error !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-select-container').hasClass('oss-select-container--errorful');\n\n                  case 3:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, _callee10);\n          }));\n\n          return function (_x10) {\n            return _ref11.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('the error message is displayed under the select field', /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n            return regeneratorRuntime.wrap(function _callee11$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @errorMessage=\"error !\">\n                                <:option as |item|>\n                                  {{item.name}}\n                                </:option>\n                              </OSS::Select>\n                            \n                    */\n                    {\n                      \"id\": \"AyGkL6zl\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"error !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-select-container .upf-input + .font-color-error-500').hasText('error !');\n\n                  case 3:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, _callee11);\n          }));\n\n          return function (_x11) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('successful state', function () {\n        (0, _qunit.test)('the right class is applied to the select container', /*#__PURE__*/function () {\n          var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n            return regeneratorRuntime.wrap(function _callee12$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @successMessage=\"good !\">\n                                <:option as |item|>\n                                  {{item.name}}\n                                </:option>\n                              </OSS::Select>\n                            \n                    */\n                    {\n                      \"id\": \"yk6s+kei\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@successMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"good !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-select-container').hasClass('oss-select-container--successful');\n\n                  case 3:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, _callee12);\n          }));\n\n          return function (_x12) {\n            return _ref13.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('the error message is displayed under the select field', /*#__PURE__*/function () {\n          var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n            return regeneratorRuntime.wrap(function _callee13$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}} @successMessage=\"good !\">\n                                <:option as |item|>\n                                  {{item.name}}\n                                </:option>\n                              </OSS::Select>\n                            \n                    */\n                    {\n                      \"id\": \"yk6s+kei\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\",\\\"@successMessage\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]],\\\"good !\\\"]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-select-container .upf-input + .font-color-success-500').hasText('good !');\n\n                  case 3:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, _callee13);\n          }));\n\n          return function (_x13) {\n            return _ref14.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('searching through the options', function () {\n      (0, _qunit.test)('the search is not displayed if no onSearch arg is provided', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  this.value = this.items[0];\n                  _context14.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @items={{this.items}} @value={{this.value}}>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"W4Z44kYq\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context14.next = 5;\n                  return (0, _testHelpers.click)('.upf-input div');\n\n                case 5:\n                  assert.dom('.upf-infinite-select .upf-input').doesNotExist();\n\n                case 6:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14, this);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the search is displayed if the @onSearch arg is provided', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          var _this = this;\n\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  assert.expect(4);\n                  this.value = this.items[0];\n\n                  this.onSearch = function (keyword) {\n                    assert.equal(keyword, 'F');\n\n                    _this.set('items', _this.items.filter(function (item) {\n                      return item.name.toLowerCase().indexOf(keyword.toLowerCase()) >= 0;\n                    }));\n                  };\n\n                  _context15.next = 5;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                            <OSS::Select @onChange={{this.onChange}} @onSearch={{this.onSearch}} @items={{this.items}} @value={{this.value}}>\n                              <:option as |item|>\n                                {{item.name}}\n                              </:option>\n                            </OSS::Select>\n                          \n                  */\n                  {\n                    \"id\": \"AYy7Cr3x\",\n                    \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@onSearch\\\",\\\"@items\\\",\\\"@value\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"onSearch\\\"]],[30,0,[\\\"items\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"option\\\"],[[[[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"name\\\"]]],[1,\\\"\\\\n            \\\"]],[1]]]]],[1,\\\"\\\\n        \\\"]],[\\\"item\\\"],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 5:\n                  _context15.next = 7;\n                  return (0, _testHelpers.click)('.upf-input div');\n\n                case 7:\n                  assert.dom('.upf-infinite-select .upf-input').exists();\n                  _context15.next = 10;\n                  return (0, _testHelpers.typeIn)('.upf-infinite-select .upf-input', 'F');\n\n                case 10:\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-infinite-select .upf-infinite-select__item').hasText('foo');\n\n                case 12:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15, this);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if no @onChange arg is passed', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Select] The parameter @onChange of type function is mandatory');\n                  });\n                  _context16.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Select />\n                  */\n                  {\n                    \"id\": \"I8P9MsNU\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if the component is invoked with no option named blocked', /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n          return regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Select] You must pass option named block');\n                  });\n                  _context17.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Select @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"sqyctJMG\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/select\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17);\n        }));\n\n        return function (_x17) {\n          return _ref18.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/skeleton-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/skeleton', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Skeleton/>\n                */\n                {\n                  \"id\": \"SrLwdpLC\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-skeleton-effect').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@height parameters', function () {\n      (0, _qunit.test)('Default height', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton/>\n                  */\n                  {\n                    \"id\": \"SrLwdpLC\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-skeleton-effect').hasStyle({\n                    height: '36px'\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The style height should correspond to parameter value', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.height = 400;\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @height={{this.height}}/>\n                  */\n                  {\n                    \"id\": \"qhSYk5tt\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@height\\\"],[[30,0,[\\\"height\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-skeleton-effect').hasStyle({\n                    height: '400px'\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@width parameters', function () {\n      (0, _qunit.test)('Default width', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton/>\n                  */\n                  {\n                    \"id\": \"SrLwdpLC\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-skeleton-effect').hasStyle({\n                    width: '36px'\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The style width should correspond to parameter value', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.width = 400;\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @width={{this.width}}/>\n                  */\n                  {\n                    \"id\": \"isCzhG2g\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[[30,0,[\\\"width\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-skeleton-effect').hasStyle({\n                    width: '400px'\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@gap parameters', function () {\n      (0, _qunit.test)('Default gap', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @multiple={{2}} />\n                  */\n                  {\n                    \"id\": \"IYhXiFx+\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\"],[2]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.fx-1').hasClass('fx-gap-px-9');\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The has class corresponding to gap', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.gap = 12;\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @gap={{this.gap}} @multiple={{2}} />\n                  */\n                  {\n                    \"id\": \"OnnUNH2D\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@gap\\\",\\\"@multiple\\\"],[[30,0,[\\\"gap\\\"]],2]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.fx-1').hasClass('fx-gap-px-12');\n\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@multiple parameters', function () {\n      (0, _qunit.test)('Default has one skeleton effect', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          var items;\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton/>\n                  */\n                  {\n                    \"id\": \"SrLwdpLC\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  items = (0, _testHelpers.findAll)('.upf-skeleton-effect');\n                  assert.ok(items.length === 1);\n\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('The content has multiple skeleton effect', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          var items;\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  this.multiple = 4;\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @multiple={{this.multiple}}/>\n                  */\n                  {\n                    \"id\": \"Bd+Pd5mH\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\"],[[30,0,[\\\"multiple\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  items = (0, _testHelpers.findAll)('.upf-skeleton-effect');\n                  assert.ok(items.length === 4);\n\n                case 5:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@randomize parameters', function () {\n      hooks.beforeEach(function () {\n        this.multiple = 4;\n        this.width = 200;\n      });\n      (0, _qunit.test)('Default randomize is false', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          var item;\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @width={{this.width}}/>\n                  */\n                  {\n                    \"id\": \"isCzhG2g\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[[30,0,[\\\"width\\\"]]]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  item = (0, _testHelpers.find)('.upf-skeleton-effect');\n                  assert.ok(this.width == (item === null || item === void 0 ? void 0 : item.offsetWidth));\n\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Randomize width is within a 15% range', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          var item;\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @multiple={{this.multiple}} @width={{this.width}} @randomize={{true}}/>\n                  */\n                  {\n                    \"id\": \"vqxoUfFV\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\",\\\"@width\\\",\\\"@randomize\\\"],[[30,0,[\\\"multiple\\\"]],[30,0,[\\\"width\\\"]],true]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  item = (0, _testHelpers.find)('.upf-skeleton-effect');\n                  assert.ok(item.offsetWidth <= 230 && item.offsetWidth >= 170);\n\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('@direction default value is row', /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Skeleton @multiple=\"3\" />\n                */\n                {\n                  \"id\": \"C8LZMYkY\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@multiple\\\"],[\\\"3\\\"]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.fx-1').hasClass(\"fx-row\");\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      return function (_x12) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('@direction value is column if specified', /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Skeleton @direction=\"column\" @multiple=\"2\" />\n                */\n                {\n                  \"id\": \"aAWBTEyc\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@direction\\\",\\\"@multiple\\\"],[\\\"column\\\",\\\"2\\\"]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.fx-1').hasClass(\"fx-col\");\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function (_x13) {\n        return _ref14.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Extra attributes', function () {\n      (0, _qunit.test)('passing an extra class is applied to the component', /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n          return regeneratorRuntime.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton class=\"my-extra-class\" />\n                  */\n                  {\n                    \"id\": \"ZIWseQiU\",\n                    \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.my-extra-class').exists();\n\n                case 3:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        return function (_x14) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('passing data-control-name works', /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n          var inputWrapper;\n          return regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton data-control-name=\"layout-sidebar\" />\n                  */\n                  {\n                    \"id\": \"ivBqECsJ\",\n                    \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"layout-sidebar\\\"]],null,null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  inputWrapper = (0, _testHelpers.find)('.upf-skeleton-effect');\n                  assert.equal(inputWrapper === null || inputWrapper === void 0 ? void 0 : inputWrapper.getAttribute('data-control-name'), 'layout-sidebar');\n\n                case 4:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function (_x15) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if @direct is provided and does not match required values', /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n          return regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::Skeleton] The @direction argument should be a value of row,column,col');\n                  });\n                  _context16.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Skeleton @direction=\"toto\"/>\n                  */\n                  {\n                    \"id\": \"gXD+pLej\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@direction\\\"],[\\\"toto\\\"]],null]],[],false,[\\\"o-s-s/skeleton\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x16) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/social-post-badge-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/social-post-badge', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      var _this = this;\n\n      this.postType = 'pin';\n      this.plain = false;\n      this.selected = false;\n\n      this.onToggle = function () {\n        _this.plain = !_this.plain;\n        _this.selected = !_this.selected;\n      };\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                */\n                {\n                  \"id\": \"EkFRxsHC\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-social-post-badge').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@plain', function () {\n      (0, _qunit.test)('When @plain is not set class is not added', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @postType={{this.postType}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"D7rdW/qe\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-social-post-badge').hasNoClass('oss-social-post-badge--plain');\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When @plain is true class is added', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.plain = true;\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"EkFRxsHC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.oss-social-post-badge').hasClass('oss-social-post-badge--plain');\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@selected', function () {\n      (0, _qunit.test)('When @selected is not set class is not added', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"wCVxwflw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-social-post-badge').hasNoClass('oss-social-post-badge--selected');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When @selected is true class is added', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.selected = true;\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"EkFRxsHC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.oss-social-post-badge').hasClass('oss-social-post-badge--selected');\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('When clicking on an item', function () {\n      (0, _qunit.test)('Then the @onToggle method is triggered', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.postType = 'facebook_status';\n                  this.onToggle = _sinon.default.spy();\n                  _context6.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"EkFRxsHC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context6.next = 6;\n                  return (0, _testHelpers.click)('.oss-social-post-badge');\n\n                case 6:\n                  assert.ok(this.onToggle.calledWith('facebook_status'));\n\n                case 7:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('error management', function () {\n      (0, _qunit.test)('it throws an error if @selectedToggle is not provided', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::SocialPostBadge] The @postType parameter of type String is mandatory');\n                  });\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"i47uuiX/\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if @postType is not a value of SocialPostType', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  this.postType = 'toto';\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::SocialPostBadge] The @postType parameter should be a value of SocialPostType');\n                  });\n                  _context8.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SocialPostBadge @postType={{this.postType}} @plain={{this.plain}} @selected={{this.selected}} @onToggle={{this.onToggle}}/>\n                  */\n                  {\n                    \"id\": \"EkFRxsHC\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@postType\\\",\\\"@plain\\\",\\\"@selected\\\",\\\"@onToggle\\\"],[[30,0,[\\\"postType\\\"]],[30,0,[\\\"plain\\\"]],[30,0,[\\\"selected\\\"]],[30,0,[\\\"onToggle\\\"]]]],null]],[],false,[\\\"o-s-s/social-post-badge\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/split-modal-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/split-modal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.closeModal = _sinon.default.stub();\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.set('closeModal', _sinon.default.stub());\n                _context.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::SplitModal @close={{this.closeModal}} />\n                */\n                {\n                  \"id\": \"QORyLxY+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                assert.dom('.split-modal').exists();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The cross button at the top right of the modal closes the modal', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::SplitModal @close={{this.closeModal}} />\n                */\n                {\n                  \"id\": \"QORyLxY+\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],null]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context2.next = 4;\n                return (0, _testHelpers.click)('.fa-times');\n\n              case 4:\n                assert.ok(this.closeModal.calledOnce);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The content named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::SplitModal @close={{this.closeModal}}>\n                        <:content>\n                          <p>This is the content</p>\n                        </:content>\n                      </OSS::SplitModal>\n                */\n                {\n                  \"id\": \"wUM8L2+8\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[10,2],[12],[1,\\\"This is the content\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog--content').hasText('This is the content');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The footer named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::SplitModal @close={{this.closeModal}}>\n                        <:footer>\n                          footer content\n                        </:footer>\n                      </OSS::SplitModal>\n                */\n                {\n                  \"id\": \"4jWX0Z3N\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"footer\\\"],[[[[1,\\\"\\\\n          footer content\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-modal-dialog footer').hasText('footer content');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('The preview named-block is properly displayed', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  \n                      <OSS::SplitModal @close={{this.closeModal}}>\n                        <:preview>\n                          preview content\n                        </:preview>\n                      </OSS::SplitModal>\n                */\n                {\n                  \"id\": \"RnRNgTED\",\n                  \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"preview\\\"],[[[[1,\\\"\\\\n          preview content\\\\n        \\\"]],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.split-modal__preview').hasText('preview content');\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('When the escape button is triggered, the modal is closed', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::SplitModal @close={{this.closeModal}}></OSS::SplitModal>\n                */\n                {\n                  \"id\": \"+qEIc7sM\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@close\\\"],[[30,0,[\\\"closeModal\\\"]]]],[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                _context6.next = 4;\n                return (0, _testHelpers.triggerKeyEvent)('.oss-modal-dialog', 'keyup', 27);\n\n              case 4:\n                assert.true(this.closeModal.calledOnce);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('The component throws an error if the close parameter is not passed', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::SplitModal] The close function is mandatory');\n                  });\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::SplitModal />\n                  */\n                  {\n                    \"id\": \"akCmDMDT\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/split-modal\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/star-rating-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/star-rating\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _starRating, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/star-rating', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::StarRating @rating={{3}} @totalStars={{5}} />\n                */\n                {\n                  \"id\": \"SZplqu4g\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\"],[3,5]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.star-rating').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    var _loop = function _loop(starColor) {\n      (0, _qunit.test)('Passing @activeColor, @passiveColor & @activeStyle applies the correct classes to the component', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  this.activeColor = starColor;\n                  this.passiveColor = starColor;\n                  _context6.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::StarRating @rating={{5}} @totalStars={{8}}\n                                                          @activeColor={{this.activeColor}}\n                                                          @passiveStyle='regular'\n                                                          @passiveColor={{this.passiveColor}} />\n                  */\n                  {\n                    \"id\": \"WYldT9Zw\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\",\\\"@activeColor\\\",\\\"@passiveStyle\\\",\\\"@passiveColor\\\"],[5,8,[30,0,[\\\"activeColor\\\"]],\\\"regular\\\",[30,0,[\\\"passiveColor\\\"]]]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  assert.dom('.fas').hasClass(\"color-\".concat(starColor));\n                  assert.dom('.far').hasClass(\"color-\".concat(starColor));\n\n                case 6:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    };\n\n    for (var starColor in _starRating.StarColor) {\n      _loop(starColor);\n    }\n\n    (0, _qunit.test)('The number of stars displayed is consistent with the provided @rating', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::StarRating @rating={{3}} @totalStars={{8}} @passiveStyle='regular'\n                                                      @activeColor={{this.activeColor}}\n                                                      @passiveColor={{this.passiveColor}} />\n                */\n                {\n                  \"id\": \"mXyZfYrL\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\",\\\"@passiveStyle\\\",\\\"@activeColor\\\",\\\"@passiveColor\\\"],[3,8,\\\"regular\\\",[30,0,[\\\"activeColor\\\"]],[30,0,[\\\"passiveColor\\\"]]]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.fas.fa-star.color-yellow').exists({\n                  count: 3\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('When @onChange parameter is passed, the method is called when a click is made on a star', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.onChange = _sinon.default.stub();\n                _context3.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::StarRating @rating={{3}} @totalStars={{8}} @passiveStyle='regular'\n                                                      @activeColor={{this.activeColor}}\n                                                      @passiveColor={{this.passiveColor}}\n                                                      @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"XoKO9NW6\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\",\\\"@totalStars\\\",\\\"@passiveStyle\\\",\\\"@activeColor\\\",\\\"@passiveColor\\\",\\\"@onChange\\\"],[3,8,\\\"regular\\\",[30,0,[\\\"activeColor\\\"]],[30,0,[\\\"passiveColor\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context3.next = 5;\n                return (0, _testHelpers.click)('.fa-star:nth-of-type(4)');\n\n              case 5:\n                assert.true(this.onChange.calledOnceWithExactly(4));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('failing to pass @rating throws an error', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::StarRating] @rating argument is mandatory and must be a number');\n                  });\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::StarRating @totalStars={{5}} />\n                  */\n                  {\n                    \"id\": \"fCY6vEEq\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@totalStars\\\"],[5]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('failing to pass @totalStart throws an error', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::StarRating] @totalStars argument is mandatory and must be a number');\n                  });\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::StarRating @rating={{5}} />\n                  */\n                  {\n                    \"id\": \"Qss8skQP\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@rating\\\"],[5]],null]],[],false,[\\\"o-s-s/star-rating\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/tag-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/components/o-s-s/tag\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _tag) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/tag', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Tag @label='test' />\n                */\n                {\n                  \"id\": \"+K2Nk0WX\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-tag').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the proper label when @label is passed', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Tag @label=\"Test\" />\n                */\n                {\n                  \"id\": \"yHQY3svg\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Test\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-tag').exists({\n                  count: 1\n                });\n                assert.dom('.upf-tag').hasText('Test');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it renders the proper icon when @icon is passed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Tag @icon=\"far fa-thumbs-up\" />\n                */\n                {\n                  \"id\": \"SpebM3SX\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"far fa-thumbs-up\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.upf-tag').exists({\n                  count: 1\n                });\n                assert.dom('.upf-tag i').hasClass('fa-thumbs-up');\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@plain', function () {\n      (0, _qunit.test)('the right class is applied on the tag', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Tag @icon=\"far fa-thumbs-up\" @plain={{true}} />\n                  */\n                  {\n                    \"id\": \"yswZTBvu\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@plain\\\"],[\\\"far fa-thumbs-up\\\",true]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-tag').hasClass('upf-tag--plain');\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@hasEllipsis', function () {\n      (0, _qunit.test)('When the param is true then the ellipsis is shown', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Tag @label='Test with a huge label sentence' @hasEllipsis='true' />\n                  */\n                  {\n                    \"id\": \"L8GLgoc6\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@hasEllipsis\\\"],[\\\"Test with a huge label sentence\\\",\\\"true\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-tag').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-tag span').hasStyle({\n                    maxWidth: '80px',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When the param is false then the ellipsis is shown', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Tag @label='Test with a huge label sentence' />\n                  */\n                  {\n                    \"id\": \"Xl8+1nvW\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"Test with a huge label sentence\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.upf-tag').exists({\n                    count: 1\n                  });\n                  assert.dom('.upf-tag span').doesNotExist();\n                  assert.dom('.upf-tag').hasText('Test with a huge label sentence');\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    });\n    Object.keys(_tag.SkinDefinition).forEach(function (skin) {\n      (0, _qunit.test)(\"it sets the right class when using a supported skin: \".concat(skin), /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.skin = skin;\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::Tag @skin={{this.skin}} @label=\"Test Skin\" />\n                  */\n                  {\n                    \"id\": \"fO1kC47O\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@skin\\\",\\\"@label\\\"],[[30,0,[\\\"skin\\\"]],\\\"Test Skin\\\"]],null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.upf-tag').exists();\n                  assert.dom('.upf-tag').hasClass(\"upf-tag--\".concat(_tag.SkinDefinition[this.skin]));\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('it fails if @label and @icon are missing', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [component][OSS::Tag] You must pass either a @label or an @icon argument.');\n                });\n                _context8.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::Tag />\n                */\n                {\n                  \"id\": \"l3a1E+mG\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/tag\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/text-area-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/text-area', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.value = 'Data';\n      this.textareaSelector = '.oss-textarea-container  .oss-textarea';\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TextArea @label='test' />\n                */\n                {\n                  \"id\": \"euACnvZD\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"test\\\"]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-textarea-container').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('@resize', function () {\n      (0, _qunit.test)('Default has no class resize', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea />\n                  */\n                  {\n                    \"id\": \"VlrozZ3x\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-v');\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-h');\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-none');\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When resize is vertical should have class resize-v', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.resize = 'vertical';\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea @resize={{this.resize}}/>\n                  */\n                  {\n                    \"id\": \"/yZUZjEp\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom(this.textareaSelector).hasClass('oss-textarea--resize-v');\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-h');\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-none');\n\n                case 6:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When resize is horizontal should have class resize-h', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.resize = 'horizontal';\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea @resize={{this.resize}}/>\n                  */\n                  {\n                    \"id\": \"/yZUZjEp\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-v');\n                  assert.dom(this.textareaSelector).hasClass('oss-textarea--resize-h');\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-none');\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When resize is none should have class resize-none', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.resize = 'none';\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea @resize={{this.resize}}/>\n                  */\n                  {\n                    \"id\": \"/yZUZjEp\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-v');\n                  assert.dom(this.textareaSelector).hasNoClass('oss-textarea--resize-h');\n                  assert.dom(this.textareaSelector).hasClass('oss-textarea--resize-none');\n\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('@rows', function () {\n      (0, _qunit.test)('Default height', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea />\n                  */\n                  {\n                    \"id\": \"VlrozZ3x\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.equal(document.querySelector(this.textareaSelector).offsetHeight, 52);\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('Row change height', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          var twoRowHeight, heightRowHeight;\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  this.rows = 2;\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea @rows={{this.rows}}/>\n                  */\n                  {\n                    \"id\": \"BL2XAOpH\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@rows\\\"],[[30,0,[\\\"rows\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  twoRowHeight = document.querySelector(this.textareaSelector).offsetHeight;\n                  assert.ok(twoRowHeight > 36);\n                  _context7.next = 7;\n                  return this.set('rows', 8);\n\n                case 7:\n                  heightRowHeight = document.querySelector(this.textareaSelector).offsetHeight;\n                  assert.ok(heightRowHeight > twoRowHeight);\n\n                case 9:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.test)('When the field is updated, the @onChange method is called', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.onChange = _sinon.default.spy();\n                _context8.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TextArea @value={{this.value}} @onChange={{this.onChange}}/>\n                */\n                {\n                  \"id\": \"wkdSNoIG\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context8.next = 5;\n                return (0, _testHelpers.typeIn)(this.textareaSelector, 'b');\n\n              case 5:\n                assert.ok(this.onChange.calledOnceWithExactly('Datab'));\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Extra attributes', function () {\n      (0, _qunit.test)('passing an extra class is applied to the component', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea class=\"my-extra-class\" />\n                  */\n                  {\n                    \"id\": \"K0ip07Ao\",\n                    \"block\": \"[[[8,[39,0],[[24,0,\\\"my-extra-class\\\"]],null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.my-extra-class').exists();\n\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('passing data-control-name works', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          var inputWrapper;\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea data-control-name=\"description-input\" />\n                  */\n                  {\n                    \"id\": \"JN91p5V5\",\n                    \"block\": \"[[[8,[39,0],[[24,\\\"data-control-name\\\",\\\"description-input\\\"]],null,null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  inputWrapper = document.querySelector('.oss-textarea-container');\n                  assert.equal(inputWrapper === null || inputWrapper === void 0 ? void 0 : inputWrapper.getAttribute('data-control-name'), 'description-input');\n\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('error management', function () {\n      (0, _qunit.test)('it throws an error if @resize is not a correct value', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::TextArea] The @resize parameter should be a value of resize');\n                  });\n                  this.resize = 'NotACorrectValue';\n                  _context11.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TextArea @resize={{this.resize}} />\n                  */\n                  {\n                    \"id\": \"/yZUZjEp\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@resize\\\"],[[30,0,[\\\"resize\\\"]]]],null]],[],false,[\\\"o-s-s/text-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, this);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/togglable-section-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/object\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _object, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/togglable-section', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      var _this = this;\n\n      this.iconUrl = 'https://fr.wikipedia.org/wiki/Fichier:How_to_use_icon.svg';\n      this.title = 'Fake title';\n      this.subtitle = 'Some subtitle contents. Some subtitle contents. Some subtitle contents.';\n      this.toggled = false;\n\n      this.onChange = function (value) {\n        (0, _object.set)(_this, 'toggled', value);\n      };\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                                 @iconUrl={{this.iconUrl}} @toggled={{this.toggled}}\n                                                                 @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"pvGVwji5\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.togglable-section').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It throws an error if the @title param is not passed', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [OSS::TogglableSection] The @title parameter is mandatory');\n                });\n                _context2.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TogglableSection @subtitle={{this.subtitle}}\n                                                                 @iconUrl={{this.iconUrl}} @toggled={{this.toggled}}\n                                                                 @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"nQUZaoaF\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It throws an error if the @toggled param is not passed', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [OSS::TogglableSection] The @toggled parameter is mandatory');\n                });\n                _context3.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                                 @iconUrl={{this.iconUrl}}\n                                                                 @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"gmekAMFk\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It throws an error if the @onChange function is not passed', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (0, _testHelpers.setupOnerror)(function (err) {\n                  assert.equal(err.message, 'Assertion Failed: [OSS::TogglableSection] The @onChange function is mandatory');\n                });\n                _context4.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                                 @iconUrl={{this.iconUrl}} @toggled={{this.toggled}} />\n                */\n                {\n                  \"id\": \"0VvL9/KA\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It displays no image if @iconUrl param is not passed', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                                 @toggled={{this.toggled}}\n                                                                 @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"eGtZdgQk\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('img').doesNotExist();\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('It displays a font-awesome icon if the @icon parameter is filled in', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::TogglableSection @title=\"title\" @icon=\"far fa-hourglass\" @onChange={{this.onChange}} @toggled={{false}} />\n                */\n                {\n                  \"id\": \"nyQwGI98\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@icon\\\",\\\"@onChange\\\",\\\"@toggled\\\"],[\\\"title\\\",\\\"far fa-hourglass\\\",[30,0,[\\\"onChange\\\"]],false]],null]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.far.fa-hourglass').exists();\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Toggle behavior', function () {\n      function renderComponent() {\n        return _renderComponent.apply(this, arguments);\n      }\n\n      function _renderComponent() {\n        _renderComponent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::TogglableSection @title={{this.title}} @subtitle={{this.subtitle}}\n                                                                @iconUrl={{this.iconUrl}} @toggled={{this.toggled}}\n                                                                @onChange={{this.onChange}}>\n                                          <:contents>\n                                            <div>contents named block</div>\n                                          </:contents>\n                                        </OSS::TogglableSection>\n                  */\n                  {\n                    \"id\": \"6ZBVR1Vb\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@subtitle\\\",\\\"@iconUrl\\\",\\\"@toggled\\\",\\\"@onChange\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"iconUrl\\\"]],[30,0,[\\\"toggled\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"contents\\\"],[[[[1,\\\"\\\\n                          \\\"],[10,0],[12],[1,\\\"contents named block\\\"],[13],[1,\\\"\\\\n                        \\\"]],[]]]]]],[],false,[\\\"o-s-s/togglable-section\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n        return _renderComponent.apply(this, arguments);\n      }\n\n      (0, _qunit.test)('When the toggle is enabled, the named-block contents are displayed', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return renderComponent();\n\n                case 2:\n                  assert.dom('.togglable-section').doesNotContainText('contents named block');\n                  _context7.next = 5;\n                  return (0, _testHelpers.click)('.upf-toggle');\n\n                case 5:\n                  assert.dom('.togglable-section').hasTextContaining('contents named block');\n\n                case 6:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When the toggle is enabled, the header part turns grey', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return renderComponent();\n\n                case 2:\n                  assert.dom('.inner-header').doesNotHaveClass('background-color-gray-50');\n                  _context8.next = 5;\n                  return (0, _testHelpers.click)('.upf-toggle');\n\n                case 5:\n                  assert.dom('.inner-header').hasClass('background-color-gray-50');\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When the toggle is disabled, the named-block contents are displayed', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  this.toggled = true;\n                  _context9.next = 3;\n                  return renderComponent();\n\n                case 3:\n                  assert.dom('.togglable-section').hasTextContaining('contents named block');\n                  _context9.next = 6;\n                  return (0, _testHelpers.click)('.upf-toggle');\n\n                case 6:\n                  assert.dom('.togglable-section').doesNotContainText('contents named block');\n\n                case 7:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('When the toggle is clicked, the @onChange method is called', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.onChange = _sinon.default.stub();\n                  _context10.next = 3;\n                  return renderComponent();\n\n                case 3:\n                  _context10.next = 5;\n                  return (0, _testHelpers.click)('.upf-toggle');\n\n                case 5:\n                  assert.true(this.onChange.calledOnceWithExactly(true, _sinon.default.match(function (propablyEvent) {\n                    return propablyEvent instanceof Event;\n                  })));\n\n                case 6:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/toggle-buttons-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/object\", \"@ember/test-helpers\", \"@ember/test-helpers/settled\", \"@ember/test-helpers/setup-onerror\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _object, _testHelpers, _settled, _setupOnerror, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/toggle-buttons', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      var _this = this;\n\n      this.selectedToggle = 'first';\n\n      this.onSelection = function (value) {\n        (0, _object.set)(_this, 'selectedToggle', value);\n      };\n\n      this.toggles = [{\n        value: 'first',\n        label: 'First'\n      }, {\n        value: 'second',\n        label: 'Second'\n      }];\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n                */\n                {\n                  \"id\": \"cTDXfO0q\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-toggle-buttons-container').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('If @selectedToggle is passed', function () {\n      (0, _qunit.test)('If the selectedToggle matches an entry from the toggles, then the toggle is set to selected', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  this.selectedToggle = 'second';\n                  _context2.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"cTDXfO0q\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('.oss-toggle-buttons-btn--selected').hasText('Second');\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('When clicking on an item', function () {\n      (0, _qunit.test)('the toggle is selected', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"cTDXfO0q\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context3.next = 4;\n                  return (0, _testHelpers.click)('.oss-toggle-buttons-btn:first-child');\n\n                case 4:\n                  assert.dom('.oss-toggle-buttons-btn--selected').hasText('First');\n                  _context3.next = 7;\n                  return (0, _testHelpers.click)('.oss-toggle-buttons-btn:last-child');\n\n                case 7:\n                  assert.dom('.oss-toggle-buttons-btn--selected').hasText('Second');\n\n                case 8:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the @onSelection method is not triggered if the item is already selected', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.onSelectionStub = _sinon.default.stub();\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @onSelection={{this.onSelectionStub}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"H6X9MwrU\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelectionStub\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context4.next = 5;\n                  return (0, _testHelpers.click)('.oss-toggle-buttons-btn:first-child');\n\n                case 5:\n                  assert.ok(this.onSelectionStub.notCalled);\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the @onSelection method is triggered with the selected value', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.onSelection = _sinon.default.spy();\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @onSelection={{this.onSelection}} @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"cTDXfO0q\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context5.next = 5;\n                  return (0, _testHelpers.click)('.oss-toggle-buttons-btn:last-child');\n\n                case 5:\n                  assert.ok(this.onSelection.calledWith('second'));\n\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if @toggles is not provided', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  (0, _setupOnerror.default)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @toggles parameter of type Toggle[] is mandatory');\n                  });\n                  _context6.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @onSelection={{this.onSelection}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"iyzJoBMH\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onSelection\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context6.next = 5;\n                  return (0, _settled.default)();\n\n                case 5:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if @onSelection is not provided', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  (0, _setupOnerror.default)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @onSelection parameter of type function is mandatory');\n                  });\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @toggles={{this.toggles}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"k6kIwNT0\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@toggles\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"toggles\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context7.next = 5;\n                  return (0, _settled.default)();\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if @selectedToggle is not provided', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  (0, _setupOnerror.default)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @selectedToggle parameter of type string or null is mandatory');\n                  });\n                  _context8.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @toggles={{this.toggles}} @onSelection={{this.onSelection}}  />\n                  */\n                  {\n                    \"id\": \"9F606NOt\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@toggles\\\",\\\"@onSelection\\\"],[[30,0,[\\\"toggles\\\"]],[30,0,[\\\"onSelection\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context8.next = 5;\n                  return (0, _settled.default)();\n\n                case 5:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if @selectedToggle is not a value of toggles', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  this.selectedToggle = 'toto';\n                  (0, _setupOnerror.default)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleButtons] The @selectedToggle parameter should be null or a value of toggles');\n                  });\n                  _context9.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleButtons @toggles={{this.toggles}} @onSelection={{this.onSelection}} @selectedToggle={{this.selectedToggle}}/>\n                  */\n                  {\n                    \"id\": \"DPgceCAL\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@toggles\\\",\\\"@onSelection\\\",\\\"@selectedToggle\\\"],[[30,0,[\\\"toggles\\\"]],[30,0,[\\\"onSelection\\\"]],[30,0,[\\\"selectedToggle\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-buttons\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                  _context9.next = 6;\n                  return (0, _settled.default)();\n\n                case 6:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/toggle-switch-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/toggle-switch', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it applies the right class on the toggle switch depending on the value', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.value = false;\n\n                this.onChange = function (v) {\n                  _this.set('value', v);\n                };\n\n                _context.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ToggleSwitch @value={{this.value}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"5mmRnCQb\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                assert.dom('.upf-toggle').hasNoClass('upf-toggle--toggled');\n                _context.next = 7;\n                return (0, _testHelpers.click)('.upf-toggle');\n\n              case 7:\n                assert.dom('.upf-toggle').hasClass('upf-toggle--toggled');\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it triggers the onChange action when clicking the button', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.onChange = function (v) {\n                  assert.equal(v, false);\n                };\n\n                _context2.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::ToggleSwitch @value={{true}} @onChange={{this.onChange}} />\n                */\n                {\n                  \"id\": \"LXGDbs+l\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context2.next = 5;\n                return (0, _testHelpers.click)('.upf-toggle');\n\n              case 5:\n                assert.expect(1);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if no onChange action is passed', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleSwitch] Please provide an onChange action');\n                  });\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleSwitch />\n                  */\n                  {\n                    \"id\": \"bET+DZSD\",\n                    \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if no value is passed', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  this.onChange = function () {};\n\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleSwitch] Please provide a boolean @value. @value is undefined');\n                  });\n                  _context4.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleSwitch @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"LuvymKvy\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if passed value is not a boolean', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  this.onChange = function () {};\n\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [component][OSS::ToggleSwitch] Please provide a boolean @value. @value is string');\n                  });\n                  _context5.next = 4;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::ToggleSwitch @value=\"true\" @onChange={{this.onChange}} />\n                  */\n                  {\n                    \"id\": \"XMJWs0uj\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@onChange\\\"],[\\\"true\\\",[30,0,[\\\"onChange\\\"]]]],null]],[],false,[\\\"o-s-s/toggle-switch\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/upload-area-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@upfluence/oss-components/test-support/services/uploader\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon, _uploader) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var file = new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], '1px.png', {\n    type: 'image/png'\n  });\n  (0, _qunit.module)('Integration | Component | o-s-s/upload-area', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.register('service:uploader', _uploader.default);\n      this.mockUploader = this.owner.lookup('service:uploader');\n      this.validationRules = [{\n        type: 'filesize',\n        value: '1MB'\n      }];\n      this.size = null;\n      this.subtitle = 'JPG, PNG, PDF (Max 800x400px - 2MB)';\n      this.onUploadSuccess = _sinon.default.stub();\n      this.onFileDeletion = _sinon.default.stub();\n    });\n    (0, _qunit.module)('rendering', function () {\n      (0, _qunit.module)('browse action', function () {\n        (0, _qunit.test)('the browse text is contained in a link', /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link').exists();\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link').hasText('browse');\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('clicking on browse text opens the hidden file input', /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n            var fileInput, fileInputClickStub;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-upload-area-container input[type=\"file\"]').exists();\n                    fileInput = document.querySelector('.oss-upload-area-container input[type=\"file\"]');\n                    fileInputClickStub = _sinon.default.stub(fileInput, 'click');\n                    _context2.next = 7;\n                    return (0, _testHelpers.click)('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link');\n\n                  case 7:\n                    assert.ok(fileInputClickStub.calledOnce);\n\n                  case 8:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('size', function () {\n        (0, _qunit.test)('it renders in the default size when no size arg is provided', /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-upload-area').hasClass('oss-upload-area--md');\n\n                  case 3:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it renders in the default size when no valid size is provided', /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    this.size = 'foo';\n                    _context4.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.oss-upload-area').hasClass('oss-upload-area--md');\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          return function (_x4) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it renders in the provided size when it is a valid one', /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    this.size = 'lg';\n                    _context5.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.oss-upload-area').hasClass('oss-upload-area--lg');\n\n                  case 4:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n\n          return function (_x5) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('subtitle', function () {\n        (0, _qunit.test)('it renders only the title when no subtitle is provided', /*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    this.subtitle = null;\n                    _context6.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3').hasText('Drop your file here, or browse');\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .font-color-gray-500').doesNotExist();\n\n                  case 5:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6, this);\n          }));\n\n          return function (_x6) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('it renders the subtitle when provided', /*#__PURE__*/function () {\n          var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3').hasText('Drop your file here, or browse');\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .font-color-gray-500').exists();\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .font-color-gray-500').hasText(this.subtitle);\n\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7, this);\n          }));\n\n          return function (_x7) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('disabled mode', function () {\n        (0, _qunit.test)('the right class is applied on the component', /*#__PURE__*/function () {\n          var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @disabled={{true}} @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"jECprN7o\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@disabled\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],true,[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-upload-area').hasClass('oss-upload-area--disabled');\n\n                  case 3:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8);\n          }));\n\n          return function (_x8) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('the browse word is not actionable', /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @disabled={{true}} @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"jECprN7o\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@disabled\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],true,[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    assert.dom('.oss-upload-area .fx-col.fx-gap-px-3 .fx-row.fx-xalign-center.fx-gap-px-3 .upf-link').doesNotExist();\n\n                  case 3:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9);\n          }));\n\n          return function (_x9) {\n            return _ref10.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('drag and drop support', function () {\n      (0, _qunit.module)('disabled mode', function () {\n        (0, _qunit.test)('dragging a file over the component does not do nothing', /*#__PURE__*/function () {\n          var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @disabled={{true}} @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"jECprN7o\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@disabled\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],true,[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context10.next = 4;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'dragenter');\n\n                  case 4:\n                    assert.dom('.oss-upload-area').hasNoClass('oss-upload-area--dragging');\n\n                  case 5:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, _callee10);\n          }));\n\n          return function (_x10) {\n            return _ref11.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.module)('active mode', function (hooks) {\n        hooks.beforeEach(function () {\n          this.file = file;\n        });\n        (0, _qunit.test)('dragging a file over the component applies the right class', /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n            return regeneratorRuntime.wrap(function _callee11$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context11.next = 4;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'dragenter');\n\n                  case 4:\n                    assert.dom('.oss-upload-area').hasClass('oss-upload-area--dragging');\n\n                  case 5:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, _callee11);\n          }));\n\n          return function (_x11) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('dropped file is validated', /*#__PURE__*/function () {\n          var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n            return regeneratorRuntime.wrap(function _callee12$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _sinon.default.spy(this.mockUploader, 'validate');\n\n                    _context12.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    _context12.next = 5;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                      dataTransfer: {\n                        files: [this.file]\n                      }\n                    });\n\n                  case 5:\n                    assert.ok(this.mockUploader.validate.calledWithExactly({\n                      file: this.file,\n                      privacy: 'private',\n                      scope: 'anonymous'\n                    }, this.validationRules));\n\n                  case 6:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, _callee12, this);\n          }));\n\n          return function (_x12) {\n            return _ref13.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('error toasts are displayed if the dropped file does not pass the validation rules', /*#__PURE__*/function () {\n          var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n            var toastStub, intlService;\n            return regeneratorRuntime.wrap(function _callee13$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    this.validationRules = [{\n                      type: 'filesize',\n                      value: '1B'\n                    }, {\n                      type: 'filetype',\n                      value: ['pdf']\n                    }];\n                    toastStub = _sinon.default.stub(this.owner.lookup('service:toast'), 'error');\n                    intlService = this.owner.lookup('service:intl');\n                    _context13.next = 5;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 5:\n                    _context13.next = 7;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                      dataTransfer: {\n                        files: [this.file]\n                      }\n                    });\n\n                  case 7:\n                    assert.ok(toastStub.calledWith(intlService.t(\"oss-components.upload-area.errors.filetype.description\"), intlService.t(\"oss-components.upload-area.errors.filetype.title\")));\n                    assert.ok(toastStub.calledWith(intlService.t(\"oss-components.upload-area.errors.filesize.description\", {\n                      max_filesize: '1B'\n                    }), intlService.t(\"oss-components.upload-area.errors.filesize.title\")));\n\n                  case 9:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, _callee13, this);\n          }));\n\n          return function (_x13) {\n            return _ref14.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('the uploaded file is displayed if the dropped file passes the validation', /*#__PURE__*/function () {\n          var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(assert) {\n            return regeneratorRuntime.wrap(function _callee14$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context14.next = 4;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                      dataTransfer: {\n                        files: [this.file]\n                      }\n                    });\n\n                  case 4:\n                    assert.dom('.oss-upload-item').exists();\n                    assert.dom('.oss-upload-area').doesNotExist();\n\n                  case 6:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _callee14, this);\n          }));\n\n          return function (_x14) {\n            return _ref15.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('clicking on the remove button in the upload item moves back to the upload state', /*#__PURE__*/function () {\n          var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(assert) {\n            return regeneratorRuntime.wrap(function _callee15$(_context15) {\n              while (1) {\n                switch (_context15.prev = _context15.next) {\n                  case 0:\n                    _context15.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} @onFileDeletion={{this.onFileDeletion}} />\n                            \n                    */\n                    {\n                      \"id\": \"q/wQA0K9\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\",\\\"@onFileDeletion\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onFileDeletion\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context15.next = 4;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                      dataTransfer: {\n                        files: [this.file]\n                      }\n                    });\n\n                  case 4:\n                    _context15.next = 6;\n                    return (0, _testHelpers.waitFor)('.oss-upload-item [data-control-name=\"upload-item-remove-button\"]');\n\n                  case 6:\n                    _context15.next = 8;\n                    return (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-remove-button\"]');\n\n                  case 8:\n                    assert.dom('.oss-upload-item').doesNotExist();\n                    assert.dom('.oss-upload-area').exists();\n                    assert.ok(this.onFileDeletion.calledOnce);\n\n                  case 11:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }\n            }, _callee15, this);\n          }));\n\n          return function (_x15) {\n            return _ref16.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('clicking on the edit button in the upload item opens the hidden file input', /*#__PURE__*/function () {\n          var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(assert) {\n            var fileInput, fileInputClickStub;\n            return regeneratorRuntime.wrap(function _callee16$(_context16) {\n              while (1) {\n                switch (_context16.prev = _context16.next) {\n                  case 0:\n                    _context16.next = 2;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadArea\n                                @uploader={{this.mockUploader}} @rules={{this.validationRules}} @size={{this.size}}\n                                @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"yaVOzINs\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 2:\n                    _context16.next = 4;\n                    return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                      dataTransfer: {\n                        files: [this.file]\n                      }\n                    });\n\n                  case 4:\n                    fileInput = document.querySelector('.oss-upload-area-container input[type=\"file\"]');\n                    fileInputClickStub = _sinon.default.stub(fileInput, 'click');\n                    _context16.next = 8;\n                    return (0, _testHelpers.waitFor)('.oss-upload-item [data-control-name=\"upload-item-edit-button\"]');\n\n                  case 8:\n                    _context16.next = 10;\n                    return (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-edit-button\"]');\n\n                  case 10:\n                    assert.ok(fileInputClickStub.calledOnce);\n\n                  case 11:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }\n            }, _callee16, this);\n          }));\n\n          return function (_x16) {\n            return _ref17.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.module)('displaying an existing file', function (hooks) {\n      hooks.beforeEach(function () {\n        this.artifact = {\n          filename: 'foo.png',\n          url: 'https://oss-components.org/foo.png',\n          content_type: 'image/png'\n        };\n      });\n      (0, _qunit.test)('the file is displayed using an upload-item', /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(assert) {\n          return regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  _context17.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadArea\n                            @uploader={{this.mockUploader}} @artifact={{this.artifact}} @rules={{this.validationRules}} @size={{this.size}}\n                            @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"hXvsDVFu\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@artifact\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"artifact\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('.oss-upload-area').doesNotExist();\n                  assert.dom('.oss-upload-item').exists();\n                  assert.dom('.oss-upload-item [data-control-name=\"upload-item-filename\"]').hasText('foo.png');\n\n                case 5:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17);\n        }));\n\n        return function (_x17) {\n          return _ref18.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('clicking on the remove button in the upload item moves back to the upload state', /*#__PURE__*/function () {\n        var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(assert) {\n          return regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  _context18.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadArea\n                            @uploader={{this.mockUploader}} @artifact={{this.artifact}} @rules={{this.validationRules}} @size={{this.size}}\n                            @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} @onFileDeletion={{this.onFileDeletion}} />\n                        \n                  */\n                  {\n                    \"id\": \"M0zLzDPn\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@artifact\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\",\\\"@onFileDeletion\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"artifact\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onFileDeletion\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context18.next = 4;\n                  return (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-remove-button\"]');\n\n                case 4:\n                  assert.dom('.oss-upload-item').doesNotExist();\n                  assert.dom('.oss-upload-area').exists();\n                  assert.ok(this.onFileDeletion.calledOnce);\n\n                case 7:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18, this);\n        }));\n\n        return function (_x18) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('clicking on the edit button in the upload item opens the hidden file input', /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(assert) {\n          var fileInput, fileInputClickStub;\n          return regeneratorRuntime.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  _context19.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadArea\n                            @uploader={{this.mockUploader}} @artifact={{this.artifact}} @rules={{this.validationRules}} @size={{this.size}}\n                            @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"hXvsDVFu\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@artifact\\\",\\\"@rules\\\",\\\"@size\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],[30,0,[\\\"artifact\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"size\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  fileInput = document.querySelector('.oss-upload-area-container input[type=\"file\"]');\n                  fileInputClickStub = _sinon.default.stub(fileInput, 'click');\n                  _context19.next = 6;\n                  return (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-edit-button\"]');\n\n                case 6:\n                  assert.ok(fileInputClickStub.calledOnce);\n\n                case 7:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19);\n        }));\n\n        return function (_x19) {\n          return _ref20.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('allow multiple files', function () {\n      (0, _qunit.test)('it allows the user to upload more than one file', /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(assert) {\n          return regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  _context20.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadArea\n                            @uploader={{this.mockUploader}} @multiple={{true}} @rules={{this.validationRules}}\n                            @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"9gxgGW1F\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@multiple\\\",\\\"@rules\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],true,[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context20.next = 4;\n                  return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                    dataTransfer: {\n                      files: [file]\n                    }\n                  });\n\n                case 4:\n                  _context20.next = 6;\n                  return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                    dataTransfer: {\n                      files: [file]\n                    }\n                  });\n\n                case 6:\n                  assert.dom('.oss-upload-area').exists();\n                  assert.dom('.oss-upload-item').exists({\n                    count: 2\n                  });\n\n                case 8:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20);\n        }));\n\n        return function (_x20) {\n          return _ref21.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the user can remove a specific uploaded item', /*#__PURE__*/function () {\n        var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(assert) {\n          return regeneratorRuntime.wrap(function _callee21$(_context21) {\n            while (1) {\n              switch (_context21.prev = _context21.next) {\n                case 0:\n                  _context21.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadArea\n                            @uploader={{this.mockUploader}} @multiple={{true}} @rules={{this.validationRules}}\n                            @subtitle={{this.subtitle}} @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"9gxgGW1F\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@multiple\\\",\\\"@rules\\\",\\\"@subtitle\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"mockUploader\\\"]],true,[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"subtitle\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-area\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context21.next = 4;\n                  return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                    dataTransfer: {\n                      files: [file]\n                    }\n                  });\n\n                case 4:\n                  _context21.next = 6;\n                  return (0, _testHelpers.triggerEvent)('.oss-upload-area', 'drop', {\n                    dataTransfer: {\n                      files: [file]\n                    }\n                  });\n\n                case 6:\n                  assert.dom('.oss-upload-item').exists({\n                    count: 2\n                  });\n                  _context21.next = 9;\n                  return (0, _testHelpers.waitFor)('.oss-upload-item:first-child [data-control-name=\"upload-item-remove-button\"]');\n\n                case 9:\n                  _context21.next = 11;\n                  return (0, _testHelpers.click)('.oss-upload-item:first-child [data-control-name=\"upload-item-remove-button\"]');\n\n                case 11:\n                  assert.dom('.oss-upload-item').exists({\n                    count: 1\n                  });\n\n                case 12:\n                case \"end\":\n                  return _context21.stop();\n              }\n            }\n          }, _callee21);\n        }));\n\n        return function (_x21) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/upload-item-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@upfluence/oss-components/test-support/services/uploader\", \"@upfluence/oss-components/types/uploader\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon, _uploader, _uploader2) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var buildFile = function buildFile() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '1px.png';\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'image/png';\n    return new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], name, {\n      type: type\n    });\n  };\n\n  (0, _qunit.module)('Integration | Component | o-s-s/upload-item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.register('service:uploader', _uploader.default);\n      this.uploader = this.owner.lookup('service:uploader');\n      this.file = {\n        filename: 'foo.png',\n        url: 'https://oss-components.org/foo.png',\n        content_type: 'image/png'\n      };\n      this.validationRules = [{\n        type: 'filesize',\n        value: '1MB'\n      }];\n      this.scope = 'anonymous';\n      this.privacy = _uploader2.FilePrivacy.PUBLIC;\n      this.onEdition = _sinon.default.stub();\n      this.onFileDeletion = _sinon.default.stub();\n      this.onUploadSuccess = _sinon.default.stub();\n    });\n    (0, _qunit.module)('provided file is a FileArtifact', function () {\n      [{\n        contentType: 'image/png',\n        expected: 'fa-image'\n      }, {\n        contentType: 'image/jpeg',\n        expected: 'fa-image'\n      }, {\n        contentType: 'video/mov',\n        expected: 'fa-file-video'\n      }, {\n        contentType: 'application/pdf',\n        expected: 'fa-file-pdf'\n      }, {\n        contentType: null,\n        expected: 'fa-file-alt'\n      }, {\n        contentType: 'foo',\n        expected: 'fa-file-alt'\n      }].forEach(function (spec) {\n        (0, _qunit.test)(\"a badge with a matching icon is used when the file content type is: \".concat(spec.contentType || 'empty'), /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    this.file.content_type = spec.contentType;\n                    _context.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadItem\n                                @uploader={{this.uploader}} @file={{this.file}}\n                                @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                                @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                                @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"dWwx90GT\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.upf-badge i').hasClass('far');\n                    assert.dom('.upf-badge i').hasClass(spec.expected);\n\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.test)('its name is rendered properly', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"upload-item-filename\"]').hasText('foo.png');\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('its size is rendered properly if present', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  this.file.size = 100;\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.dom('[data-control-name=\"upload-item-filesize\"]').hasText('100 B');\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('its size is not displayed if missing', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"upload-item-filesize]').doesNotExist();\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('clicking the view button opens the file url', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          var windowOpenStub;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  windowOpenStub = _sinon.default.stub(window, 'open');\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  _context5.next = 5;\n                  return (0, _testHelpers.click)('[data-control-name=\"upload-item-view-button\"]');\n\n                case 5:\n                  assert.ok(windowOpenStub.calledOnceWithExactly(this.file.url, '_blank'));\n                  windowOpenStub.restore();\n\n                case 7:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('provided file is a native File object', function (hooks) {\n      hooks.beforeEach(function () {\n        this.file = buildFile();\n      });\n      [{\n        contentType: 'image/png',\n        expected: 'fa-image'\n      }, {\n        contentType: 'image/jpeg',\n        expected: 'fa-image'\n      }, {\n        contentType: 'video/mov',\n        expected: 'fa-file-video'\n      }, {\n        contentType: 'application/pdf',\n        expected: 'fa-file-pdf'\n      }, {\n        contentType: 'foo',\n        expected: 'fa-file-alt'\n      }].forEach(function (spec) {\n        (0, _qunit.test)(\"a badge with a matching icon is used when the file content type is: \".concat(spec.contentType || 'empty'), /*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    this.file = buildFile('my-file', spec.contentType);\n                    _context6.next = 3;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      \n                              <OSS::UploadItem\n                                @uploader={{this.uploader}} @file={{this.file}}\n                                @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                                @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                                @onUploadSuccess={{this.onUploadSuccess}} />\n                            \n                    */\n                    {\n                      \"id\": \"dWwx90GT\",\n                      \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 3:\n                    assert.dom('.upf-badge i').hasClass('far');\n                    assert.dom('.upf-badge i').hasClass(spec.expected);\n\n                  case 5:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6, this);\n          }));\n\n          return function (_x6) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n      });\n      (0, _qunit.test)('its name is rendered properly', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"upload-item-filename\"]').hasText('1px.png');\n\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('its size is rendered properly if present', /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  assert.dom('[data-control-name=\"upload-item-filesize\"]').hasText('96 B');\n\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('the file is immediately uploaded', /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n          var uploadStub;\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  uploadStub = _sinon.default.stub(this.uploader, 'upload');\n                  _context9.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                  assert.ok(uploadStub.calledOnceWithExactly( // Partial match because the onSuccess, onFailure, and onProgress are component methods, hence not being\n                  // accessible from the tests.\n                  _sinon.default.match({\n                    file: this.file,\n                    privacy: this.privacy,\n                    scope: this.scope\n                  }), this.validationRules));\n\n                case 4:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x9) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it enters error mode if the upload failed', /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  this.uploader.mode = 'failure';\n\n                  _sinon.default.spy(this.uploader, 'upload');\n\n                  this.onUploadFailure = _sinon.default.stub();\n                  _context10.next = 5;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} @onUploadFailure={{this.onUploadFailure}} />\n                        \n                  */\n                  {\n                    \"id\": \"kUEY7IB0\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\",\\\"@onUploadFailure\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]],[30,0,[\\\"onUploadFailure\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 5:\n                  _context10.next = 7;\n                  return (0, _testHelpers.waitFor)('.oss-upload-item.oss-upload-item--errored');\n\n                case 7:\n                  assert.dom('.oss-upload-item').hasClass('oss-upload-item--errored');\n                  assert.dom('.oss-upload-item [data-control-name=\"upload-item-try-again-button\"]').exists();\n                  assert.dom('.oss-upload-item [data-control-name=\"upload-item-try-again-button\"]').hasText('Try again');\n                  _context10.next = 12;\n                  return (0, _testHelpers.click)('.oss-upload-item [data-control-name=\"upload-item-try-again-button\"]');\n\n                case 12:\n                  assert.ok(this.uploader.upload.calledWithExactly( // Partial match because the onSuccess, onFailure, and onProgress are component methods, hence not being\n                  // accessible from the tests.\n                  _sinon.default.match({\n                    file: this.file,\n                    privacy: this.privacy,\n                    scope: this.scope\n                  }), this.validationRules));\n                  assert.true(this.onUploadFailure.calledOnceWithExactly({\n                    payload: {}\n                  }));\n\n                case 14:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10, this);\n        }));\n\n        return function (_x10) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('common actions', function () {\n      (0, _qunit.test)('clicking the edit button triggers the onEdition action', /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n          return regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context11.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"upload-item-edit-button\"]');\n\n                case 4:\n                  assert.ok(this.onEdition.calledOnce);\n\n                case 5:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, this);\n        }));\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('clicking the remove button triggers the onDeletion action', /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    \n                          <OSS::UploadItem\n                            @uploader={{this.uploader}} @file={{this.file}}\n                            @rules={{this.validationRules}} @scope={{this.scope}} @privacy={{this.privacy}}\n                            @onEdition={{this.onEdition}} @onDeletion={{this.onFileDeletion}}\n                            @onUploadSuccess={{this.onUploadSuccess}} />\n                        \n                  */\n                  {\n                    \"id\": \"rajQ8uBK\",\n                    \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@uploader\\\",\\\"@file\\\",\\\"@rules\\\",\\\"@scope\\\",\\\"@privacy\\\",\\\"@onEdition\\\",\\\"@onDeletion\\\",\\\"@onUploadSuccess\\\"],[[30,0,[\\\"uploader\\\"]],[30,0,[\\\"file\\\"]],[30,0,[\\\"validationRules\\\"]],[30,0,[\\\"scope\\\"]],[30,0,[\\\"privacy\\\"]],[30,0,[\\\"onEdition\\\"]],[30,0,[\\\"onFileDeletion\\\"]],[30,0,[\\\"onUploadSuccess\\\"]]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"o-s-s/upload-item\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context12.next = 4;\n                  return (0, _testHelpers.click)('[data-control-name=\"upload-item-remove-button\"]');\n\n                case 4:\n                  assert.ok(this.onFileDeletion.calledOnce);\n\n                case 5:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, this);\n        }));\n\n        return function (_x12) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/components/o-s-s/url-input-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/test-helpers/dom/fill-in\", \"@ember/test-helpers/dom/type-in\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _fillIn, _typeIn, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | o-s-s/url-input', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <OSS::UrlInput @prefix=\"https://\" />\n                */\n                {\n                  \"id\": \"/SUAPxET\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\"],[\\\"https://\\\"]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.dom('.oss-input-group').exists();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('With @validationRegex parameter', function () {\n      (0, _qunit.test)('When the text matches the Regex, the onChange function has the newValue and the isValid parameter is set to true', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n                  this.value = '';\n                  this.onChange = _sinon.default.stub();\n                  _context2.next = 5;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                        @onChange={{this.onChange}} @value={{this.value}}\n                                                        @validationRegex={{this.subdomainRegex}} />\n                  */\n                  {\n                    \"id\": \"iMomYBSo\",\n                    \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 5:\n                  _context2.next = 7;\n                  return (0, _fillIn.default)('input', 'fakedomai');\n\n                case 7:\n                  _context2.next = 9;\n                  return (0, _typeIn.default)('input', 'n');\n\n                case 9:\n                  assert.true(this.onChange.calledOnceWithExactly('fakedomain', true));\n\n                case 10:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.module)(\"When the text doesn't match the Regex\", function () {\n        (0, _qunit.test)('The onChange function has the newValue and the isValid parameter is set to false', /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n                    this.value = '';\n                    this.onChange = _sinon.default.stub();\n                    _context3.next = 5;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                          @onChange={{this.onChange}} @value={{this.value}}\n                                                          @validationRegex={{this.subdomainRegex}} />\n                    */\n                    {\n                      \"id\": \"iMomYBSo\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 5:\n                    _context3.next = 7;\n                    return (0, _typeIn.default)('input', 'a');\n\n                  case 7:\n                    assert.true(this.onChange.calledOnceWithExactly('a', false));\n\n                  case 8:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          return function (_x3) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('If no error message has been specified by the parent, a default one is displayed', /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n                    this.value = '';\n                    _context4.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                          @onChange={{this.onChange}} @value={{this.value}}\n                                                          @validationRegex={{this.subdomainRegex}} />\n                    */\n                    {\n                      \"id\": \"iMomYBSo\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    _context4.next = 6;\n                    return (0, _typeIn.default)('input', 'a');\n\n                  case 6:\n                    assert.dom('.text-color-error').hasText('This is not a valid URL.');\n\n                  case 7:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          return function (_x4) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n        (0, _qunit.test)('If an error message has been specified by the parent, it is displayed', /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    this.subdomainRegex = /^[a-zA-Z0-9]+[a-zA-Z0-9-._]*[a-zA-Z0-9]+$/;\n                    this.value = '';\n                    _context5.next = 4;\n                    return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                    /*\n                      <OSS::UrlInput @prefix=\"https://\" @suffix=\".myshopify.com\"\n                                                          @onChange={{this.onChange}} @value={{this.value}}\n                                                          @errorMessage=\"This is a custom error message.\"\n                                                          @validationRegex={{this.subdomainRegex}} />\n                    */\n                    {\n                      \"id\": \"10/j65Se\",\n                      \"block\": \"[[[8,[39,0],null,[[\\\"@prefix\\\",\\\"@suffix\\\",\\\"@onChange\\\",\\\"@value\\\",\\\"@errorMessage\\\",\\\"@validationRegex\\\"],[\\\"https://\\\",\\\".myshopify.com\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]],\\\"This is a custom error message.\\\",[30,0,[\\\"subdomainRegex\\\"]]]],null]],[],false,[\\\"o-s-s/url-input\\\"]]\",\n                      \"moduleName\": \"(unknown template module)\",\n                      \"isStrictMode\": false\n                    }));\n\n                  case 4:\n                    _context5.next = 6;\n                    return (0, _typeIn.default)('input', 'a');\n\n                  case 6:\n                    assert.dom('.text-color-error').hasText('This is a custom error message.');\n\n                  case 7:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n\n          return function (_x5) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/helpers/redirect-to-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Helper | redirect-to', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.url = 'https://github.com/upfluence/oss-components';\n    });\n    (0, _qunit.test)('it redirects to the url on the current tab if not target is passed', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.redirectStub = _sinon.default.stub(window, 'open');\n                _context.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <div {{on \"click\" (redirect-to url=this.url)}}>link</div>\n                */\n                {\n                  \"id\": \"zt+hm0jz\",\n                  \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"url\\\"],[[30,0,[\\\"url\\\"]]]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context.next = 5;\n                return (0, _testHelpers.click)('div');\n\n              case 5:\n                assert.ok(this.redirectStub.calledOnceWithExactly(this.url, '_self'));\n\n                _sinon.default.restore();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it redirects to the url on the provided target', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.redirectStub = _sinon.default.stub(window, 'open');\n                _context2.next = 3;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <div {{on \"click\" (redirect-to url=this.url target=\"_blank\")}}>link</div>\n                */\n                {\n                  \"id\": \"PArLA07E\",\n                  \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"url\\\",\\\"target\\\"],[[30,0,[\\\"url\\\"]],\\\"_blank\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 3:\n                _context2.next = 5;\n                return (0, _testHelpers.click)('div');\n\n              case 5:\n                assert.ok(this.redirectStub.calledOnceWithExactly(this.url, '_blank'));\n\n                _sinon.default.restore();\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if the url argument is missing', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [helper][OSS::redirect-to] url argument is mandatory.');\n                  });\n                  _context3.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <div {{on \"click\" (redirect-to)}}>link</div>\n                  */\n                  {\n                    \"id\": \"irZd7nQN\",\n                    \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,null]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if the target is not a valid one', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [helper][OSS::redirect-to] the target argument must be a valid one: https://www.w3schools.com/tags/att_a_target.asp.');\n                  });\n                  _context4.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <div {{on \"click\" (redirect-to url=this.url target=\"_foo\")}}>link</div>\n                  */\n                  {\n                    \"id\": \"IaSpo7qT\",\n                    \"block\": \"[[[11,0],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"url\\\",\\\"target\\\"],[[30,0,[\\\"url\\\"]],\\\"_foo\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"redirect-to\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/integration/helpers/stop-propagation-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Helper | stop-propagation', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.nativeStopPropagation = Event.prototype.stopPropagation;\n    });\n    hooks.afterEach(function () {\n      Event.prototype.stopPropagation = this.nativeStopPropagation;\n    });\n    (0, _qunit.test)('it renders', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Event.prototype.stopPropagation = function () {\n                  assert.ok(true);\n                };\n\n                this.onClick = function (arg, event) {\n                  assert.equal(arg, 'foo');\n                  assert.ok(event instanceof MouseEvent);\n                };\n\n                _context.next = 4;\n                return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                /*\n                  <button {{on \"click\" (stop-propagation (fn this.onClick \"foo\"))}}>stop propagation</button>\n                */\n                {\n                  \"id\": \"jhRPub3/\",\n                  \"block\": \"[[[11,\\\"button\\\"],[4,[38,0],[\\\"click\\\",[28,[37,1],[[28,[37,2],[[30,0,[\\\"onClick\\\"]],\\\"foo\\\"],null]],null]],null],[12],[1,\\\"stop propagation\\\"],[13]],[],false,[\\\"on\\\",\\\"stop-propagation\\\",\\\"fn\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context.next = 6;\n                return (0, _testHelpers.click)('button');\n\n              case 6:\n                assert.expect(3);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/integration/helpers/transition-to-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _sinon) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Helper | transition-to', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.transitionToStub = _sinon.default.stub(this.owner.lookup('service:router'), 'transitionTo');\n    });\n    (0, _qunit.module)('only a route has been passed', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route only', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to route=\"foo\")}}>link</a>\n                  */\n                  {\n                    \"id\": \"EZeBAbs7\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\"],[\\\"foo\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context.next = 4;\n                  return (0, _testHelpers.click)('a');\n\n                case 4:\n                  assert.ok(this.transitionToStub.calledWithExactly('foo', {\n                    queryParams: {}\n                  }));\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('a model has been passed to the transition', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route only', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to route=\"foo\" model=\"1\")}}>link</a>\n                  */\n                  {\n                    \"id\": \"qYSLSbud\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"model\\\"],[\\\"foo\\\",\\\"1\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context2.next = 4;\n                  return (0, _testHelpers.click)('a');\n\n                case 4:\n                  assert.ok(this.transitionToStub.calledWithExactly('foo', '1', {\n                    queryParams: {}\n                  }));\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('multiple models have been passed to the transition', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route only', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to route=\"foo\" models=(array 'fizz' 'buzz'))}}>link</a>\n                  */\n                  {\n                    \"id\": \"aji5x8cg\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"models\\\"],[\\\"foo\\\",[28,[37,2],[\\\"fizz\\\",\\\"buzz\\\"],null]]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\",\\\"array\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context3.next = 4;\n                  return (0, _testHelpers.click)('a');\n\n                case 4:\n                  assert.ok(this.transitionToStub.calledWithExactly('foo', 'fizz', 'buzz', {\n                    queryParams: {}\n                  }));\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('with queryParams', function () {\n      (0, _qunit.test)('it triggers the RouterService#transitionTo method with the route and queryParams', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to route=\"foo\" queryParams=(hash myParam=\"bruh\"))}}>link</a>\n                  */\n                  {\n                    \"id\": \"VAaS03Sv\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"queryParams\\\"],[\\\"foo\\\",[28,[37,2],null,[[\\\"myParam\\\"],[\\\"bruh\\\"]]]]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\",\\\"hash\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 2:\n                  _context4.next = 4;\n                  return (0, _testHelpers.click)('a');\n\n                case 4:\n                  assert.ok(this.transitionToStub.calledWithExactly('foo', {\n                    queryParams: {\n                      myParam: 'bruh'\n                    }\n                  }));\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    });\n    (0, _qunit.module)('Error management', function () {\n      (0, _qunit.test)('it throws an error if the route argument is missing', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [helper][OSS::transition-to] route argument is mandatory');\n                  });\n                  _context5.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to)}}>link</a>\n                  */\n                  {\n                    \"id\": \"Bs/hyUF1\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,null]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if both models and model arguments are passed', /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [helper][OSS::transition-to] only one of model or models argument must be provided');\n                  });\n                  _context6.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to route=\"foo\" models=(array '1' '2') model='3')}}>link</a>\n                  */\n                  {\n                    \"id\": \"DQ/GUThh\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"models\\\",\\\"model\\\"],[\\\"foo\\\",[28,[37,2],[\\\"1\\\",\\\"2\\\"],null],\\\"3\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\",\\\"array\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it throws an error if queryParams argument is passed but is not an object', /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  (0, _testHelpers.setupOnerror)(function (err) {\n                    assert.equal(err.message, 'Assertion Failed: [helper][OSS::transition-to] queryParams argument must be an object');\n                  });\n                  _context7.next = 3;\n                  return (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n                  /*\n                    <a {{on \"click\" (transition-to route=\"foo\" queryParams='string')}}>link</a>\n                  */\n                  {\n                    \"id\": \"dYWKKlDa\",\n                    \"block\": \"[[[11,3],[4,[38,0],[\\\"click\\\",[28,[37,1],null,[[\\\"route\\\",\\\"queryParams\\\"],[\\\"foo\\\",\\\"string\\\"]]]],null],[12],[1,\\\"link\\\"],[13]],[],false,[\\\"on\\\",\\\"transition-to\\\"]]\",\n                    \"moduleName\": \"(unknown template module)\",\n                    \"isStrictMode\": false\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/test-helper\", [\"dummy/app\", \"dummy/config/environment\", \"@ember/test-helpers\", \"qunit\", \"qunit-dom\", \"ember-qunit\", \"@upfluence/oss-components/test-support/register-assertions\"], function (_app, _environment, _testHelpers, QUnit, _qunitDom, _emberQunit, _registerAssertions) {\n  \"use strict\";\n\n  // @ts-nocheck\n  (0, _registerAssertions.default)(QUnit.assert);\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"dummy/tests/unit/services/base-uploader-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | base-uploader', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    hooks.beforeEach(function () {\n      this.service = this.owner.lookup('service:base-uploader');\n    });\n    (0, _qunit.test)('it exists', function (assert) {\n      assert.ok(this.service);\n    });\n    (0, _qunit.module)('#validate method', function (hooks) {\n      hooks.beforeEach(function () {\n        this.request = {\n          file: new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], '1px.png', {\n            type: 'image/png'\n          }),\n          privacy: 'private',\n          scope: 'anonymous'\n        };\n      });\n      (0, _qunit.test)('it passes if no validation is provided', function (assert) {\n        this.validationRules = [];\n        assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n          passes: true,\n          validations: []\n        });\n      });\n      (0, _qunit.test)('it filters out rules with empty values and passes', function (assert) {\n        this.validationRules = [{\n          type: 'filetype',\n          value: []\n        }, {\n          type: 'filesize',\n          value: null\n        }];\n        assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n          passes: true,\n          validations: []\n        });\n      });\n      (0, _qunit.module)('FileType validator', function () {\n        (0, _qunit.test)(\"it does not pass if the file's type is not one of the allowed ones\", function (assert) {\n          this.validationRules = [{\n            type: 'filetype',\n            value: ['pdf']\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: false,\n            validations: [{\n              passes: false,\n              rule: {\n                type: 'filetype',\n                value: ['pdf']\n              }\n            }]\n          });\n        });\n        (0, _qunit.test)(\"it passes if the file's type is one of the allowed ones\", function (assert) {\n          this.validationRules = [{\n            type: 'filetype',\n            value: ['png']\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: true,\n            validations: [{\n              passes: true,\n              rule: {\n                type: 'filetype',\n                value: ['png']\n              }\n            }]\n          });\n        });\n        (0, _qunit.test)(\"it passes if the file's type matches one of a templated filetype\", function (assert) {\n          this.validationRules = [{\n            type: 'filetype',\n            value: ['image']\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: true,\n            validations: [{\n              passes: true,\n              rule: {\n                type: 'filetype',\n                value: ['png', 'jpg', 'jpeg']\n              }\n            }]\n          });\n        });\n      });\n      (0, _qunit.module)('FileSize validator', function () {\n        (0, _qunit.test)('it does not pass if the file is heavier than the maximum allowed', function (assert) {\n          this.validationRules = [{\n            type: 'filesize',\n            value: '1B'\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: false,\n            validations: [{\n              passes: false,\n              rule: {\n                type: 'filesize',\n                value: '1B'\n              }\n            }]\n          });\n        });\n        (0, _qunit.test)('it passes if the file is heavier than the maximum allowed', function (assert) {\n          this.validationRules = [{\n            type: 'filesize',\n            value: '10MB'\n          }];\n          assert.deepEqual(this.service.validate(this.request, this.validationRules), {\n            passes: true,\n            validations: [{\n              passes: true,\n              rule: {\n                type: 'filesize',\n                value: '10MB'\n              }\n            }]\n          });\n        });\n      });\n    });\n    (0, _qunit.test)('calling the `url` getter throws throws a NotImplemented error', function (assert) {\n      try {\n        this.service.url;\n      } catch (err) {\n        assert.equal(err.message, '[@upfluence/oss-components::uploader] NotImpemented: Please extend this service and inherit this method.');\n      }\n\n      assert.expect(1);\n    });\n    (0, _qunit.test)('calling the upload method throws a NotImplemented error', function (assert) {\n      try {\n        this.service.upload({\n          file: new File([new Blob(['iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=='])], '1px.png', {\n            type: 'image/png'\n          }),\n          privacy: 'private',\n          scope: 'anonymous'\n        }, []);\n      } catch (err) {\n        assert.equal(err.message, '[@upfluence/oss-components::uploader] NotImpemented: Please extend this service and inherit this method.');\n      }\n    });\n  });\n});","define(\"dummy/tests/unit/services/toast-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@upfluence/oss-components/services/toast\"], function (_qunit, _emberQunit, _testHelpers, _toast) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var TOAST_TYPES = ['info', 'success', 'warning', 'error'];\n  (0, _qunit.module)('Unit | Service | toast', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    hooks.beforeEach(function () {\n      this.service = this.owner.lookup('service:toast');\n    });\n    (0, _qunit.test)('it exists', function (assert) {\n      assert.ok(this.service);\n      assert.ok(this.service instanceof _toast.default);\n      assert.ok(typeof this.service.info === 'function');\n      assert.ok(typeof this.service.success === 'function');\n      assert.ok(typeof this.service.warning === 'function');\n      assert.ok(typeof this.service.error === 'function');\n    });\n    (0, _qunit.module)('public methods', function () {\n      TOAST_TYPES.forEach(function (type) {\n        (0, _qunit.test)(\"\".concat(type), /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n            var toast;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    toast = this.service[type](\"Message of \".concat(type), \"Title \".concat(type), {\n                      timeout: 100\n                    });\n                    assert.dom(toast).exists();\n                    assert.dom(toast).hasClass(\"toast--\".concat(type));\n                    assert.dom(toast).hasClass(\"toast--visible\");\n                    assert.dom(toast.querySelector('.subtitle')).hasText(\"Message of \".concat(type));\n                    assert.dom(toast.querySelector('.title')).hasText(\"Title \".concat(type));\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    (0, _qunit.test)('it should close the toast when clicking on the button', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        var toast, buttonElement, animation;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                toast = this.service.error('Message', 'Title', {\n                  timeout: 100\n                });\n                buttonElement = toast.querySelector('button');\n                assert.dom(buttonElement).exists({\n                  count: 1\n                });\n                _context2.next = 5;\n                return (0, _testHelpers.click)(buttonElement);\n\n              case 5:\n                animation = toast.getAnimations().filter(function (animation) {\n                  return animation.id === 'destroy';\n                })[0];\n                _context2.next = 8;\n                return animation.finished;\n\n              case 8:\n                assert.true(toast.parentElement === null);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('the onclick function is called when the toast is clicked', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        var toast;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                toast = this.service.error('Message', 'Title', {\n                  timeout: 100,\n                  onclick: function onclick(event) {\n                    assert.equal(event.type, 'click');\n                  }\n                });\n                _context3.next = 3;\n                return (0, _testHelpers.click)(toast);\n\n              case 3:\n                assert.expect(1);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.module)('badge options', function () {\n      (0, _qunit.test)('it should display icon', /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n          var toast, badge;\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  toast = this.service.error('Message', 'Title', {\n                    timeout: 100,\n                    badge: {\n                      icon: 'fab fa-jedi-order'\n                    }\n                  });\n                  badge = toast.querySelector('.upf-badge i');\n                  assert.dom(badge).hasClass('fab');\n                  assert.dom(badge).hasClass('fa-jedi-order');\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it should display img', /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n          var url, toast, badge;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  url = '/assets/images/upfluence-white-logo.svg';\n                  toast = this.service.error('Message', 'Title', {\n                    timeout: 100,\n                    badge: {\n                      image: url\n                    }\n                  });\n                  badge = toast.querySelector('.upf-badge img');\n                  assert.dom(badge).hasAttribute('src', url);\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x5) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n      (0, _qunit.test)('it should display text', /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n          var toast, badge;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  toast = this.service.error('Message', 'Title', {\n                    timeout: 100,\n                    badge: {\n                      text: '1'\n                    }\n                  });\n                  badge = toast.querySelector('.upf-badge span');\n                  assert.dom(badge).hasText('1');\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this);\n        }));\n\n        return function (_x6) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n  });\n});","define(\"dummy/tests/unit/utils/upf-local-storage-test\", [\"dummy/utils/upf-local-storage\", \"qunit\"], function (_upfLocalStorage, _qunit) {\n  \"use strict\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var TEST_KEY = 'testKey';\n  var DEFAULT_PREFIX = '_upf.';\n  var CUSTOM_PREFIX = 'workflow';\n  var TEST_VALUE = 'testValue';\n  var TEST_OBJECT = {\n    attr: TEST_VALUE\n  };\n  var TEST_OBJECT_UPDATE = {\n    attr2: TEST_VALUE\n  };\n  var ERROR_TYPE_STRING = '[value] parameter MUST be of type :string';\n  var ERROR_TYPE_OBJECT = '[object] parameter MUST be of type :object';\n  (0, _qunit.module)('Unit | Utility | UPFLocalStorage', function (hooks) {\n    hooks.beforeEach(function () {\n      localStorage.clear();\n    });\n    (0, _qunit.test)('it can be instanciated', function (assert) {\n      var upfStorage = new _upfLocalStorage.default();\n      assert.ok(upfStorage);\n    });\n    (0, _qunit.module)('Prefix', function () {\n      (0, _qunit.test)('Saving content without specifying a prefix will use the default \".upf_\" prefix', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.equal(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('Setting a custom prefix on the Ctor will save content with the set prefix', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.equal(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: saveObject', function () {\n      (0, _qunit.test)('saveObject() sets the default prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        var localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT, localStorageParsedObject);\n      });\n      (0, _qunit.test)('saveObject() sets the custom prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        var localStorageParsedObject = JSON.parse(localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT, localStorageParsedObject);\n      });\n      (0, _qunit.test)('saveObject() throws an error if the object parameter is not an object', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        assert.throws(function () {\n          upfStorage.saveObject(TEST_KEY, TEST_VALUE);\n        }, ERROR_TYPE_OBJECT);\n      });\n      (0, _qunit.test)('saveObject() saves an object in the localStorage as a stringified JSON', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        var localStorageStringifiedObject = localStorage.getItem(DEFAULT_PREFIX + TEST_KEY);\n        assert.deepEqual(JSON.stringify(TEST_OBJECT), localStorageStringifiedObject);\n      });\n    });\n    (0, _qunit.module)('Method: updateObject', function () {\n      (0, _qunit.test)('updateObject() sets the default prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        var localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT_UPDATE, localStorageParsedObject);\n      });\n      (0, _qunit.test)('updateObject() sets the custom prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        var localStorageParsedObject = JSON.parse(localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT_UPDATE, localStorageParsedObject);\n      });\n      (0, _qunit.test)('updateObject() throws an error if the object parameter is not an object', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        assert.throws(function () {\n          upfStorage.updateObject(TEST_KEY, TEST_VALUE);\n        }, ERROR_TYPE_OBJECT);\n      });\n      (0, _qunit.test)('updateObject() adds content to the existing object', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        var localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(_objectSpread(_objectSpread({}, TEST_OBJECT), TEST_OBJECT_UPDATE), localStorageParsedObject);\n      });\n      (0, _qunit.test)('updateObject() creates the Object if there is no previous value', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.updateObject(TEST_KEY, TEST_OBJECT_UPDATE);\n        var localStorageParsedObject = JSON.parse(localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        assert.deepEqual(TEST_OBJECT_UPDATE, localStorageParsedObject);\n      });\n    });\n    (0, _qunit.module)('Method: getObject', function () {\n      (0, _qunit.test)('getObject() returns an empty object if the key is not found', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        assert.deepEqual({}, upfStorage.getObject(TEST_KEY));\n      });\n      (0, _qunit.test)('getObject() returns an object with the proper contents', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveObject(TEST_KEY, TEST_OBJECT);\n        assert.deepEqual(TEST_OBJECT, upfStorage.getObject(TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: saveItem', function () {\n      (0, _qunit.test)('saveItem() throws an error if the object parameter is not a string', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        assert.throws(function () {\n          upfStorage.saveItem(TEST_KEY, 1337);\n        }, ERROR_TYPE_STRING);\n      });\n      (0, _qunit.test)('saveItem() sets the default prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('saveItem() sets the custom prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('saveItem() saves the proper value in the localStorage', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: updateItem', function () {\n      (0, _qunit.test)('updateItem() throws an error if the object parameter is not a string', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        assert.throws(function () {\n          upfStorage.updateItem(TEST_KEY, 1337);\n        }, ERROR_TYPE_STRING);\n      });\n      (0, _qunit.test)('updateItem() sets the default prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('updateItem() sets the custom prefix key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n      (0, _qunit.test)('updateItem() overwrites any previous key and saves the value', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        upfStorage.updateItem(TEST_KEY, TEST_VALUE + TEST_VALUE);\n        assert.deepEqual(TEST_VALUE + TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: getItem', function () {\n      (0, _qunit.test)('getItem() returns null if no key is found', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        assert.equal(null, upfStorage.getItem(TEST_KEY));\n      });\n      (0, _qunit.test)('getItem() returns the proper value if the key is found', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.equal(TEST_VALUE, upfStorage.getItem(TEST_KEY));\n      });\n    });\n    (0, _qunit.module)('Method: delete', function () {\n      (0, _qunit.test)('delete() uses the default prefix when removing a key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default();\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(DEFAULT_PREFIX + TEST_KEY));\n        upfStorage.delete(TEST_KEY);\n        assert.equal(null, upfStorage.getItem(TEST_KEY));\n      });\n      (0, _qunit.test)('delete() uses the custom prefix when removing a key', function (assert) {\n        var upfStorage = new _upfLocalStorage.default(CUSTOM_PREFIX);\n        upfStorage.saveItem(TEST_KEY, TEST_VALUE);\n        assert.deepEqual(TEST_VALUE, localStorage.getItem(CUSTOM_PREFIX + TEST_KEY));\n        upfStorage.delete(TEST_KEY);\n        assert.equal(null, upfStorage.getItem(TEST_KEY));\n      });\n    });\n  });\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingspjtiljljpjxhwrVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxvhhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC31BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvrclzyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxzpjlrnzWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttattyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnvtlvjknzt+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1lzhvpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnjBA;AACA;","file":"tests.js"}