.oss-input-group {
  .oss-input-group-row {
    border-radius: var(--border-radius-sm);
    transition: all 250ms ease-in-out;

    border: 1px solid var(--color-border-default);
    overflow: hidden;
    height: 36px;

    & > div {
      height: 100%;
    }

    &-prefix,
    &-suffix,
    input {
      border-radius: 0;
      border: none;
    }

    &-prefix,
    &-suffix {
      display: flex;
      align-items: center;

      padding: var(--spacing-px-3) var(--spacing-px-12);

      color: var(--color-gray-500);
      background-color: var(--color-gray-100);
      transition: all 250ms ease-in-out;
    }

    &-prefix {
      border-right: 1px solid var(--color-border-default);
    }

    &-suffix {
      border-left: 1px solid var(--color-border-default);
    }

    .oss-input-container input::placeholder {
      color: var(--color-gray-400);
    }

    &:not(.disabled, :disabled) {
      &:hover {
        .oss-input-container .upf-input,
        .oss-input-container .upf-input:hover {
          .input-state-hover;
          border: none;
        }
      }

      &:active {
        .input-state-active;

        .oss-input-container .upf-input:active {
          .reset-box-shadow;
          .input-state-active;
          border: none;
        }
      }

      &:focus-within {
        .input-state-active;

        .oss-input-container input,
        .oss-input-container .upf-input:focus {
          .input-state-focus;
          .reset-box-shadow;
          border: none;
        }
      }
    }

    &--error {
      .border-color-error;

      &:not(.disabled, :disabled) {
        &:hover {
          .oss-input-container input {
            .input-state-error-hover;
          }
        }

        &:active {
          .input-state-error-active;
        }

        &:focus-within {
          .input-state-error-focus;

          .oss-input-container input,
          .oss-input-container .upf-input:focus {
            .reset-box-shadow;
          }
        }
      }
    }
  }
}
