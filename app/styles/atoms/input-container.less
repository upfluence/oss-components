.oss-input-container {
  position: relative;

  .yielded-input input {
    &:extend(.upf-input);
    width: 100%;

    &::placeholder {
      color: var(--color-gray-400);
    }

    &:hover {
      .input-state-hover;
    }

    &:focus {
      .input-state-focus;
    }

    &:active {
      .input-state-active;
    }

    &:disabled {
      .input-state-disabled;
    }
  }

  .upf-input {
    width: 100%;
  }

  &--transparent {
    background-color: transparent;

    &:not(:disabled, .disabled) {
      .yielded-input input,
      .upf-input {
        &:hover,
        &:active,
        &:focus {
          .input-state-reset;
        }
      }
    }
  }

  &--success {
    .yielded-input input,
    .upf-input {
      .upf-input--success;
    }
  }

  &--warning {
    .yielded-input input,
    .upf-input {
      .upf-input--warning;
    }
  }

  &--errored,
  &--error {
    .yielded-input input,
    .upf-input {
      .upf-input--errored;
    }
  }

  textarea.upf-input {
    max-width: 100%;
    height: var(--height-pc-100);
  }

  .morpheme {
    position: absolute;
    top: 0px;
    bottom: 0px;
    align-items: center;
    display: flex;
  }

  .suffix {
    .morpheme;
    right: 0;
    i,
    div,
    span {
      padding-right: 12px;
      padding-left: 12px;
      height: 100%;
      display: flex;
      align-items: center;
    }
  }

  .prefix {
    .morpheme;
    left: 0;
    padding-right: 12px;
    padding-left: 12px;
  }

  &.has-prefix input {
    padding-left: 32px;
  }

  &.has-suffix input {
    padding-right: 32px;
  }
}
